{
  "api/Microsoft.DocAsCode.Plugins.Manifest.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.Manifest.html",
    "title": "Class Manifest | DocFX website",
    "keywords": "Class Manifest Inheritance Object Manifest Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class Manifest Constructors Manifest() Declaration public Manifest() Manifest(IEnumerable<ManifestItem>) Declaration public Manifest(IEnumerable<ManifestItem> files) Parameters Type Name Description IEnumerable < ManifestItem > files Properties Files Declaration [JsonProperty(\"files\")] public ManifestItemCollection Files { get; } Property Value Type Description ManifestItemCollection Homepages Declaration [JsonProperty(\"homepages\")] public List<HomepageInfo> Homepages { get; set; } Property Value Type Description List < HomepageInfo > IncrementalInfo Declaration [JsonProperty(\"incremental_info\")] public List<IncrementalInfo> IncrementalInfo { get; set; } Property Value Type Description List < IncrementalInfo > SourceBasePath Declaration [JsonProperty(\"source_base_path\")] public string SourceBasePath { get; set; } Property Value Type Description String Templates Declaration [JsonProperty(\"templates\")] public List<string> Templates { get; set; } Property Value Type Description List < String > VersionInfo Declaration [JsonProperty(\"version_info\")] public Dictionary<string, VersionInfo> VersionInfo { get; set; } Property Value Type Description Dictionary < String , VersionInfo > XRefMap Declaration [JsonProperty(\"xrefmap\")] public object XRefMap { get; set; } Property Value Type Description Object Methods FindOutputFileInfo(String) Declaration public OutputFileInfo FindOutputFileInfo(string relativePath) Parameters Type Name Description String relativePath Returns Type Description OutputFileInfo Extension Methods ManifestFileHelper.AddFile(Manifest, String, String, String) ManifestFileHelper.AddFile(Manifest, ManifestItem, String, String) ManifestFileHelper.RemoveFile(Manifest, String, String) ManifestFileHelper.RemoveFile(Manifest, ManifestItem, String) ManifestFileHelper.Modify(Manifest, Action<Manifest>) ManifestFileHelper.Modify<T>(Manifest, Func<Manifest, T>) ManifestFileHelper.Dereference(Manifest, String, Int32) ManifestFileHelper.Shrink(Manifest, String, Int32) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ManifestItem.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ManifestItem.html",
    "title": "Class ManifestItem | DocFX website",
    "keywords": "Class ManifestItem Inheritance Object ManifestItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class ManifestItem Properties DocumentType Declaration [JsonProperty(\"type\")] public string DocumentType { get; set; } Property Value Type Description String IsIncremental Declaration [JsonProperty(\"is_incremental\")] public bool IsIncremental { get; set; } Property Value Type Description Boolean Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > OutputFiles Declaration [JsonProperty(\"output\")] public OutputFileCollection OutputFiles { get; } Property Value Type Description OutputFileCollection SourceRelativePath Declaration [JsonProperty(\"source_relative_path\")] public string SourceRelativePath { get; set; } Property Value Type Description String Version Declaration [JsonProperty(\"version\")] public string Version { get; set; } Property Value Type Description String Methods Clone() Declaration public ManifestItem Clone() Returns Type Description ManifestItem Clone(Boolean, String) Declaration public ManifestItem Clone(bool isIncremental, string sourceRelativePath) Parameters Type Name Description Boolean isIncremental String sourceRelativePath Returns Type Description ManifestItem Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ManifestItemCollection.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ManifestItemCollection.html",
    "title": "Class ManifestItemCollection | DocFX website",
    "keywords": "Class ManifestItemCollection Inheritance Object Collection < ManifestItem > ObservableCollection < ManifestItem > ManifestItemCollection Inherited Members ObservableCollection<ManifestItem>.Move(Int32, Int32) ObservableCollection<ManifestItem>.RemoveItem(Int32) ObservableCollection<ManifestItem>.InsertItem(Int32, ManifestItem) ObservableCollection<ManifestItem>.SetItem(Int32, ManifestItem) ObservableCollection<ManifestItem>.MoveItem(Int32, Int32) ObservableCollection<ManifestItem>.OnPropertyChanged(PropertyChangedEventArgs) ObservableCollection<ManifestItem>.OnCollectionChanged(NotifyCollectionChangedEventArgs) ObservableCollection<ManifestItem>.BlockReentrancy() ObservableCollection<ManifestItem>.CheckReentrancy() ObservableCollection<ManifestItem>.INotifyPropertyChanged.PropertyChanged ObservableCollection<ManifestItem>.CollectionChanged ObservableCollection<ManifestItem>.PropertyChanged Collection<ManifestItem>.IEnumerable.GetEnumerator() Collection<ManifestItem>.ICollection.CopyTo(Array, Int32) System.Collections.ObjectModel.Collection<Microsoft.DocAsCode.Plugins.ManifestItem>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Microsoft.DocAsCode.Plugins.ManifestItem>.System.Collections.IList.set_Item(System.Int32, System.Object) Collection<ManifestItem>.IList.Add(Object) Collection<ManifestItem>.IList.Contains(Object) Collection<ManifestItem>.IList.IndexOf(Object) Collection<ManifestItem>.IList.Insert(Int32, Object) Collection<ManifestItem>.IList.Remove(Object) Collection<ManifestItem>.Items Collection<ManifestItem>.Item[Int32] Collection<ManifestItem>.ICollection<ManifestItem>.IsReadOnly Collection<ManifestItem>.ICollection.IsSynchronized Collection<ManifestItem>.ICollection.SyncRoot Collection<ManifestItem>.IList.Item[Int32] Collection<ManifestItem>.IList.IsReadOnly Collection<ManifestItem>.IList.IsFixedSize Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class ManifestItemCollection : ObservableCollection<ManifestItem>, IList<ManifestItem>, ICollection<ManifestItem>, IList, ICollection, IReadOnlyList<ManifestItem>, IReadOnlyCollection<ManifestItem>, IEnumerable<ManifestItem>, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged Constructors ManifestItemCollection() Declaration public ManifestItemCollection() ManifestItemCollection(IEnumerable<ManifestItem>) Declaration public ManifestItemCollection(IEnumerable<ManifestItem> collection) Parameters Type Name Description IEnumerable < ManifestItem > collection Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Methods Add(ManifestItem) Declaration public void Add(ManifestItem item) Parameters Type Name Description ManifestItem item AddRange(IEnumerable<ManifestItem>) Declaration public void AddRange(IEnumerable<ManifestItem> collection) Parameters Type Name Description IEnumerable < ManifestItem > collection Clear() Declaration public void Clear() ClearItems() Declaration protected override void ClearItems() Overrides System.Collections.ObjectModel.ObservableCollection<Microsoft.DocAsCode.Plugins.ManifestItem>.ClearItems() Contains(ManifestItem) Declaration public bool Contains(ManifestItem item) Parameters Type Name Description ManifestItem item Returns Type Description Boolean CopyTo(ManifestItem[], Int32) Declaration public void CopyTo(ManifestItem[] array, int arrayIndex) Parameters Type Name Description ManifestItem [] array Int32 arrayIndex GetEnumerator() Declaration public IEnumerator<ManifestItem> GetEnumerator() Returns Type Description IEnumerator < ManifestItem > IndexOf(ManifestItem) Declaration public int IndexOf(ManifestItem item) Parameters Type Name Description ManifestItem item Returns Type Description Int32 Insert(Int32, ManifestItem) Declaration public void Insert(int index, ManifestItem item) Parameters Type Name Description Int32 index ManifestItem item Remove(ManifestItem) Declaration public bool Remove(ManifestItem item) Parameters Type Name Description ManifestItem item Returns Type Description Boolean RemoveAll(Predicate<ManifestItem>) Declaration public int RemoveAll(Predicate<ManifestItem> match) Parameters Type Name Description Predicate < ManifestItem > match Returns Type Description Int32 RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index Extension Methods ManifestFileHelper.Shrink(IEnumerable<ManifestItem>, String, Int32) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>) DocumentExceptionExtensions.RunAll<TElement, TResult>(IReadOnlyList<TElement>, Func<TElement, TResult>) DocumentExceptionExtensions.RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>) DocumentExceptionExtensions.RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>, Int32)"
  },
  "api/Microsoft.DocAsCode.Plugins.MarkdownServiceParameters.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.MarkdownServiceParameters.html",
    "title": "Class MarkdownServiceParameters | DocFX website",
    "keywords": "Class MarkdownServiceParameters Inheritance Object MarkdownServiceParameters Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class MarkdownServiceParameters Properties BasePath Declaration public string BasePath { get; set; } Property Value Type Description String Extensions Declaration public IReadOnlyDictionary<string, object> Extensions { get; set; } Property Value Type Description IReadOnlyDictionary < String , Object > TemplateDir Declaration public string TemplateDir { get; set; } Property Value Type Description String Tokens Declaration public ImmutableDictionary<string, string> Tokens { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , String > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.YamlDeserializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.YamlDeserializer.html",
    "title": "Class YamlDeserializer | DocFX website",
    "keywords": "Class YamlDeserializer A façade for the YAML library with the standard configuration. Inheritance Object YamlDeserializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class YamlDeserializer Constructors YamlDeserializer(IObjectFactory, INamingConvention, Boolean, Boolean) Declaration public YamlDeserializer(IObjectFactory objectFactory = null, INamingConvention namingConvention = null, bool ignoreUnmatched = false, bool ignoreNotFoundAnchor = true) Parameters Type Name Description YamlDotNet.Serialization.IObjectFactory objectFactory YamlDotNet.Serialization.INamingConvention namingConvention Boolean ignoreUnmatched Boolean ignoreNotFoundAnchor Properties NodeDeserializers Declaration public IList<INodeDeserializer> NodeDeserializers { get; } Property Value Type Description IList < YamlDotNet.Serialization.INodeDeserializer > TypeResolvers Declaration public IList<INodeTypeResolver> TypeResolvers { get; } Property Value Type Description IList < YamlDotNet.Serialization.INodeTypeResolver > ValueDeserializer Declaration public IValueDeserializer ValueDeserializer { get; } Property Value Type Description YamlDotNet.Serialization.IValueDeserializer Methods Deserialize(TextReader, Type, IValueDeserializer) Declaration public object Deserialize(TextReader input, Type type, IValueDeserializer deserializer = null) Parameters Type Name Description TextReader input Type type YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description Object Deserialize(TextReader, IValueDeserializer) Declaration public object Deserialize(TextReader input, IValueDeserializer deserializer = null) Parameters Type Name Description TextReader input YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description Object Deserialize(IParser, Type, IValueDeserializer) Deserializes an object of the specified type. Declaration public object Deserialize(IParser parser, Type type, IValueDeserializer deserializer = null) Parameters Type Name Description YamlDotNet.Core.IParser parser The YamlDotNet.Core.IParser where to deserialize the object. Type type The static type of the object to deserialize. YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description Object Returns the deserialized object. Deserialize(IParser, IValueDeserializer) Declaration public object Deserialize(IParser reader, IValueDeserializer deserializer = null) Parameters Type Name Description YamlDotNet.Core.IParser reader YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description Object Deserialize<T>(TextReader, IValueDeserializer) Declaration public T Deserialize<T>(TextReader input, IValueDeserializer deserializer = null) Parameters Type Name Description TextReader input YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description T Type Parameters Name Description T Deserialize<T>(IParser, IValueDeserializer) Declaration public T Deserialize<T>(IParser reader, IValueDeserializer deserializer = null) Parameters Type Name Description YamlDotNet.Core.IParser reader YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description T Type Parameters Name Description T RegisterTagMapping(String, Type) Declaration public void RegisterTagMapping(string tag, Type type) Parameters Type Name Description String tag Type type RegisterTypeConverter(IYamlTypeConverter) Declaration public void RegisterTypeConverter(IYamlTypeConverter typeConverter) Parameters Type Name Description YamlDotNet.Serialization.IYamlTypeConverter typeConverter Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.YamlSerializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.YamlSerializer.html",
    "title": "Class YamlSerializer | DocFX website",
    "keywords": "Class YamlSerializer Inheritance Object YamlSerializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class YamlSerializer Constructors YamlSerializer(SerializationOptions, INamingConvention) Declaration public YamlSerializer(SerializationOptions options = SerializationOptions.None, INamingConvention namingConvention = null) Parameters Type Name Description YamlDotNet.Serialization.SerializationOptions options YamlDotNet.Serialization.INamingConvention namingConvention Methods Serialize(TextWriter, Object) Declaration public void Serialize(TextWriter writer, object graph) Parameters Type Name Description TextWriter writer Object graph Serialize(IEmitter, Object) Declaration public void Serialize(IEmitter emitter, object graph) Parameters Type Name Description YamlDotNet.Core.IEmitter emitter Object graph SerializeValue(IEmitter, Object, Type) Declaration public void SerializeValue(IEmitter emitter, object value, Type type) Parameters Type Name Description YamlDotNet.Core.IEmitter emitter Object value Type type Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization Classes ExtensibleMemberAttribute YamlDeserializer A façade for the YAML library with the standard configuration. YamlSerializer"
  },
  "api/Microsoft.DocAsCode.html": {
    "href": "api/Microsoft.DocAsCode.html",
    "title": "Namespace Microsoft.DocAsCode | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode Classes AssemblyLicenseAttribute AssemblyUsageAttribute BuildJsonConfig CascadableOptions CustomAssemblyTextAttribute FileItems FileMapping FileMapping supports two forms: Array form This form supports multiple file mappings, and also allows additional properties per mapping. e.g. \"key\": [ {\"files\": [\"file1\", \"file2\"], \"dest\": \"dest1\"}, {\"files\": \"file3\", \"dest\": \"dest2\"}, {\"files\": [\"file4\", \"file5\"], \"exclude\": [\"file5\"], \"src\": \"folder1\"}, {\"files\": \"Example.yml\", \"src\": \"v1.0\", \"dest\":\"v1.0/api\", \"version\": \"v1.0\"}, {\"files\": \"Example.yml\", \"src\": \"v2.0\", \"dest\":\"v2.0/api\", \"version\": \"v2.0\"} ] Compact form This form supports multiple file patterns in an array e.g. projects: [\"file1\", \"file2\"] FileMappingConverter FileMappingItem Data model for a file-mapping item FileMetadataPairs FileMetadataPairsConverter FileMetadataPairsItem ListWithStringFallback ListWithStringFallbackConverter MergeJsonConfig MetadataJsonConfig MetadataJsonItemConfig OptionUsageAttribute VersionConfig"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureEngineBuilder.html",
    "title": "Class AzureEngineBuilder | DocFX website",
    "keywords": "Class AzureEngineBuilder Inheritance Object MarkdownEngineBuilder GfmEngineBuilder AzureEngineBuilder Inherited Members MarkdownEngineBuilder.Options MarkdownEngineBuilder.BlockRules MarkdownEngineBuilder.InlineRules MarkdownEngineBuilder.Rewriter MarkdownEngineBuilder.TokenTreeValidator MarkdownEngineBuilder.CreateParseContext() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureEngineBuilder : GfmEngineBuilder Constructors AzureEngineBuilder(Options) Declaration public AzureEngineBuilder(Options options) Parameters Type Name Description Options options Methods BuildBlockRules() Declaration protected override void BuildBlockRules() Overrides GfmEngineBuilder.BuildBlockRules() BuildInlineRules() Declaration protected override void BuildInlineRules() Overrides GfmEngineBuilder.BuildInlineRules() BuildRules() Declaration protected override void BuildRules() Overrides GfmEngineBuilder.BuildRules() CreateEngine(Object) Declaration public override IMarkdownEngine CreateEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description IMarkdownEngine Overrides MarkdownEngineBuilder.CreateEngine(Object) CreateRewriters() Declaration protected void CreateRewriters() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockToken.html",
    "title": "Class AzureIncludeBlockToken | DocFX website",
    "keywords": "Class AzureIncludeBlockToken Inheritance Object AzureIncludeBasicToken AzureIncludeBlockToken Inherited Members AzureIncludeBasicToken.Rule AzureIncludeBasicToken.Context AzureIncludeBasicToken.Src AzureIncludeBasicToken.Name AzureIncludeBasicToken.Title AzureIncludeBasicToken.Raw AzureIncludeBasicToken.SourceInfo AzureIncludeBasicToken.Tokens Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeBlockToken : AzureIncludeBasicToken, IMarkdownToken, IMarkdownRewritable<AzureIncludeBlockToken> Constructors AzureIncludeBlockToken(IMarkdownRule, IMarkdownContext, String, String, String, ImmutableArray<IMarkdownToken>, String, SourceInfo) Declaration public AzureIncludeBlockToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, ImmutableArray<IMarkdownToken> tokens, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens String raw SourceInfo sourceInfo Methods Rewrite(IMarkdownRewriteEngine) Declaration public AzureIncludeBlockToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description AzureIncludeBlockToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockToken.html",
    "title": "Class AzureMigrationIncludeBlockToken | DocFX website",
    "keywords": "Class AzureMigrationIncludeBlockToken Inheritance Object AzureMigrationIncludeBasicToken AzureMigrationIncludeBlockToken Inherited Members AzureMigrationIncludeBasicToken.Rule AzureMigrationIncludeBasicToken.Context AzureMigrationIncludeBasicToken.Name AzureMigrationIncludeBasicToken.Src AzureMigrationIncludeBasicToken.Title AzureMigrationIncludeBasicToken.SourceInfo Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeBlockToken : AzureMigrationIncludeBasicToken, IMarkdownToken Constructors AzureMigrationIncludeBlockToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration public AzureMigrationIncludeBlockToken(IMarkdownRule rule, IMarkdownContext context, string name, string src, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String src String title SourceInfo sourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockToken.html",
    "title": "Class AzureNoteBlockToken | DocFX website",
    "keywords": "Class AzureNoteBlockToken Inheritance Object AzureNoteBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureNoteBlockToken : IMarkdownToken Constructors AzureNoteBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public AzureNoteBlockToken(IMarkdownRule rule, IMarkdownContext context, string noteType, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String noteType String content SourceInfo sourceInfo Properties Content Declaration public string Content { get; } Property Value Type Description String Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context NoteType Declaration public string NoteType { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.BaseDocumentBuildStep.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.BaseDocumentBuildStep.html",
    "title": "Class BaseDocumentBuildStep | DocFX website",
    "keywords": "Class BaseDocumentBuildStep Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument BuildReferenceDocumentBase BuildConceptualDocument CountWord ValidateConceptualDocumentMetadata ApplyPlatformVersion FillReferenceInformation MergeManagedReferenceDocument ValidateManagedReferenceDocumentMetadata ValidateResourceMetadata ValidateRestApiDocumentMetadata BuildTocDocument Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class BaseDocumentBuildStep : IDocumentBuildStep Properties BuildOrder Declaration public abstract int BuildOrder { get; } Property Value Type Description Int32 Implements IDocumentBuildStep.BuildOrder Name Declaration public abstract string Name { get; } Property Value Type Description String Implements IDocumentBuildStep.Name Methods Build(FileModel, IHostService) Declaration public virtual void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Implements IDocumentBuildStep.Build(FileModel, IHostService) Postbuild(ImmutableList<FileModel>, IHostService) Declaration public virtual void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Implements IDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Prebuild(ImmutableList<FileModel>, IHostService) Declaration public virtual IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Implements IDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIEnumerableItems-1.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIEnumerableItems-1.html",
    "title": "Class HandleGenericItemsHelper.EnumerateIEnumerableItems<TValue> | DocFX website",
    "keywords": "Class HandleGenericItemsHelper.EnumerateIEnumerableItems<TValue> Inheritance Object HandleGenericItemsHelper.EnumerateIEnumerableItems<TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public sealed class EnumerateIEnumerableItems<TValue> : HandleGenericItemsHelper.IHandleItems Type Parameters Name Description TValue Constructors EnumerateIEnumerableItems(IEnumerable<TValue>) Declaration public EnumerateIEnumerableItems(IEnumerable<TValue> list) Parameters Type Name Description IEnumerable <TValue> list Methods Handle(Func<Object, Object>) Declaration public void Handle(Func<object, object> enumerate) Parameters Type Name Description Func < Object , Object > enumerate Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.BuildConceptualDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.BuildConceptualDocument.html",
    "title": "Class BuildConceptualDocument | DocFX website",
    "keywords": "Class BuildConceptualDocument Inheritance Object BaseDocumentBuildStep BuildConceptualDocument Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ConceptualDocuments Assembly :Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(\"ConceptualDocumentProcessor\", typeof (IDocumentBuildStep))] public class BuildConceptualDocument : BaseDocumentBuildStep, ISupportIncrementalBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Implements IDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Implements IDocumentBuildStep.Name Methods Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) Implements IDocumentBuildStep.Build(FileModel, IHostService) CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > Implements ISupportIncrementalBuildStep.GetDependencyTypesToRegister() GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep.GetIncrementalContextHash() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.CompositeResourceCollectionWithOverridden.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.CompositeResourceCollectionWithOverridden.html",
    "title": "Class CompositeResourceCollectionWithOverridden | DocFX website",
    "keywords": "Class CompositeResourceCollectionWithOverridden Inheritance Object ResourceCollection CompositeResourceCollectionWithOverridden Inherited Members ResourceCollection.GetResource(String) ResourceCollection.GetResources(String) ResourceCollection.GetResourceStreams(String) ResourceCollection.Dispose() ResourceCollection.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class CompositeResourceCollectionWithOverridden : ResourceCollection, IDisposable Constructors CompositeResourceCollectionWithOverridden(IEnumerable<ResourceCollection>) Declaration public CompositeResourceCollectionWithOverridden(IEnumerable<ResourceCollection> collectionsInOverriddenOrder) Parameters Type Name Description IEnumerable < ResourceCollection > collectionsInOverriddenOrder Properties IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceCollection.IsEmpty Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceCollection.Name Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceCollection.Names Methods Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides ResourceCollection.Dispose(Boolean) GetResourceStream(String) Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceCollection.GetResourceStream(String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "tutorial/docfx_getting_started.html": {
    "href": "tutorial/docfx_getting_started.html",
    "title": "Getting Started with DocFX | DocFX website",
    "keywords": "Getting Started with DocFX 1. What is DocFX DocFX is an API documentation generator for .NET, and currently it supports C# and VB. It generates API reference documentation from triple-slash comments in your source code. It also allows you to use Markdown files to create additional topics such as tutorials and how-tos, and to customize the generated reference documentation. DocFX builds a static HTML website from your source code and Markdown files, which can be easily hosted on any web servers (for example, github.io ). Also, DocFX provides you the flexibility to customize the layout and style of your website through templates. If you are interested in creating your own website with your own styles, you can follow how to create custom template to create custom templates. DocFX also has the following cool features: Integration with your source code. You can click \"View Source\" on an API to navigate to the source code in GitHub (your source code must be pushed to GitHub). Cross-platform support. We have both exe version that runs under Windows and a .NET Core version that runs cross platform. Integration with Visual Studio. You can seamlessly use DocFX within Visual Studio. Markdown extensions. We introduced DocFX Flavored Markdown(DFM) to help you write API documentation. DFM is 100% compatible with GitHub Flavored Markdown(GFM) with some useful extensions, like file inclusion , code snippet , cross reference , and yaml header . For detailed description about DFM, please refer to DFM . 2. Use DocFX as a command-line tool Note Please make sure .NET Core and .NET Framework 4.6 are installed. Step1. DocFX ships as a chocolatey package . Install docfx through Chocolatey by calling cinst docfx -y . Alternatively, you can download and unzip docfx.zip from https://github.com/dotnet/docfx/releases , extract it to a local folder, and add it to PATH so you can run it anywhere. Step2. Create a sample project docfx init -q This command generates a default project named docfx_project . Step3. Build the website docfx docfx_project\\docfx.json --serve Now you can view the generated website on http://localhost:8080 . 3. Use DocFX with a Build Server DocFX can be used in a Continuous Integration environment. Most build systems do not checkout the branch that is being built, but use a detached head for the specific commit. DoxFX needs the the branch name to implement the View Source link in the API documentation. Setting the environment variable DOCFX_SOURCE_BRANCH_NAME tells DocFX which branch name to use. Many build systems set an environment variable with the branch name. DocFX uses the following: APPVEYOR_REPO_BRANCH - AppVeyor BUILD_SOURCEBRANCHNAME - Visual Studio Team Services CI_BUILD_REF_NAME - GitLab CI Git_Branch - TeamCity GIT_BRANCH - Jenkins GIT_LOCAL_BRANCH - Jenkins Note Known issue in AppVeyor : Currently platform: Any CPU in appveyor.yml causes docfx metadata failure. https://github.com/dotnet/docfx/issues/1078 4. Build from source code As a prerequisite, you need: Visual Studio 2017 with .NET Core cross-platform development toolset Node.js Step1. git clone https://github.com/dotnet/docfx.git to get the latest code. Step2. Run build.cmd under root folder. Step3. Add artifacts folder to nuget source by in IDE: Tools > NuGet Package Manager > Package Manager Settings > Package Sources Step4. Follow steps in #2, #3, #4 to use DocFX in command-line, IDE or .NET Core. 6. A seed project to play with DocFX Here is a seed project https://github.com/docascode/docfx-seed . It contains A basic C# project under src . Several conceptual files under articles . An overwrite file to add extra content to API under specs . toc.yml under root folder. It renders as the navbar of the website. docfx.json under root folder. It is the configuration file that docfx depends upon. Tip It is a good practice to separate files with different type into different folders. 7. Q&A Q: How do I quickly reference APIs from other APIs or conceptual files? A: Use @uid syntax. Q: What is uid and where do I find uid ? A: Refer to Cross Reference section in DFM . Q: How do I quickly find uid in the website? A: In the generated website, hit F12 to view source, and look at the title of an API. You can find uid in data-uid attribute."
  },
  "tutorial/howto_add_a_customized_post_processor.html": {
    "href": "tutorial/howto_add_a_customized_post_processor.html",
    "title": "How-to: Add a customized post-processor | DocFX website",
    "keywords": "How-to: Add a customized post-processor We provide the ability to process output files by adding a customized post-processor. In DocFX, the index file for full-text-search is generated by one post-processor named ExtractSearchIndex . In this topic, we will show how to add a customized post-processor. Step0: Preparation Create a new C# class library project in Visual Studio . Add nuget packages: System.Collections.Immutable with version 1.1.37 Microsoft.Composition with version 1.0.27 Add Microsoft.DocAsCode.Plugins If you are building DocFX from source code, add this reference to the project, otherwise add the nuget package Microsoft.DocAsCode.Plugins with the same version as DocFX. Step1: Create a new class (MyProcessor.cs) with the following code: [Export(nameof(MyProcessor), typeof(IPostProcessor))] public class MyProcessor : IPostProcessor { // TODO: implements IPostProcessor } Step2: Update global metadata public ImmutableDictionary<string, object> PrepareMetadata(ImmutableDictionary<string, object> metadata) { // TODO: add/remove/update property from global metadata return metadata; } In this method, we can update the global metadata before building all the files declared in docfx.json . Otherwise, you can just return the metadata from parameters if you don't need to change global metadata. Using ExtractSearchIndex for example, we add \"_enableSearch\": true in global metadata. The default template would then know it should load a search box in the navbar. Step3: Process all the files generated by DocFX public Manifest Process(Manifest manifest, string outputFolder) { // TODO: add/remove/update all the files included in manifest return manifest; } Input for the method manifest contains a list of all files to process, and outputFolder specifies the output folder where our static website will be placed. We can implement customized operations here to process all files generated by DocFX. Note Post-processor aims to process the output files, so the FileModel can't be accessed in this phase. If some metadata is needed here, an option is to save it in FileModel.ManifestProperties in build phase, then access it through ManifestItem.Metadata . Another option is to save it somewhere in output files, like HTML's <meta> Tag. Using ExtractSearchIndex for example again, we traverse all HTML files, extract key words from these HTML files and save a file named index.json under the outputFolder . Finally we return the manifest which is not modified. Step4: Build your project and copy the output dll files to: Global: the folder with name Plugins under DocFX.exe Non-global: the folder with name Plugins under a template folder, then run DocFX build command with parameter -t {template} . Hint : DocFX can merge templates, so we can specify multiple template folders as DocFX build -t {templateForRender},{templateForPlugins} . Each of the template folders should have a subfolder named Plugins with exported assemblies. Step5: Add your post processor in docfx.json In this step, we need to enable the processor by adding its name in docfx.json . Here is an example: { \"build\": { ... \"postProcessors\": [\"OutputPDF\", \"BeautifyHTML\", \"OutputPDF\"] } } As you can see, the postProcessors is an array, which means it could have multiple processors. It needs to be pointed out that the order of postProcessors written in docfx.json is also the order to process output files. In the above example, DocFX will run OutputPDF first, then BeautifyHTML , and then OutputPDF again. If you want to enable the post processors without changing docfx.json , you can use the build command option like docfx build --postProcessors=OutputPDF,BeautifyHTML,OutputPDF . One more thing need to be noted: the build command option postProcessors would override the corresponding configuration in docfx.json ."
  },
  "tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.html": {
    "href": "tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.html",
    "title": "How-to: Build your own type of documentation with a custom plug-in | DocFX website",
    "keywords": "How-to: Build your own type of documentation with a custom plug-in In this topic we will create a plug-in to convert some simple rich text format files to html documents. Goal and limitation In scope: Our input will be a set of rtf files with .rtf as the file extension name. The rtf files will be built as html document. Out of scope: Picture or other object in rtf files. Hyperlink in rtf files. (in the advanced tutorial , we will describe how to support hyperlinks in a custom plugin.) Metadata and title. Preparation Create a new C# class library project in Visual Studio . Add nuget packages: System.Collections.Immutable with version 1.1.37 Microsoft.Composition with version 1.0.27 Add Microsoft.DocAsCode.Plugins If building DocFX from source code then add a reference to the project, otherwise add the nuget package Microsoft.DocAsCode.Plugins with the same version as DocFX. Add framework assembly references: PresentationCore , PresentationFramework , WindowsBase Add a project for converting rtf to html: Clone project MarkupConverter , and reference it. Copy the code file StaTaskScheduler.cs from ParExtSamples Create a document processor Responsibility of the document processor Declare which file can be handled. Load from the file to the object model. Provide build steps. Report document type, file links and xref links in document. Update references. Create our RtfDocumentProcessor Create a new class (RtfDocumentProcessor.cs) with the following code: [Export(typeof(IDocumentProcessor))] public class RtfDocumentProcessor : IDocumentProcessor { // todo : implements IDocumentProcessor. } Declare that we can handle the .rtf file: public ProcessingPriority GetProcessingPriority(FileAndType file) { if (file.Type == DocumentType.Article && \".rtf\".Equals(Path.GetExtension(file.File), StringComparison.OrdinalIgnoreCase)) { return ProcessingPriority.Normal; } return ProcessingPriority.NotSupported; } Here we declare this processor can handle any .rtf file in the article category with normal priority. When two or more processors compete for the same file, DocFX will give it to the higher priority one. Unexpected : two or more processor declare for the same file with same priority. Load our rtf file by reading all text: public FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) { var content = new Dictionary<string, object> { [\"conceptual\"] = File.ReadAllText(Path.Combine(file.BaseDir, file.File)), [\"type\"] = \"Conceptual\", [\"path\"] = file.File, }; return new FileModel(file, content); } We use Dictionary<string, object> as the data model, similar to how ConceptualDocumentProcessor stores the content of markdown files. Implement Save method as follows: public SaveResult Save(FileModel model) { return new SaveResult { DocumentType = \"Conceptual\", ModelFile = model.File, LinkToFiles = linkToFiles.ToImmutableArray(), }; } BuildSteps property can provide several build steps for the model. We suggest implementing this in the following manner: [ImportMany(nameof(RtfDocumentProcessor))] public IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Name property is used to display in the log, so give any constant string you like. e.g.: public string Name => nameof(RtfDocumentProcessor); Since we don't support hyperlink, keep the UpdateHref method empty. public void UpdateHref(FileModel model, IDocumentBuildContext context) { } View the final RtfDocumentProcessor.cs Create a document build step Responsibility of the build step Reconstruct documents via the Prebuild method, e.g.: remove some document according to a certain rule. Transform document content via Build method, e.g.: transform rtf content to html content. Transform more content required by all document processed via the PostBuild method, e.g.: extract the link text from the title of another document. About build order: For all documents in one processor always Prebuild -> Build -> Postbuild . For all documents in one processor always invoke Prebuild by BuildOrder . For each document in one processor always invoke Build by BuildOrder . For all documents in one processor always invoke Postbuild by BuildOrder . e.g.: Document processor X has two steps: A (with BuildOrder=1), B (with BuildOrder=2). When X is handling documents [D1, D2, D3], the invoke order is as follows: A.Prebuild([D1, D2, D3]) returns [D1, D2, D3] B.Prebuild([D1, D2, D3]) returns [D1, D2, D3] Parallel( A.Build(D1) -> B.Build(D1), A.Build(D2) -> B.Build(D2), A.Build(D3) -> B.Build(D3) ) A.Postbuild([D1, D2, D3]) B.Postbuild([D1, D2, D3]) Create our RtfBuildStep: Create a new class (RtfBuildStep.cs), and declare it is a build step for RtfDocumentProcessor : [Export(nameof(RtfDocumentProcessor), typeof(IDocumentBuildStep))] public class RtfBuildStep : IDocumentBuildStep { // todo : implements IDocumentBuildStep. } In the Build method, convert rtf to html: private readonly TaskFactory _taskFactory = new TaskFactory(new StaTaskScheduler(1)); public void Build(FileModel model, IHostService host) { string content = (string)((Dictionary<string, object>)model.Content)[\"conceptual\"]; content = _taskFactory.StartNew(() => RtfToHtmlConverter.ConvertRtfToHtml(content)).Result; ((Dictionary<string, object>)model.Content)[\"conceptual\"] = content; } Implement other methods: public int BuildOrder => 0; public string Name => nameof(RtfBuildStep); public void Postbuild(ImmutableList<FileModel> models, IHostService host) { } public IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) { return models; } View the final RtfBuildStep.cs Enable plug-in Build our project. Copy the output dll files to: Global: the folder with name Plugins under DocFX.exe Non-global: the folder with name Plugins under a template folder. Then run DocFX build command with parameter -t {template} . Hint : DocFX can merge templates so create a template that only contains the Plugins folder, then run the command DocFX build with parameter -t {templateForRender},{templateForPlugins} . Build document Run command DocFX init and set the source article with **.rtf . Run command DocFX build ."
  },
  "tutorial/howto_create_custom_template.html": {
    "href": "tutorial/howto_create_custom_template.html",
    "title": "How-to: Create A Custom Template | DocFX website",
    "keywords": "How-to: Create A Custom Template Templates are organized as a zip package or a folder. The file path (without the .zip extension) of the zip package or the path of the folder is considered to be the template name. Quickstart Let's create a template to transform Markdown files into a simple html file. Step 1. Create a template folder Create a folder for the template, for example, c:/docfx_howto/simple_template . Step 2. Add Renderer file Create a file conceptual.html.primary.tmpl under the template folder with the following content: {{{conceptual}}} Now a simple custom template is created. You may notice that DocFX reports a warning message saying that: Warning: [Build Document.Apply Templates]There is no template processing document type(s): Toc . It is because our custom template only specifies how to handle document with type conceptual . To test the output of the template, create a simple documentation project following Walkthrough Part I or download the zipped documentation project directly. In the documentation project, run docfx build docfx.json -t c:/docfx_howto/simple_template --serve . The -t command option specifies the template name(s) used by the current build. Open http://localhost:8080 and you can see a simple web page as follows: Add Preprocessor file Step 3. Add Preprocessor file Sometimes the input data model is not exactly what Renderer wants, you may want to add some properties to the data model, or modify the data model a little bit before applying the Renderer file. This can be done by creating a Preprocessor file. Create a file conceptual.html.primary.js under the template folder with the following content: exports.transform = function (model) { model._extra_property = \"Hello world\"; return model; } Update the file conceptual.html.primary.tmpl with the following content: <h1>{{_extra_property}}</h1> {{{conceptual}}} In the documentation project, run docfx build docfx.json -t c:/docfx_howto/simple_template --serve . Open http://localhost:8080 and you can see _extra_property is added to the web page. Merge template with default template DocFX contains some embedded template resources that you can refer to directly. You can use docfx template list to list available templates provided by DocFX. Take default template as an example. Run docfx template export default . It exports what's inside default template into the folder _exported_templates . You can see that there are sets of Preprocessor and Renderer files to deal with different types of documents. DocFX supports specifying multiple templates for a documentation project. That allows you to leverage the default template for handling other types of documents, together with your custom template. When dealing with multiple templates, DocFX merges the files inside these templates. The principle for merging is: if a file name collides then the file in the latter template overwrites the one in the former template. For example, you can merge default template and your custom template by calling docfx build docfx.json -t default, c:/docfx_howto/simple_template . Multiple templates are split by a comma , in the command line. Or you can define it in docfx.json by: \"build\": { \"template\": [ \"default\", \"c:/docfx_howto/simple_template\" ] } In the documentation project, run docfx build docfx.json -t default,c:/docfx_howto/simple_template --serve . Now the warning message There is no template processing document type(s): Toc disappears because the default template contains Renderer to handle TOC files. Open http://localhost:8080/toc.html and you can see a toc web page. Tip Run docfx template export default to view what's inside the default template. Note It is possible that DocFX updates its embedded templates when a new version is released. So please make sure to re-export the template if you overwrite or are dependent on it in your custom template. Extension for Preprocessor file If you want to modify some properties based on DocFX default template's Preprocessor , you can use Preprocessor extension file to achieve this. For example, if you want to add a property to the managed reference's data model after default template's Preprocessor , you can update the file ManagedReference.extension.js in your custom template with the following content: /** * This method will be called at the start of exports.transform in ManagedReference.html.primary.js */ exports.preTransform = function (model) { return model; } /** * This method will be called at the end of exports.transform in ManagedReference.html.primary.js */ exports.postTransform = function (model) { model._extra_property = \"Hello world\"; return model; } Compared with modifying ManagedReference.html.primary.js directely, you needn't worry about merging your custom templates with DocFX's embedded templates when DocFX updates."
  },
  "tutorial/howto_filter_out_unwanted_apis_attributes.html": {
    "href": "tutorial/howto_filter_out_unwanted_apis_attributes.html",
    "title": "How-to: Filter Out Unwanted APIs or Attributes | DocFX website",
    "keywords": "How-to: Filter Out Unwanted APIs or Attributes A filter configuration file is in YAML format. You may filter out unwanted APIs or attributes by providing a filter configuration file and specifying its path. Specifying the filter configuration file path The path of the configuration file is specified in the following two ways. Option 1 could overwrite option 2. docfx.exe metadata command argument. docfx.exe metadata -filter <path relative to baseDir or absolutepath> docfx.json metadata section filter property. Sample { \"metadata\": [ { \"src\": [ { \"files\": [ \"src/**.csproj\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\" ] } ], \"dest\": \"obj/api\", \"filter\": \"filterConfig.yml\" } ] } DocFX has a default filter configuration . If the user doesn't specify the filter configuration file path, default filter configuration would be used. Otherwise, user provided filter configuration would merge with the default one. If there is a conflict, user specified would overwrite the default one. The format of the filter configuration file 1. API Filter Rules To filter out APIs, you could specify apiRules with a list of exclude or include rules. Note The rules would be executed sequentially and the matching process would stop once one rule is matched. Namely, you need to put the most detailed rule in the top. If no rule is matched the API would be included by default. 1) exclude or include APIs by matching their uid with the Regex uidRegex . The sample below excludes all APIs whose uids start with 'Microsoft.DevDiv' except those that start with 'Microsoft.DevDiv.SpecialCase'. - include: uidRegex: ^Microsoft\\.DevDiv\\.SpecialCase - exclude: uidRegex: ^Microsoft\\.DevDiv 2) exclude or include APIs by matching its type , this is often combined with uidRegex . Supported type : Namespace Type Class Struct Enum Interface Delegate Member Event Field Method Property Note Type could be Class , Struct , Enum , Interface , or Delegate . Member could be Event , Field , Method , or Property . Namespace is flattened. Namely, excluding namespace 'A.B' has nothing to do with namespace 'A.B.C'. If a namespace is excluded, all types/members defined in the namespace would also be excluded. If a type is excluded, all members defined in the type would also be excluded. The below sample would exclude all APIs whose uid starts with 'Microsoft.DevDiv' and type is Type , namely Class , Struct , Enum , Interface , or Delegate . - exclude: uidRegex: ^Microsoft\\.DevDiv type: Type 3) exclude or include APIs by containing matched attributes. You can specify an attribute by its uid , ctorArguments and ctorNamedArguments . Note ctorArguments requires a full match of the attribute's constructor arguments, while ctorNamedArguments supports a partial match. Namely, ctorArguments should contain all the arguments while ctorNamedArguments could contain a subset of the named arguments. The sample below excludes all APIs which have EditorBrowsableAttribute and its constructor argument is EditorBrowsableState.Never. - exclude: hasAttribute: uid: System.ComponentModel.EditorBrowsableAttribute ctorArguments: - System.ComponentModel.EditorBrowsableState.Never The sample below excludes all APIs which have AttributeUsageAttribute and its constructor argument is AttributeTargets.Class and its constructor has named argument [Inherited] = true - exclude: hasAttribute: uid: System.AttributeUsageAttribute ctorArguments: - System.AttributeTargets.Class ctorNamedArguments: Inherited: \"true\" A complete Sample of the filter configuration file for filtering out APIs follows: apiRules: - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.IRowSetsNative$ - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.MetadataRowSetsNative$ - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.RowSet\\.Columns.*$ type: Member - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.RowSetColumn\\.Name.*$ type: Member - exclude: hasAttribute: uid: System.ComponentModel.EditorBrowsableAttribute ctorArguments: - System.ComponentModel.EditorBrowsableState.Never 2. Attribute Filter Rules To filter out Attributes, you could specify attributeRules with a list of exclude or include rules. The rules are similar to API filter. Please refer to API Filter Rules section. 3. Default Filter Configuration apiRules: - exclude: hasAttribute: uid: System.ComponentModel.EditorBrowsableAttribute ctorArguments: - System.ComponentModel.EditorBrowsableState.Never attributeRules: - exclude: uidRegex: ^System\\.ComponentModel\\.Design$ type: Namespace - exclude: uidRegex: ^System\\.ComponentModel\\.Design\\.Serialization$ type: Namespace - exclude: uidRegex: ^System\\.Xml\\.Serialization$ type: Namespace - exclude: uidRegex: ^System\\.Web\\.Compilation$ type: Namespace - exclude: uidRegex: ^System\\.Runtime\\.Versioning$ type: Namespace - exclude: uidRegex: ^System\\.Runtime\\.ConstrainedExecution$ type: Namespace - exclude: uidRegex: ^System\\.EnterpriseServices$ type: Namespace - exclude: uidRegex: ^System\\.Diagnostics\\.CodeAnalysis$ type: Namespace - include: uidRegex: ^System\\.Diagnostics\\.(ConditionalAttribute|EventLogPermissionAttribute|PerformanceCounterPermissionAttribute)$ type: Type - exclude: uidRegex: '^System\\.Diagnostics\\.[^.]+$' type: Type - include: uidRegex: ^System\\.ComponentModel\\.(BindableAttribute|BrowsableAttribute|ComplexBindingPropertiesAttribute|DataObjectAttribute|DefaultBindingPropertyAttribute|ListBindableAttribute|LookupBindingPropertiesAttribute|SettingsBindableAttribute|TypeConverterAttribute)$ type: Type - exclude: uidRegex: '^System\\.ComponentModel\\.[^.]+$' type: Type - exclude: uidRegex: ^System\\.Reflection\\.DefaultMemberAttribute$ type: Type - exclude: uidRegex: ^System\\.CodeDom\\.Compiler\\.GeneratedCodeAttribute$ type: Type - include: uidRegex: ^System\\.Runtime\\.CompilerServices\\.ExtensionAttribute$ type: Type - exclude: uidRegex: '^System\\.Runtime\\.CompilerServices\\.[^.]+$' type: Type - include: uidRegex: ^System\\.Runtime\\.InteropServices\\.(ComVisibleAttribute|GuidAttribute|ClassInterfaceAttribute|InterfaceTypeAttribute)$ type: Type - exclude: uidRegex: '^System\\.Runtime\\.InteropServices\\.[^.]+$' type: Type - include: uidRegex: ^System\\.Security\\.(SecurityCriticalAttribute|SecurityTreatAsSafeAttribute|AllowPartiallyTrustedCallersAttribute)$ type: Type - exclude: uidRegex: '^System\\.Security\\.[^.]+$' type: Type - include: uidRegex: ^System\\.Web\\.UI\\.(ControlValuePropertyAttribute|PersistenceModeAttribute|ValidationPropertyAttribute|WebResourceAttribute|TemplateContainerAttribute|ThemeableAttribute|TemplateInstanceAttribute)$ type: Type - exclude: uidRegex: '^System\\.Web\\.UI\\.[^.]+$' type: Type - include: uidRegex: ^System\\.Windows\\.Markup\\.(ConstructorArgumentAttribute|DesignerSerializationOptionsAttribute|ValueSerializerAttribute|XmlnsCompatibleWithAttribute|XmlnsDefinitionAttribute|XmlnsPrefixAttribute)$ type: Type - exclude: uidRegex: '^System\\.Windows\\.Markup\\.[^.]+$' type: Type"
  },
  "tutorial/intro_markdown_lite.html": {
    "href": "tutorial/intro_markdown_lite.html",
    "title": "Markdown Lite | DocFX website",
    "keywords": "Markdown Lite Introduction Markdown lite is a simple markdown tool to markup md file. Design goal We write this tool for good extensibility, so our implementation should obey following principles: Extensibility: Support markdown syntax extension. Support validation extension. Correctness: We follow GFM syntax, but when some rules is too hard to implement, just breaking. Performance: Performance is not our major concern. Steps There are three steps when calling markup method : Parse Rewrite or validate Render Step 1: Parse In this step, it will parse markdown text to tokens . The parser is based on rules , which make up the context . For example, heading token is created by heading rule , the heading rule is belonging to block context . Step 2: Rewrite or validate In this step, it will walk through all tokens , we can change it to another, or just validate. For example, we can create a rewriter to change all heading token with depth + 1: MarkdownTokenRewriterFactory.FromLambda<IMarkdownRewriteEngine, MarkdownHeadingBlockToken>( (engine, token) => new MarkdownHeadingBlockToken(token.Rule, token.Context, token.Content, token.Id, token.Depth + 1, token.SourceInfo); Step 3: Render In this step, it renders models to text content (html format by default). To simplify extension, we created an adapter , the adapter invoke methods by following rules: Method name is Render Instance method Return type is StringBuffer The count of parameters is 3, and types are following: IMarkdownRenderer or any type implements it. IMarkdownToken or any type implements it. IMarkdownContext or any type implements it. Always invoke the best overloaded method (The best is defined by binder ). Engine and engine builder Engine is a set of parser, rewriter and renderer. It can markup a markdown file to html file (or others). But it cannot be invoked in parallel. So we create an engine builder . It defines all the rules of parser, rewriter and renderer. It can create instances when needed. How to customize markdown syntax Define markdown syntax Define markdown: : My label should be rendered as following html: <div id=\"My label\"></div> Select token kind First of all, we should select the context for this rule. And in this goal, the new line is required. So it should be a block token , all of the names for class should contain Block . Define token Create a token class like following: public class MarkdownMyLabelBlockToken : IMarkdownToken { public MarkdownMyLabelBlockToken(IMarkdownRule rule, IMarkdownContext context, string label, SourceInfo sourceInfo) { Rule = rule; Context = context; Label = label; SourceInfo = sourceInfo; } public IMarkdownRule Rule { get; } public IMarkdownContext Context { get; } public string Label { get; } public SourceInfo SourceInfo { get; } } Define rule Create a rule class as following: public class MarkdownMyLabelBlockRule : IMarkdownRule { public virtual string Name => \"My Label\"; public virtual Regex LabelRegex { get; } = new Regex(\"^\\: *([^\\n]+?) *(?:\\n+|$)\"); public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) { var match = LabelRegex.Match(context.CurrentMarkdown); if (match.Length == 0) { return null; } var sourceInfo = context.Consume(match.Length); return new MarkdownMyLabelBlockToken(this, parser.Context, match.Group[1].Value, sourceInfo); } } Define renderer Create a renderer class as following: public class MyRenderer : HtmlRenderer { public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownMyLabelBlockToken token, IMarkdownContext context) { return StringBuffer.Empty + \"<div id=\\\"\" + token.Label + \"\\\"></div>\"; } } Define engine builder Create an engine builder class as following: public class MyEngineBuilder : GfmEngineBuilder { public MyEngineBuilder(Options options) : base(options) { BlockRules = BlockRules.Insert(0, new MarkdownMyLabelBlockRule()); } } Markup it! Then use your custom markdown in your code: public string MarkupMyMarkdown(string markdown) { var builder = new MyEngineBuilder(new Options()); var engine = builder.CreateEngine(new MyRender()) return engine.Markup(markdown); }"
  },
  "tutorial/intro_overwrite_files.html": {
    "href": "tutorial/intro_overwrite_files.html",
    "title": "Overwrite Files | DocFX website",
    "keywords": "Overwrite Files Introduction DocFX supports processing Markdown files, as well as structured data model in YAML or JSON format. We call Markdown files Conceptual File s, and the structured data model files Metadata File s. Current supported Metadata File s include: YAML files presenting managed reference model following Metadata Format for .NET Languages . Swagger JSON files presenting Swagger REST API model following Swagger Specification Version 2.0 . Inside DocFX, both Conceptual File s and Metadata File s are represented as Model s with different properties. Details on Model structure for these files are described in Data model inside DocFX section. DocFX introduces the concept of Overwrite File to modify or add properties to Model s without changing the input Conceptual File s and Metadata File s. The format of Overwrite File s Overwrite File s are Markdown files with multiple Overwrite Section s starting with YAML header block. A valid YAML header for an Overwrite Section MUST take the form of valid YAML set between triple-dashed lines and start with property uid . Here is a basic example of an Overwrite Section : --- uid: microsoft.com/docfx/Contacts some_property: value --- Further description for `microsoft.com/docfx/Contacts` Each Overwrite Section is transformed to Overwrite Model inside DocFX. For the above example, the Overwrite Model represented in YAML format is: uid: microsoft.com/docfx/Contacts some_property: value conceptual: <p><b>Content</b> in Markdown</p> Anchor *content *content is the keyword invented and used specifically in Overwrite File s to represent the Markdown content following YAML header. We leverage Anchors syntax in YAML specification for *content . The value for *content is always transformed from Markdown content to HTML. When *content is not used, the Markdown content below YAML header will be set to conceptual property; When *content is used, the Markdown content below YAML header will no longer be set to conceptual property. With *content , we can easily add Markdown content to any properties. --- uid: microsoft.com/docfx/Contacts footer: *content --- Footer for `microsoft.com/docfx/Contacts` In the above example, the value for *content is <p>Footer for <code>microsoft.com/docfx/Contacts</code></p> , and the Overwrite Model represented in YAML format is: uid: microsoft.com/docfx/Contacts footer: <p>Footer for <code>microsoft.com/docfx/Contacts</code></p> uid for an Overwrite Model stands for the Unique IDentifier of the Model it will overwrite. So it is allowed to have multiple Overwrite Section s with YAML Header containing the same uid . For one Overwrite File , the latter Overwrite Section overwrites the former one with the same uid . For different Overwrite File s, the order of overwrite is Undetermined . So it is suggested to have Overwrite Sections with the same uid in the same Overwrite File . When processing Conceptual File s and Metadata File s, Overwrite Model s with the same uid are applied to the processed Model s. Different Model s have different overwrite principles, Overwrite principles section describes the them in detail. Apply Overwrite File s Inside docfx.json , overwrite is used to specify the Overwrite File s. Overwrite principles As a general principle, uid is always the key that an Overwrite Model find the Model it is going to overwrite. So a Model with no uid defined will never get overwritten. Different types of files produce different Model s. The quickest way to get an idea of what the Model looks like is to run: docfx build --exportRawModel --exportRawModel exports Model in JSON format with .raw.json extension. The basic principle of Overwrite Model is: It keeps the same data structure as the Model it is going to overwrite If the property is defined in Model , please refer Data model inside DocFX for the specific overwrite behavior for a specific property. If the property is not defined in Model , it is added to Model Data model inside DocFX Managed reference model Key Type Overwrite behavior uid uid Merge key. assemblies string[] Ignore. attributes Attribute [] Ignore. children uid[] Ignore. documentation Source Merge. example string[] Replace. exceptions Exception [] Merge keyed list. fullName string Replace. fullName. string Replace. id string Replace. implements uid[] Ignore. inheritance uid[] Ignore. inheritedMembers uid[] Ignore. isEii boolean Replace. isExtensionMethod boolean Replace. langs string[] Replace. modifiers. string[] Ignore. name string Replace. name. string Replace. namespace uid Replace. overridden uid Replace. parent uid Replace. platform string[] Replace. remarks markdown Replace. see LinkInfo [] Merge keyed list. seealso LinkInfo [] Merge keyed list. source Source Merge. syntax Syntax Merge. summary markdown Replace. type string Replace. Source Property Type Overwrite behavior base string Replace. content string Replace. endLine integer Replace. id string Replace. isExternal boolean Replace. href string Replace. path string Replace. remote GitSource Merge. startLine integer Replace. GitSource Property Type Overwrite behavior path string Replace. branch string Replace. repo url Replace. commit Commit Merge. key string Replace. Commit Property Type Overwrite behavior committer User Replace. author User Replace. id string Replace. message string Replace. User Property Type Overwrite behavior name string Replace. email string Replace. date datetime Replace. Exception Property Type Overwrite behavior type uid Merge key. description markdown Replace. commentId string Ignore. LinkInfo Property Type Overwrite behavior linkId uid or href Merge key. altText markdown Replace. commentId string Ignore. linkType enum( CRef or HRef ) Ignore. Syntax Property Type Overwrite behavior content string Replace. content. string Replace. parameters Parameter [] Merge keyed list. typeParameters Parameter [] Merge keyed list. return Parameter Merge. Parameter Property Type Overwrite behavior id string Merge key. description markdown Replace. attributes Attribute [] Ignore. type uid Replace. Attribute Property Type Overwrite behavior arguments Argument [] Ignore. ctor uid Ignore. namedArguments NamedArgument [] Ignore. type uid Ignore. Argument Property Type Overwrite behavior type uid Ignore. value object Ignore. NamedArgument Property Type Overwrite behavior name string Ignore. type string Ignore. value object Ignore. REST API model Key Type Overwrite behavior children REST API item model Overwrite when uid of the item model matches summary string Overwrite description string Overwrite REST API item model Key Type Overwrite behavior uid string Key Conceptual model Key Type Overwrite behavior title string Overwrite rawTitle string Overwrite conceptual string Overwrite"
  },
  "tutorial/intro_rest_api_documentation.html": {
    "href": "tutorial/intro_rest_api_documentation.html",
    "title": "Introduction to REST API Documentation | DocFX website",
    "keywords": "Introduction to REST API Documentation Introduction DocFX now supports generating documentation from REST APIs following Swagger specification version 2.0. The Swagger RESTful API files MUST end with .json . One Swagger API file generates one HTML file. For example. a file contacts.swagger.json generates file naming contacts.html . Basic structure A single Swagger API file is considered as a unique REST File containing multiple API s. The UID (Unique IDentifier) for the File is defined as the combination of host , basePath , info.title and info.version with / as separator. For example, the following Swagger API file has UID equals to microsoft.com/docfx/Contacts/1.6 : { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ] } A REST API File contains multiple API s as its children. An API is an Operation Object defined in Path Item Object . The UID (Unique IDentifier) for this API is defined as the combination of the UID of the File and the operationId of the Operation Object . For example, the following get_contacts operation has UID equal to microsoft.com/docfx/Contacts/1.6/get_contacts : { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ], \"paths\": { \"/contacts\": { \"get\": { \"parameters\": [ ], \"responses\": { }, \"operationId\": \"get_contacts\" } } } } Tip It is recommended that user provides a well-formed operationId name. We suggest that the operationId is one word in camelCase or snake_case. A REST API File could also contain multiple tags. The tag is a Tag Object , which is optional and used by Operation Object . The UID (Unique IDentifier) for this tag is defined as the combination of UID of the File , tag , and name of the Tag Object . For example, the following tag Basic has UID microsoft.com/docfx/Contacts/1.6/tag/Basic : { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ], \"tags\": [ { \"name\": \"Basic\", \"description\": \"Basic description\" }, { \"name\": \"Advanced\", \"description\": \"Advanced description\" } ] } HTML layout The generated HTML file lists all the API s inside the File in the order defined in the Swagger REST file. You can use Overwrite File s to add more information to the File and API , and use tags to organize the sections of the API s. Overwrite File s Overwrite File s are Markdown files with multiple Overwrite Section s starting with YAML header block. A valid YAML header for an Overwrite Section MUST take the form of valid YAML set between triple-dashed lines and start with property uid . Here is a basic example of an Overwrite Section : --- uid: microsoft.com/docfx/Contacts/1.6 --- Further description for `microsoft.com/docfx/Contacts/1.6` The uid value MUST match the uid of the File or API that you want to overwrite. The content following YAML header is the additional Markdown description for the File or API . By default, it is transformed to HTML and appended below the description of the File or API . Add footer You can also define the footer of an File or API using the following syntax: --- uid: microsoft.com/docfx/Contacts/1.6 footer: *content --- Footer for `microsoft.com/docfx/Contacts/1.6` *content is the keyword representing the Markdown content following YAML header. The value for *content is always transformed from Markdown content to HTML. In the above example, the value for *content is <p>Footer for <code>microsoft.com/docfx/Contacts/1.6</code></p> . In this way, the value of footer for API microsoft.com/docfx/Contacts/1.6 is set to <p>Footer for <code>microsoft.com/docfx/Contacts/1.6</code></p> . We leverage Anchors syntax in YAML specification for *content . If footer is set, the content from footer will be appended to the last section of the File or API . It is usually used to define See Also or Additional Resources for the documentation. Tags to organize the sections of APIs You can organize the sections of APIs by using tags in Swagger file, following definitions in Tag Object . Each API can be specified with one or multiple tags, or not speficied with any tag. If all APIs are not tagged, each API will not be included in any sections. If the API is specified with one tag only, it will show inside this one tag section. If the API is specified with multiple tags, it will show inside multiple tag sections. If some APIs are specified with tags while some other APIs are not, the untagged APIs will be organized into one auto generated Other apis section. Specific bookmark could be added to tag section using x-bookmark-id , which is Swagger schema extensions following Specification Extensions . If no x-bookmark-id is specified, name of the tag will be the default bookmark. For example, the following swagger file defines Basic and Advanced tags. Sections in the layout: set_contacts API is tagged with Advanced only, then it will only show inside Advanced tag section. get_contacts API is tagged with both Basic and Advanced , then it will show inside both of the tag sections. delete_contacts API is not tagged, it will show inside \"Other apis\" section. Bookmarks: Bookmark of Basic tag is BasicBookmark , which is defined by x-bookmark-id . Bookmark of Advanced tag is Advanced , which use name by default. { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ], \"tags\": [ { \"name\": \"Basic\", \"x-bookmark-id\": \"BasicBookmark\", \"description\": \"Basic description\" }, { \"name\": \"Advanced\", \"description\": \"Advanced description\" } ], \"paths\": { \"/contacts\": { \"get\": { \"operationId\": \"get_contacts\", \"tags\": [ \"Basic\", \"Advanced\" ] }, \"set\": { \"operationId\": \"set_contacts\", \"tags\": [ \"Advanced\" ] }, \"delete\": { \"operationId\": \"delete_contacts\" } } } } For the example above, the simple html layout will be: <h2 id=\"BasicBookmark\">Basic</h2> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/get_contacts\">get_contacts</h3> <h2 id=\"Advanced\">Advanced</h2> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/get_contacts\">get_contacts</h3> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/set_contacts\">set_contacts</h3> <h2 id=\"other-apis\">Other APIs</h2> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/delete_contacts\">delete_contacts</h3> Overwrite the tags More information could be added to the tag as following: --- uid: microsoft.com/docfx/Contacts/1.6/tag/Basic --- Additional comments for `microsoft.com/docfx/Contacts/1.6/tag/Basic` The description of the tag could be overwritten as following: --- uid: microsoft.com/docfx/Contacts/1.6/tag/Basic description: *content --- Overwrite description for `microsoft.com/docfx/Contacts/1.6/tag/Basic` Add other metadata You can define your own metadata with YAML header. This functionality is quite useful when your own template is used. When the key of the metadata is already preserved by DocFX, for example, summary , the value of summary will be overwritten. You can also overwrite complex types, for example, description of a parameter . Make sure the data structure of the provided metadata is consistent with the one defined in DocFX, otherwise, DocFX is unable to cast the value and fails. When the key of the metadata is not preserved by DocFX, for example, not_predefined . The metadata is kept and can be used in the template."
  },
  "tutorial/intro_template.html": {
    "href": "tutorial/intro_template.html",
    "title": "Introduction to DocFX Template System | DocFX website",
    "keywords": "Introduction to DocFX Template System DocFX Template System provides a flexible way of defining and using templates. As the following DocFX workflow shows, DocFX loads the set of files and transforms them into different data models using different types of Document Processor s. Afterwards, DocFX Template System loads these data models, and transforms them into output files based on the document type of the data model. Each file belongs to a document type . For example, the document type for Markdown files is conceptual , and the document type for toc.md files is Toc . For a specific Template , each document type can have several Renderer s. For a specific file, DocFX Template System picks the corresponding Renderer s to render the input data model into output files. Renderer Renderer s are files written in a specific templating language. It is used to transform the input data model into output files. Currently DocFX supports the following templating languages: Mustache templating language Liquid templating language Naming rule for a Renderer file The naming rule for a Renderer file is: <document_type>.<output_extension>[.primary].<template_extension> . <document_type> is the document type current Renderer responsible to. <output_extension> defines the extension of the output files going through current Renderer . For example, conceptual.html.tmpl transforms file1.md into output file file1.html , and toc.json.tmpl transforms toc.md into output file toc.json . [.primary] is optional. It is used when there are multiple Renderer s with different extension for one particular document type. The output file transformed by the .primary Renderer is used as the file to be linked. The below example describes the behavior in detail. <template_extension> is the extension of the Renderer file based on the templating language it uses. For Mustache Renderer , it is .tmpl , while for Liquid Renderer , it is .liquid . Here is an example. The following template contains two Mustache Renderer files for conceptual document type: /- some_template/ |- conceptual.html.primary.tmpl \\- conceptual.mta.json.tmpl There are two Markdown files A.md and B.md , the content for A.md is: [Link To B](B.md) DocFX Template System produces two output files for A.md : A.html and A.mta.json , and also two output files for B.md : B.html and B.mta.json . According to conceptual.html.primary.tmpl , .html is the primary output file, the link from A.md to B.md is resolved to B.html instead of B.mta.json , which is to say, the content of A.md is transformed to: <a href=\"B.html\">Link To B</a> Note If no primary Renderer is defined, DocFX randomly picks one Renderer as the primary one, and the result is unpredictable. Renderer in Mustache syntax Introduction to Mustache Mustache is a logic-less template syntax containing only tag s. It works by expanding tags in a template using values provided in a hash or object. Tag s are indicated by the double mustaches. {{name}} is a tag, it tries to find the name key in current context, and replace it with the value of name . mustache.5 lists the syntax of Mustache in detail. Naming rule Renderer s in Mustache syntax MUST end with .tmpl extension. Mustache Partials Mustache Partials is also supported in DocFX Template System . Partials are common sections of Renderer that can be shared by multiple Renderer files. Partials MUST end with .tmpl.partial . For example, inside a Template , there is a Partial file part.tmpl.partial with content: Inside Partial {{ name }} To reuse this Partial file, Renderer file uses the following syntax: Inside Renderer {{ >part }} It has the same effect with the following Renderer file: Inside Renderer Inside Partial {{ name }} Extended syntax for Dependencies When rendering the input data model into output files, for example, html files, the html file may rely on other files to display correctly. For example, the html file dependents on stylesheet file main.css . We call such file main.css a Dependency to the Renderer . DocFX introduces the following syntax to define the dependency for the Renderer : {{!include('<file_name>')}} docfx copies these dependencies to output folder preserving its relative path to the Renderer file. Tip Mustache is logic-less, and for a specific {{name}} tag, Mustache searches its context and its parent context recursively. So most of the time Preprocessor File is used to re-define the data model used by the Mustache Renderer . Extended syntax for Master page In most cases templates with different document types share the same layout and style, for example, most of the pages can share navbar, header, or footer. DocFX introduces the following syntax to use a master page: {{!master('<master_page_name>')}} Inside the master page, the following syntax is used for pages to place their content body: {{!body}} For example, with the following master page _master.html : ```html with mustache {{!body}} A template `conceptual.html.tmpl` as follows: ```mustache {{!master('_master.html')}} Hello World renders as the same as: <html> <head></head> <body> Hello World <body> </html> Renderer in Liquid syntax Naming rule Renderer s in Liquid syntax MUST end with .liquid extension. Liquid contains include tag to support partials, we follow the ruby partials naming convention to have _<partialName>.liquid as partial template. Extended syntax for Dependencies DocFX introduces a custom tag ref , e.g. {% ref file1 %} , to specify the resource files that current template depends on. Extended syntax for Master page DocFX introduces custom tags master and body to use master page: {% master <master_page_name> %} Inside the master page, the following syntax is used for pages to place their content body: {% body %} For example, with the following master page _master.html : ```html with liquid {% body %} A template `conceptual.html.liquid` as follows: ```liqud {% master _master.html %} Hello World renders as the same as: <html> <head></head> <body> Hello World <body> </html> Preprocessor Renderer s take the input data model produced by document processor and render them into output files. Sometimes the input data model is not exactly what Renderer s want. DocFX Template System introduces the concept of Preprocessor to transform the input data model into what Renderer s exactly want. We call the data model Preprocessor returns the View Model . View Model is the data model to apply Renderer . Naming rule for Preprocessor The naming of Preprocessor follows the naming of Renderer with file extension changes to .js : <renderer_file_name_without_extension>.js . If a Preprocessor has no corresponding Renderer however it still needs to be executed, for example, to run exports.getOptions function , it should be named as <document_type>.tmpl.js . Syntax for Preprocessor Preprocessor s are JavaScript files following ECMAScript 5.1 standard. DocFX Template System uses Jint as JavaScript Engine, and provides several additional functions for easy debugging and integration. Module Preprocessor leverages the concept of Module as similar to the Module in Node.js . The syntax of Module in Preprocessor is a subset of the one in Node.js. The advantage of the Module concept is that the Preprocessor script file can also be run in Node.js. The Module syntax in Preprocessor is simple, To export function property from one Module file common.js : exports.util = function () {} To use the exported function property inside common.js : var common = require('./common.js'); // call util common.util(); Note Only relative path starting with ./ is supported. Log You can call the following functions to log messages with different error level: console.log , console.warn or console.warning and console.err . Function Signature A Preprocessor file is also considered as a Module. It MUST export the function property with the signature required by docfx 's prescriptive interop pattern. There are two functions defined. Function 1: exports.getOptions Function property getOptions takes the data model produced by document processor as the input argument, and the return value must be an object with the following properties: Property Name Type Description isShared bool Defines whether the input data model can be accessed by other data models when transform . By default the value is false . If it is set to true , the data model will be stored into Globally Shared Properties . A sample exports.getOptions defined in toc.tmpl.js is: exports.getOptions = function (model) { return { isShared: true; }; } <!-- TODO: add bookmarks part when it is implemented --> Function 2: exports.transform Function property transform takes the data model produced by document processor (described in further detail in The Input Data Model ) as the input argument, and returns the View Model . View Model is the exact model to apply the corresponding Renderer . A sample exports.transform for conceptual.txt.js is: exports.transform = function (model) { model._title = \"Hello World\" return model; } If conceptual.txt.tmpl is: {{{_title}}} Then Markdown file A.md is transformed to A.txt with content: Hello World Tip For each file, the input data model can be exported to a JSON file by calling docfx build --exportRawModel . And the returned View Model can be exported to a JSON file by calling docfx build --exportViewModel . The Input Data Model The input data model used by transform not only contains properties extracted from the content of the file, but also system generated properties and globally shared properties. System Generated Properties System generated property names start with underscore _ , as listed in the following table: Name Description _rel The relative path of the root output folder from current output file. For example, if the output file is a/b/c.html from root output folder, then the value is ../../ . _path The path of current output file starting from root output folder. _navPath The relative path of the root TOC file from root output folder, if exists. The root TOC file stands for the TOC file in root output folder. For example, if the output file is html file, the value is toc.html . _navRel The relative path from current output file to the root TOC file, if exists. For example, if the root TOC file is toc.html from root output folder, the value is empty. _navKey The original file path of the root TOC file starting with ~/ . ~/ stands for the folder where docfx.json is in, for example, ~/toc.md . _tocPath The relative path of the TOC file that current output file belongs to from root output folder, if current output file is in that TOC file. If current output file is not defined in any TOC file, the nearest TOC file is picked. _tocRel The relative path from current output file to its TOC file. For example, if the TOC file is a/toc.html from root output folder, the value is ../ . _tocKey The original file path of the TOC file starting with ~/ . ~/ stands for the folder where docfx.json is in, for example, ~/a/toc.yml . Note Users can also override system generated properties by using YAML Header , fileMetadata or globalMetadata . Globally Shared Properties Globally shared properties are stored in __global key for every data model. Its initial value is read from global.json inside the Template if the file exists. If a data model has isShared equal to true with the above getOptions function property, it is stored in __global._shared with the original path starting with ~/ as the key."
  },
  "tutorial/intro_toc.html": {
    "href": "tutorial/intro_toc.html",
    "title": "Table-Of-Content (TOC) Files | DocFX website",
    "keywords": "Table-Of-Content (TOC) Files Introduction DocFX supports processing Markdown files, which we call Conceptual File s, as well as structured data model in YAML or JSON format, which we call Metadata File s. Besides that, DocFX introduces a way to organize these files using Table-Of-Content File s, which we also call TOC File s, so that users can navigate through Metadata File s and Conceptual File s. TOC File s must have file name toc.md or toc.yml , notice that file name is case-insensitive. Basic format Markdown format TOC toc.md toc.md leverages Markdown Atx-style headers which use 1-6 hash characters at the start of the line to represent the TOC levels 1-6. We call each line starting with hash characters a TOC Item . A TOC Item with higher level is considered as the child of the nearest upper TOC Item with less level. A sample toc.md is as below: # [Header1](href) ## [Header1.1](href) # Header2 ## [Header2.1](href) ### [Header2.1.1](href) ## [Header2.2](href) # @UidForAnArticle For a TOC Item , it can be either plain text, or a Markdown inline link , or @uid as the shortcut for cross-referenced Three kinds of links are supported: Absolute path, for example, http://example.net . Relative path, for example, ../example.md . This kind of link has several advanced usages and is described in detail below . URI with xref scheme, for example, xref:System.String , the value is the uid of the file to be cross-referenced . YAML format TOC toc.yml - name: Topic1 href: Topic1.md - name: Topic2 href: Topic2.md items: - name: Topic2_1 href: Topic2_1.md Comparing to toc.md , toc.yml represents a structured data model and conforms to the YAML standard . It supports advanced functionalities. Data model for toc.yml The data model for toc.yml is an array of TOC Item Object s. TOC Item Object TOC Item Object represents the data model for each TOC Item . Note All the property names are case sensitive . Property Name Type Description name string Specifies the title of the TOC Item . href string Specifies the hyperlink of the TOC Item . items TOC Item Object Specifies the children TOC Items of current TOC Item . Advanced : These properties are useful when a TOC links another TOC, or links to a uid. Property Name Type Description tocHref string Specifies another TOC file, whose items are considered as the child of the currrent TOC Item . topicHref string Specifies the topic href of the TOC Item . It is useful when href is linking to a folder or tocHref is used. topicUid string Specifies the uid of the topicHref file. If the value is set, it overwrites the value of topicHref . homepage Deprecated string Specifies the homepage of the TOC Item . It is useful when href is linking to a folder. Use topicHref instead. uid Deprecated string Specifies the uid of the referenced file. If the value is set, it overwrites the value of href . Use topicUid instead. homepageUid Deprecated string Specifies the uid of the homepage. If the value is set, it overwrites the value of homepage . Use topicUid instead. Href in detail If a TOC Item is linking to some relative path, there are three cases: Linking to another TOC File , for example, href: examples/toc.md . Linking to a folder, which means, the value of the link ends with / explicitly, for example, href: examples/ Linking to some local file. Each case is described in detail below. Link to another TOC File If the TOC Item is linking to some other TOC File , it is considered as a placeholder of the referenced TOC File , and DocFX will extract content from that TOC File and insert into current TOC Item recursively . This technique is always used when you want to combine several TOC File s into one single TOC File . If homepage or topicHref is set for this TOC Item , it will be considered as the href of the expanded TOC Item . For example, one toc.yml file is like below: - name: How-to tutorials tocHref: howto/toc.yml topicHref: howto/overview.md It references to the toc.yml file under folder howto , with the following content: - name: \"How-to1\" href: howto1.md - name: \"How-to2\" href: howto2.md DocFX processes these toc.yml files and expands the uppder toc.yml file into: - name: How-to tutorials href: howto/overview.md topicHref: howto/overview.md items: - name: \"How-to1\" href: howto/howto1.md topichref: howto/howto1.md - name: \"How-to2\" href: howto/howto2.md topichref: howto/howto2.md Note The referenced toc.yml file under howto folder will not be transformed to the output folder even if it is included in docfx.json . Link to a folder If the Toc Item is linking to a folder, ending with / explicitly, the link value for the Toc Item is determined in the following steps: If homepage topicHref or homepageUid topicUid is set, the link value is resolved to the relative path to homepage topicHref If homepage topicHref or homepageUid topicUid is not set, DocFX searches for Toc File under the folder, and get the first relative link to local file as the link value for current Toc Item . For example, if the Toc Item is href: article/ , and the content of article/toc.yml is as follows: - name: Topic1 href: topic1.md The link value for the Toc Item is resolved to article/topic1.md . If there is no Toc File under the folder, the link value keeps unchanged. Link to local file If the Toc Item is linking to a local file, we call this local file In-Toc File . Make sure the file is included in docfx.json . Not-In-Toc Files When a local file is not referenced by any Toc Item , we call this local file Not-In-Toc File . Its TOC File is the nearest TOC File in output folder from the same folder as the local file to the root output folder."
  },
  "tutorial/links_and_cross_references.html": {
    "href": "tutorial/links_and_cross_references.html",
    "title": "Links and Cross References | DocFX website",
    "keywords": "Links and Cross References Markdown provides a syntax to create hyperlinks. For example, the following syntax: [bing](http://www.bing.com) Will render to: <a href=\"http://www.bing.com\">bing</a> Here the url in the link could be either absolute url pointing to another website ( www.bing.com in the above example), or a relative url pointing to a local resource on the same server (for example, about.html ). When working with large documentation project that contains multiple files, it is often needed to link to another Markdown file using the relative path in the source directory. Markdown spec doesn't have a clear definition of how this should be supported. What's more, there is also a common need to link to another file using a \"semantic\" name instead of its file path. This is especially common in API reference docs, for example, you may want to use System.String to link to the topic of String class, without knowing it's actually located in api/system/string.html , which is auto generated. In this document, you'll learn the functionalities DocFX provides for resolving file links and cross reference, which will help you to reference other files in an efficient way. Link to a file using relative path In DocFX, you can link to a file using its relative path in the source directory. For example, You have a file1.md under root and a file2.md under subfolder/ : / |- subfolder/ | \\- file2.md \\- file1.md You can use relative path to reference file2.md in file1.md : [file2](subfolder/file2.md) DocFX converts it to a relative path in output folder structure: <a href=\"subfolder/file2.html\">file2</a> You can see the source file name ( .md ) is replaced with output file name ( .html ). Note DocFX does not simply replace the file extension here ( .md to .html ), it also tracks the mapping between input and output files to make sure source file path will resolve to correct output path. For example, if in the above case, subfolder is renamed to subfolder2 using file mapping in docfx.json , in output html, the link url will also resolve to subfolder2/file2.html . Relative path vs. absolute path It's recommended to always use relative path to reference another file in the same project. Relative path will be resolved during build and produce build warning if the target file does not exist. Tip File must be included in docfx.json to be processed by DocFX, so if you see a build warning about broken link but the file actually exists in your file system, go and check whether this file is included in docfx.json . You can also use absolute path (path starts with / ) to link to another file, but DocFX won't check its correctness for you and will keep it as-is in the output HTML. That means you should use the output file path as absolute path. For example, in the above case, you can also write the link as follows: [file2](/subfolder/file2.html) Sometimes you may find it's complicated to calculate relative path between two files. DocFX also supports path starts with ~ to represent path relative to the root directory of your project (i.e. where docfx.json is located). This kind of path will also be validated and resolved during build. For example, in the above case, you can write the following links in file2.md : [file1](~/file1.md) [file1](../file1.md) Both will resolve to ../file1.html in output html. Warning Automatic link doesn't support relative path. If you write something like <file.md> , it will be treated as an HTML tag rather than a link. Links in file includes If you use file include to include another file, the links in included file is relative to the included file. For example, if file1.md includes file2.md : [!include[file2](subfolder/file2.md)] All links in file2.md are relative to the file2.md itself, even when it's included by file1.md . Note Please note that the file path in include syntax is handled differently than Markdown link. You can only use relative path to specify location of the included file. And DocFX doesn't require included file to be included in docfx.json . Tip Each file in docfx.json will build into an output file. But included files usually don't need to build into individual topics. So it's not recommended to include them in docfx.json . Links in inline HTML Markdown supports inline HTML . DocFX also supports to use relative path in inline HTML. Path in HTML link ( <a> ), image ( <img> ), script ( <script> ) and css ( <link> ) will also be resolved if they're relative path. Using cross reference Besides using file path to link to another file, DocFX also allows you to give a file a unique identifier so that you can reference this file using that identifier instead of its file path. This is useful in the following cases: Path to file is long and difficult to memorize or changes frequently. API reference documentation is usually auto generated so it's difficult to find its file path. You want to reference to files in another project without need to know its file structure. The basic syntax for cross referencing a file is: <xref:id_of_another_file> This is similar to automatic link syntax in Markdown but with a xref scheme. This link will build into: <a href=\"path_of_another_file\">title_of_another_file</a> As you can see, one benefit of using cross reference is that you don't need to specify the link text and DocFX will automatically resolve it for you. Note Title is extracted from the first heading of the Markdown file. Or you can also specify title using title metadata. Define UID The unique identifier of a file is called UID (stands for unique identifier) in DocFX. For Markdown file, you can specify its UID by adding a UID metadata in YAML header . For example, the following Markdown defined a UID \"fileA\". --- uid: fileA --- # This is fileA ... Note UID is supposed to be unique inside a project. If you define duplicate UID for two files, the resolve result is undetermined. For API reference files, UID is auto generated by mangling API's signature. For example, System.String class's UID is System.String . You can open the generated YAML files to lookup the value of UID. Note Conceptual Markdown file doesn't have UID generated by default. So it cannot be cross referenced unless you give it a UID. Different syntax of cross reference Besides the auto link, we also support some other ways to use cross references: Markdown link In Markdown link, you can also use xref in link url: [link_text](xref:uid_of_another_file) This will resolve to: <a href=\"path_of_another_file\">link_text</a> In this case, we won't resolve the link text for you because you already specified it, unless the link_text is empty. Shorthand form You can also use @uid_to_another_file to quickly reference another file. There are some rules for DocFX to determine whether a string following @ are UID: The string after @ must start with [A-Za-z] , and end with: Whitespace or line end Punctuation ( [.,;:!?`~] ) followed by whitespace or line end Two or more punctuations ( [.,;:!?`~] ) A string enclosed by a pair of quotes ( ' or \" ) The render result of @ form is same as auto link form. For example, @System.String is same as <xref:System.String> . Warning Since @ is a common character in a document, DocFX doesn't show a warning if UID isn't found for a shorthand form xref link. Warnings for missing links are shown for auto links and Markdown links. Using hashtag in cross reference Sometimes you need to link to the middle of a file (an anchor) rather than jump to the beginning of a file. DocFX also allows you to do that. In Markdown link or auto link, you can add a hashtag ( # ) followed by the anchor name after UID. For example: <xref:uid_to_file#anchor_name> [link_text](xref:uid_to_file#anchor_name] @uid_to_file#anchor_name Will all resolve to url_to_file#anchor_name in output HTML. The link text still resolves to the title of the whole file. If it's not what you need, you can specify your own link text. Note Hashtag in xref is always treated as separator between file name and anchor name. That means if you have # in UID, it has to be encoded to %23 . Actually xref format follows URI standard so all reserved characters should be encoded. Link to overwrite files Overwrite file itself doesn't build into individual output file. It's merged with the API reference item model to build into a single file. If you want to link to the content inside an overwrite file (for example, an anchor), you cannot use the path to the overwrite file. Instead, you should either cross reference its UID, or link to the YAML file that contains the API. For example, you have String class which is generated from system.string.yml , then you have a string.md that overwrites its conceptual part which contains a compare-strings section. You can use one of the following syntax to link to this section: [compare strings](xref:System.String#compare-strings) [compare strings](system.string.yml#compare-strings) Both will render to: <a href=\"system.string.html#compare-strings\">compare strings</a> Cross reference between projects Another common need is to reference topics from an external project. For example, when you're writing the documentation for your own .NET library, you'll want to add some links that point to types in .NET base class library. DocFX gives you this functionality by exporting all UIDs in a project into a map file and you can import it in another project to use them. Cross reference map file When building a DocFX project, there will be an xrefmap.yml generated under output folder. This file contains information for all topics that have UID defined and their corresponding urls. The format of xrefmap.yml looks like this: references: - uid: uid_of_topic name: title_of_topic href: url_of_topic.html fullName: full_title_of_topic - ... It's a YAML object that contains following properties: references : a list of topic information, each item contains following properties: uid : UID to a conceptual topic or API reference name : title of the topic href : url to the topic, which is an absolute url or relative path to current file ( xrefmap.yml ) fullName : doesn't apply to conceptual, means the fully qualified name of API. For example, for String class, its name is String and fully qualified name is System.String . This property is not used in link title resolve for now but reserved for future use. Tip Topic is not necessarily to be a file, it can also be a section inside a file. For example, a method in a class. In this case its url could be an anchor in a file. Using cross reference map You can import a cross reference map file in your DocFX then all UIDs defined that file can be cross referenced. To use a cross reference map, add a xref config to build section of docfx.json : { \"build\": { \"xref\": [ \"<path_to_xrefmap>\" ], ... } } The value of xref could be a string or a list of strings that contain the path/url to cross reference maps. Note DocFX supports reading cross reference map from a local file or a web location. It's recommended to deploy xrefmap.yml to the website together with topic files so that others can directly use its url in docfx.json instead of downloading it to local. Then you can use any cross reference syntax in your Markdown file, DocFX will be able to resolve it to the right target url. Cross reference .NET BCL types When creating documentation for your own .NET library, it is needed to link to the types in .NET base class library. The .NET Framework reference documentation is not generated by DocFX, so we created a cross reference map for you so that you can use it in your project to reference .NET BCL types. This can be downloaded on nuget . Tip You can also manually create xrefmap.yml for project that is not generated by DocFX to be able to cross reference topics in it. Advanced: more options for cross reference You can create a cross link with following options: text : the display text when the cross reference has been resolved correctly. e.g.: @\"System.String?text=string\" will be resolved as string . alt : the display text when the cross reference does not have a href property. e.g.: <xref href=\"System.Collections.Immutable.ImmutableArray`1?alt=ImmutableArray\"/> will be resolved as ImmutableArray . displayProperty : the property of display text when the cross reference is has resolved correctly. e.g.: <a href=\"xref:System.String?displayProperty=fullName\"/> will be resolved as System.String . altProperty : the property of display text when the cross reference does not have a href property. e.g.: <xref href=\"System.Collections.Immutable.ImmutableArray`1\" altProperty=\"name\"/> will be resolved as ImmutableArray<T> . title : the title of link. e.g.: [](xref:System.String?title=String+Class) will be resolved as String ."
  },
  "tutorial/validate_your_markdown_files.html": {
    "href": "tutorial/validate_your_markdown_files.html",
    "title": "Validate Your Markdown Files | DocFX website",
    "keywords": "Validate Your Markdown Files In Markdown, we can write any document with valid syntax. For example, Markdown supports to directly write HTML tag, we can write HTML tag <h1>title</h1> instead of Markdown syntax #title . But for some purpose, some behaviors are unwanted, for example, you may not want to allow <script> tag in Markdown that can insert any javascript. In this document, you'll learn how to define markdown validation rules, which will help you to validate markdown documents in an efficient way. Note Markdown validation is part of DFM, if you switch Markdown engine to other engine, validation might not work. There're three kinds of validation rules provided by DocFX: HTML tag rule, which is used to validate HTML tags in Markdown. There is a common need to restrict usage of HTML tags in Markdown to only allow \"safe\" HTML tags, so we created this built-in rule for you. Markdown token rule. This can be used to validate different kinds of Markdown syntax elements, like headings, links, images, etc. Metadata rule. This can be used to validate metadata of documents. Metadata can be defined in YAML header, docfx.json , or a single JSON file. Metadata rule gives you a central place to validate metadata against certain principle. HTML tag validation rules For most cases, you may want to prohibit using certain html tags in markdown, so we built a built-in html tag rule for you. To define a HTML tag rule, simply create a md.style with following content: { \"tagRules\": [ { \"tagNames\": [ \"H1\", \"H2\" ], \"relation\": \"In\", \"behavior\": \"Warning\", \"messageFormatter\": \"Please do not use <H1> and <H2>, use '#' and '##' instead.\", \"customValidatorContractName\": null, \"openingTagOnly\": false } ] } Then when anyone write <H1> or <H2> in Markdown file, it will give a warning. You can use the following proprties to configure the HTML tag rule: tagNames is the list of HTML tag names to validate, required , case-insensitive . relation is optional for tagNames : In means when html tag is in tagNames , this is default value. NotIn means when html tag is not in tagNames . behavior defines the behavior when the HTML tag is met, required . Its value can be following: None: Do nothing. Warning: Log a warning. Error: Log an error, it will break current build. messageFormatter is the log message when the HTML tag is hit, required . It can contain following variables: {0} the name of tag. {1} the whole tag. For example, the messageFormatter is {0} is the tag name of {1}. , and the tag is <H1 class=\"heading\"> match the rule, then it will output following message: H1 is the tag name of <H1 class=\"heading\">. customValidatorContractName is an extension tag rule contract name for complex validation rule, optional . see Create a custom HTML tag rule . openingTagOnly is a boolean, option , default is false if true , it will only apply to opening tag, e.g. <H1> , otherwise, it will also apply to closing tag, e.g. </H1> . Test your rule To enable your rule, put md.style in the same folder of docfx.json , then run docfx , warning will be shown if it encounters <H1> or <H2> during build. Create a custom HTML tag rule By default HTML tag rule only validates whether an HTML tag exists in Markdown. Sometimes you may want to have additional validation against the content of the tag. For example, you may not want a tag to contain onclick attribute as it can inject javascript to the page. You can create a custom HTML tag rule to achieve this. Create a project in your code editor (e.g. Visual Studio). Add nuget package Microsoft.DocAsCode.Plugins and Microsoft.Composition . Create a class and implement ICustomMarkdownTagValidator . Add ExportAttribute with contract name. For example, we require HTML link ( <a> ) should not contain onclick attribute: [Export(\"should_not_contain_onclick\", typeof(ICustomMarkdownTagValidator))] public class MyMarkdownTagValidator : ICustomMarkdownTagValidator { public bool Validate(string tag) { // use Contains for demo purpose, a complete implementation should parse the HTML tag. return tag.Contains(\"onclick\"); } } And update your md.style with following content: { \"tagRules\": [ { \"tagNames\": [ \"a\" ], \"behavior\": \"Warning\", \"messageFormatter\": \"Please do not use 'onclick' in HTML link.\", \"customValidatorContractName\": \"should_not_contain_onclick\", \"openingTagOnly\": true } ] } How to enable custom HTML tag rules Same as default HTML tag rule, config the rule in md.style . Create a folder ( rules for example) in your DocFX project folder, put all your custom rule assemblies to a plugins folder under rules folder. Now your DocFX project should look like this: / |- docfx.json |- md.style \\- rules \\- plugins \\- <your_rule>.dll Update your docfx.json with following content: { ... \"dest\": \"_site\", \"template\": [ \"default\", \"rules\" ] } Run docfx you'll see your rule being executed. Note The folder rules is actually a template folder. In DocFX, template is a place for you to customize build, render, validation behavior. For more information about template, please refer to our template and plugin documentation. Markdown token validation rules Besides HTML tags, you may also want to validate Markdown syntax like heading or links. For example, in Markdown, you may want to limit code snippet to only support a set of languages. To create such rule, follow the following steps: Create a project in your code editor (e.g. Visual Studio). Add nuget package Microsoft.DocAsCode.MarkdownLite and Microsoft.Composition . Create a class and implements IMarkdownTokenValidatorProvider MarkdownTokenValidatorFactory contains some helper methods to create a validator. Add ExportAttribute with rule name. For example, the following rule require all code block to be csharp : [Export(\"code_snippet_should_be_csharp\", typeof(IMarkdownTokenValidatorProvider))] public class MyMarkdownTokenValidatorProvider : IMarkdownTokenValidatorProvider { public ImmutableArray<IMarkdownTokenValidator> GetValidators() { return ImmutableArray.Create( MarkdownTokenValidatorFactory.FromLambda<MarkdownCodeBlockToken>(t => { if (t.Lang != \"csharp\") { throw new DocumentException($\"Code lang {t.Lang} is not valid, in file: {t.SourceInfo.File}, at line: {t.SourceInfo.LineNumber}\"); } })); } } To enable this rule, update your md.style to the following: { \"rules\": [ \"code_snippet_should_be_csharp\" ] } Then follow the same steps in How to enable custom HTML tag rules , run docfx you'll see your rule executed. Logging in your rules As you can see in the above example, you can throw DocumentException to raise an error, this will stop the build immediately. You can also use LogWarning(String, String, String, String) and LogError(String, String, String, String) to report a warning and an error respectively. Note To use these methods, you need to install nuget package Microsoft.DocAsCode.Common first. The different between ReportError and throw DocumentException is throwing exception will stop the build immediately but ReportError won't stop build but will eventually fail the build after rules are run. Advanced: validating tokens with file context For some cases, we need to validate some tokens with file context. For example, we want each topic has one title (i.e. h1 written by markdown syntax, e.g. # <title> ). But you cannot count them in IMarkdownTokenValidator , it is shared by all files, and it will never be hit when there is no heading. For this purpose, we need to create validator like following: MarkdownTokenValidatorFactory.FromLambda<MarkdownHeadingBlockToken>( t => { if (t.Depth == 1) { var re = MarkdownTokenValidatorContext.CurrentRewriteEngine; var h1Count = (int)re.GetVariable(\"h1Count\"); re.SetVariable(\"h1Count\", h1Count + 1); } }, re => { re.SetVariable(\"h1Count\", 0); re.SetPostProcess(\"checkH1Count\", re1 => { var h1Count = (int)re.GetVariable(\"h1Count\"); if (h1Count != 1) { Logger.LogError($\"Unexpected title count: {h1Count}.\"); } }) }); The FromLambda method takes two callbacks: The first will be invoked on MarkdownHeadingBlockToken matched in all files. And the static property CurrentRewriteEngine will provide current context object. The second will be invoked on starting a new file. And you can initialize some variables for each file, and register some callbacks when the file completed. Advanced usage of md.style Default rules If a rule has the contract name of default , it will be enabled by default. You don't need to enable it in md.style . Enable/disable rules in md.style You can add use disable to specify whether disable a rule: { \"rules\": [ { \"contractName\": \"<contract_name>\", \"disable\": true } ] } This gives you an opportunity to disable the rules enabled by default. Validate metadata in markdown files In markdown file, we can write some metadata in conceptual or overwrite document . And we allow to add some plug-ins to validate metadata written in markdown files. Scope of metadata validation Metadata is coming from multiple sources, the following metadata will be validated during build: YAML header in markdown. Global metadata and file metaata in docfx.json . Global metadata and file metadata defined in separate .json files. Tip For more information about global metadata and global metadata, see docfx.json format . Create validation plug-ins Create a project in your code editor (e.g. Visual Studio). Add nuget package Microsoft.DocAsCode.Plugins and Microsoft.Composition . Create a class and implement IInputMetadataValidator For example, the following validator prohibits any metadata with name hello : [Export(typeof(IInputMetadataValidator))] public class MyInputMetadataValidator : IInputMetadataValidator { public void Validate(string sourceFile, ImmutableDictionary<string, object> metadata) { if (metadata.ContainsKey(\"hello\")) { throw new DocumentException($\"Metadata 'hello' is not allowed, file: {sourceFile}\"); } } } Enable metadata rule is same as other rules, just copy the assemblies to the plugins of your template folder and run docfx . Create configurable metadata validation plug-ins There are two steps to create a metadata validator: We need to modify export attribute for metadata validator plug-in: [Export(\"hello_is_not_valid\", typeof(IInputMetadataValidator))] Note If the rule doesn't have a contract name, it will be always enabled, i.e., there is no way to disable it unless delete the assembly file. Modify md.style with following content: { \"metadataRules\": [ { \"contractName\": \"hello_is_not_valid\", \"disable\": false } ] } Advanced: Share your rules Some users have a lot of document projects, and want to share validations for all of them, and don't want to write md.style file repeatedly. Create template For this propose, we can create a template with following structure: / (root folder for plug-in) \\- md.styles |- <category-1>.md.style \\- <category-2>.md.style \\- plugins \\- <your_rule>.dll In md.styles folder, there is a set of definition files, with file extension .md.style , each file is a category. In one category, there is a set of rule definition. For example, create a file with name test.md.style , then write following content: { \"tagRules\": { \"heading\": { \"tagNames\": [ \"H1\", \"H2\" ], \"behavior\": \"Warning\", \"messageFormatter\": \"Please do not use <H1> and <H2>, use '#' and '##' instead.\", \"openingTagOnly\": true } }, \"rules\": { \"code\": \"code_snippet_should_be_csharp\" }, \"metadataRules\": { \"hello\": { \"contractName\": \"hello_is_not_valid\", \"disable\": true } } } Then test is the category name (from file name) for three rules, and apply different id for each rule, they are heading , code and hello . When you build document with this template, all rules will be active when disable property is false . Config rules Some rules need to be enabled/disabled in some special document project. For example, hello rule is not required for most project, but for a special project, we want to enable it. We need to modify md.style file in this document project with following content: { \"settings\": [ { \"category\": \"test\", \"id\": \"hello\", \"disable\": false } ] } And for some project we need to disable all rules in test category: { \"settings\": [ { \"category\": \"test\", \"disable\": true } ] } Note disable property is applied by following order: tagRules , rules and metadataRules in md.style . auto enabled rules with contract name default . settings with category and id in md.style . settings with category in md.style . disable property in definition file."
  },
  "tutorial/walkthrough/advanced_walkthrough.html": {
    "href": "tutorial/walkthrough/advanced_walkthrough.html",
    "title": "🔧 Walkthrough Advanced: Customize Your Website | DocFX website",
    "keywords": "🔧 Walkthrough Advanced: Customize Your Website Note This topic hasn’t been written yet! You can track the status of this issue through our public GitHub issue tracker. Learn how you can contribute on GitHub. Add more details to an API using a Markdown file. Add cross references. Apply your own styles to the website. Write your own plugins and your own template."
  },
  "tutorial/walkthrough/walkthrough_create_a_docfx_project.html": {
    "href": "tutorial/walkthrough/walkthrough_create_a_docfx_project.html",
    "title": "Walkthrough Part I: Generate a Simple Documentation Website | DocFX website",
    "keywords": "Walkthrough Part I: Generate a Simple Documentation Website By completing this walkthrough, you'll become familiar with the workflow of docfx and the general principle of organizing documents inside docfx . You will finish this walkthrough with a static website that can be published to any host service. Download the files used in this walkthrough here . Step1. Setup DocFX Download docfx from http://dotnet.github.io/docfx/ . Getting Started with docfx describes three ways to install docfx . This walkthrough uses the first one: Use docfx.exe directly. Download docfx.zip and unzip it to D:\\docfx\\ Add D:\\docfx\\ to PATH so that command docfx and be directly called from everywhere for convenience. (for example, for Windows, setx PATH \"%PATH%;D:\\docfx\\\" Step2. Init a DocFX project Create a new folder D:\\docfx_walkthrough Start Command Line under D:\\docfx_walkthrough Call docfx init -q . This command generates a docfx_project folder with the default docfx.json file under it. docfx.json is the configuration file docfx uses to generate documentation. -q option means generating the project quietly using default value, you can also try docfx init and follow the instructions to provide your own settings. Step3. Build our website Run command docfx docfx_project/docfx.json . Note that a new subfolder _site is generated under that folder. This is where the static website is generated. Step4. Preview our website The generated static website can be published to GitHub pages, Azure websites, or your own hosting services without any further changes. You can also run command docfx serve docfx_project/_site to preview the website locally. If port 8080 is not in use, docfx will host _site under http://localhost:8080 . If 8080 is in use, you can use docfx serve _site -p <port> to change the port to be used by docfx . Congrats! You can now see a simple website similar to: Step5. Add a set of articles to the website Place more .md files to articles , e.g. details1.md , details2.md , details3.md . If the file references any resources, put those resources into the images folder. In order to organize these articles, we add these files into toc.yml under articles subfolder. The content of toc.yml is as below: - name: Introduction href: intro.md - name: Details 1 href: details1.md - name: Details 2 href: details2.md - name: Details 3 href: details3.md So now our folder layout is: |- index.md |- toc.yml |- articles | |- intro.md | |- details1.md | |- details2.md | |- details3.md | |- toc.yml |- images |- details1_image.png Run Step3 and Step4 again, and the website is now: . Notice that more items are added to the sidebar for Articles nav page. The title inside the sidebar is exactly what we set in the toc.yml inside articles subfolder. Conclusion In this walkthrough, we build a website from a set of .md files. We call these .md files Conceptual Documentation . In walkthrough part 2, we will learn to add API Documentation to our website. The API Documentation is extracted directly from .NET source code. In a series of advanced walkthroughs, we will learn advanced concepts in docfx , such as cross reference between articles, external reference to other documentations, etc. We will also learn to customize our websites, from theme to layout to metadata extraction. Read more Walkthrough Part II: Adding API Documentation to the Website Walkthrough Advanced: Customize Your Website"
  },
  "tutorial/walkthrough/walkthrough_create_a_docfx_project_2.html": {
    "href": "tutorial/walkthrough/walkthrough_create_a_docfx_project_2.html",
    "title": "Walkthrough Part II: Adding API Documentation to the Website | DocFX website",
    "keywords": "Walkthrough Part II: Adding API Documentation to the Website After completing Walkthrough Part I: Generate a Simple Documentation Website , we build a website from a set of .md files. We call it Conceptual Documentation . In this walkthrough, we will learn to build website from .NET source code, which is called API Documentation . We will also integrate Conceptual Documentation and API Documentation into one website, so that we can navigate from Conceptual to API , or API to Conceptual seamlessly. Download the files used in this walkthrough here . After completing walkthrough part I, our D:\\docfx_walkthrough\\docfx_project folder is in the following structure: |- index.md |- toc.yml |- articles | |- intro.md | |- details1.md | |- details2.md | |- details3.md | |- toc.yml |- images |- details1_image.png |- api |- index.md |- toc.yml Step1. Add a C# project Create a subfolder src under D:\\docfx_walkthrough\\docfx_project . Open Visual Studio Community 2015 (or an above version) and create a C# Class Library HelloDocfx under folder src . In the Class1.cs , add some comments and methods to this class, similar to: namespace HelloDocfx { /// <summary> /// Hello this is **Class1** from *HelloDocfx* /// </summary> public class Class1 { private InnerClass _class; public int Value { get; } /// <summary> /// This is a ctor /// </summary> /// <param name=\"value\">The value of the class</param> public Class1(int value) { Value = value; } public double ConvertToDouble() { return Value; } /// <summary> /// A method referencing a inner class /// </summary> /// <param name=\"name\">The name</param> /// <param name=\"inner\">A inner class with type <seealso cref=\"InnerClass\"/></param> public void SetInnerClass(string name, InnerClass inner) { inner.Name = name; _class = inner; } public class InnerClass { public string Name { get; set; } } } } Step2. Generate metadata for the C# project Calling docfx metadata under D:\\docfx_walkthrough\\docfx_project . docfx metadata is a sub-command registered in docfx , and it reads configuration in the metadata section from docfx.json . [ \"src/**.csproj\" ] in metadata/src/files tells docfx to search all the csproj from src subfolder to generate metadata. \"metadata\": [ { \"src\": [ { \"files\": [ \"src/**.csproj\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\", \"_site/**\" ] } ], \"dest\": \"api\" } ] This generates several YAML files in the api folder. The YAML file contains the data model extracted from C# source code file. YAML is the metadata format used in docfx . General Metadata Spec defines the general schema, and .NET Metadata Spec defines the metadata schema for .NET languages that docfx can consume. |- HelloDocfx.Class1.InnerClass.yml |- HelloDocfx.Class1.yml |- HelloDocfx.yml |- toc.yml Step3. Build and preview our website Running the command docfx . docfx reads docfx.json and execute subcommands defined in the config file one by one. Our docfx.json defines metadata and build , so by running docfx , we are actually executing docfx metadata and docfx build , and thus generating the website. Run docfx serve _site , and the website is now: . Step4. Add another API documentation Create another subfolder src2 under D:\\docfx_walkthrough\\docfx_project . Besides generating API documentation from project files, docfx can generate documentation directly from source code. Let's create a Class2.cs as similar to: namespace HelloDocfx { /// <summary> /// Hello this is **Class2** from *HelloDocfx* /// </summary> public class Class2 { private InnerClass _class; public int Value { get; } /// <summary> /// This is a ctor /// </summary> /// <param name=\"value\">The value of the class</param> public Class2(int value) { Value = value; } public double ConvertToDouble() { return Value; } /// <summary> /// A method referencing a inner class /// </summary> /// <param name=\"name\">The name</param> /// <param name=\"inner\">A inner class with type <seealso cref=\"InnerClass\"/></param> public void SetInnerClass(string name, InnerClass inner) { inner.Name = name; _class = inner; } public class InnerClass { public string Name { get; set; } } } } Add it to the `metadata` section of our `docfx.json` as follows. ```json \"metadata\": [ { \"src\": [ { \"files\": [ \"src/**.csproj\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\", \"_site/**\" ] } ], \"dest\": \"api\" }, { \"src\": \"src2/**.cs\", \"dest\": \"api-vb\" } ] What it means is that the YAML metadata files for \"src2/**.cs\" are generated into \"api-vb\" folder. Let's also include the generated YAML files in build section: \"build\": { \"content\": [ { \"files\": [ \"api-vb/**.yml\" ] } ... For it to be organized and shown to website, we also need to modify our D:\\docfx_walkthrough\\docfx_project\\toc.yml file. Don't forget to append slash / for the value of href . - name: Articles href: articles/ - name: Api Documentation href: api/ homepage: api/index.md - name: Another Api Documentation href: api-vb/ Now, let's run docfx --serve again, and the website is now: . Conclusion In this walkthrough, we build a website containing both Conceptual Documentation and API Documentation . In the upcoming series of advanced walkthroughs, we will learn advanced concepts in docfx , such as cross reference between articles, external reference to other documentations, etc. We will also learn to customize our websites, from theme to layout to metadata extraction. Read more Walkthrough Part I: Generate a Simple Documentation Website Walkthrough Advanced: Customize Your Website"
  },
  "tutorial/walkthrough/walkthrough_overview.html": {
    "href": "tutorial/walkthrough/walkthrough_overview.html",
    "title": "Walkthrough Overview | DocFX website",
    "keywords": "Walkthrough Overview By completing these walkthroughs, you'll create a static website, containing both Conceptual Documentation which comes from .md files and API Documentation which comes from .NET source code. You'll also be able to customize your website with your own styles and templates! List of Articles Walkthrough Part I: Generate a Simple Documentation Website Walkthrough Part II: Adding API Documentation to the Website Walkthrough Advanced: Customize Your Website"
  },
  "api/Microsoft.DocAsCode.Exceptions.ExtractMetadataException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.ExtractMetadataException.html",
    "title": "Class ExtractMetadataException | DocFX website",
    "keywords": "Class ExtractMetadataException Inheritance Object Exception DocfxException ExtractMetadataException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class ExtractMetadataException : DocfxException, ISerializable, _Exception Constructors ExtractMetadataException() Declaration public ExtractMetadataException() ExtractMetadataException(SerializationInfo, StreamingContext) Declaration protected ExtractMetadataException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context ExtractMetadataException(String) Declaration public ExtractMetadataException(string message) Parameters Type Name Description String message ExtractMetadataException(String, Exception) Declaration public ExtractMetadataException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.InvalidOptionException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.InvalidOptionException.html",
    "title": "Class InvalidOptionException | DocFX website",
    "keywords": "Class InvalidOptionException Inheritance Object Exception SystemException ArgumentException InvalidOptionException Inherited Members ArgumentException.GetObjectData(SerializationInfo, StreamingContext) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :docfx.dll Syntax public class InvalidOptionException : ArgumentException, _Exception, ISerializable Constructors InvalidOptionException() Declaration public InvalidOptionException() InvalidOptionException(SerializationInfo, StreamingContext) Declaration protected InvalidOptionException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context InvalidOptionException(String) Declaration public InvalidOptionException(string message) Parameters Type Name Description String message InvalidOptionException(String, Exception) Declaration public InvalidOptionException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException InvalidOptionException(String, String) Declaration public InvalidOptionException(string message, string paramName) Parameters Type Name Description String message String paramName InvalidOptionException(String, String, Exception) Declaration public InvalidOptionException(string message, string paramName, Exception innerException) Parameters Type Name Description String message String paramName Exception innerException Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.PluginDirectoryAlreadyExistsException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.PluginDirectoryAlreadyExistsException.html",
    "title": "Class PluginDirectoryAlreadyExistsException | DocFX website",
    "keywords": "Class PluginDirectoryAlreadyExistsException Inheritance Object Exception DocfxException PluginException PluginDirectoryAlreadyExistsException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :docfx.dll Syntax [Serializable] public class PluginDirectoryAlreadyExistsException : PluginException, ISerializable, _Exception Constructors PluginDirectoryAlreadyExistsException(SerializationInfo, StreamingContext) Declaration protected PluginDirectoryAlreadyExistsException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context PluginDirectoryAlreadyExistsException(String) Declaration public PluginDirectoryAlreadyExistsException(string directoryName) Parameters Type Name Description String directoryName Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.PluginException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.PluginException.html",
    "title": "Class PluginException | DocFX website",
    "keywords": "Class PluginException Inheritance Object Exception DocfxException PluginException PluginDirectoryAlreadyExistsException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :docfx.dll Syntax [Serializable] public class PluginException : DocfxException, ISerializable, _Exception Constructors PluginException() Declaration public PluginException() PluginException(SerializationInfo, StreamingContext) Declaration protected PluginException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context PluginException(String) Declaration public PluginException(string message) Parameters Type Name Description String message Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmUrlInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmUrlInlineRule.html",
    "title": "Class GfmUrlInlineRule | DocFX website",
    "keywords": "Class GfmUrlInlineRule Inheritance Object GfmUrlInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmUrlInlineRule : IMarkdownRule Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Url Declaration public virtual Regex Url { get; } Property Value Type Description Regex Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.HtmlRenderer.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.HtmlRenderer.html",
    "title": "Class HtmlRenderer | DocFX website",
    "keywords": "Class HtmlRenderer The html renderer for gfm. Inheritance Object HtmlRenderer DfmRenderer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class HtmlRenderer Methods AppendAttribute(StringBuffer, String, String) Declaration protected static StringBuffer AppendAttribute(StringBuffer buffer, string attributeName, string value) Parameters Type Name Description StringBuffer buffer String attributeName String value Returns Type Description StringBuffer AppendSourceInfo(StringBuffer, IMarkdownRenderer, IMarkdownToken) Declaration protected static StringBuffer AppendSourceInfo(StringBuffer result, IMarkdownRenderer renderer, IMarkdownToken token) Parameters Type Name Description StringBuffer result IMarkdownRenderer renderer IMarkdownToken token Returns Type Description StringBuffer Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, GfmDelInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer GfmDelInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, GfmEmojiInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, GfmEmojiInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer GfmEmojiInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownBrInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownBrInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBrInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownCodeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownCodeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownCodeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownCodeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownCodeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownCodeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownEmInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownEmInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownEscapeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownEscapeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownEscapeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHeadingBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHeadingBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHrBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHrBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHtmlBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHtmlBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownIgnoreToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownIgnoreToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownIgnoreToken token IMarkdownContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownImageInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownImageInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownLinkInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownLinkInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownListBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownListBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownListItemBlockToken) Declaration protected virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownListItemBlockToken token) Parameters Type Name Description IMarkdownRenderer renderer MarkdownListItemBlockToken token Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownNewLineBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownNewLineBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownNewLineBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownNonParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownNonParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownRawToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownRawToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownRawToken token IMarkdownContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownStrongInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownStrongInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTableBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTableBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownTagInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTagInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTagInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownTextToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTextToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTextToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownTextToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTextToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTextToken token MarkdownInlineContext context Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IInitializable.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IInitializable.html",
    "title": "Interface IInitializable | DocFX website",
    "keywords": "Interface IInitializable Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IInitializable Methods Initialize(IMarkdownRewriteEngine) Declaration void Initialize(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownContext.html",
    "title": "Interface IMarkdownContext | DocFX website",
    "keywords": "Interface IMarkdownContext The context for markdown parser. It should be immutable. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownContext Properties Rules Get the rule set for current context. Declaration ImmutableList<IMarkdownRule> Rules { get; } Property Value Type Description System.Collections.Immutable.ImmutableList < IMarkdownRule > Variables Get the variables. Declaration ImmutableDictionary<string, object> Variables { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Methods CreateContext(ImmutableDictionary<String, Object>) Create a new context with different variables. Declaration IMarkdownContext CreateContext(ImmutableDictionary<string, object> variables) Parameters Type Name Description System.Collections.Immutable.ImmutableDictionary < String , Object > variables The new variables. Returns Type Description IMarkdownContext a new instance of IMarkdownContext Extension Methods DfmContextExtensions.GetFilePathStack(IMarkdownContext) DfmContextExtensions.SetFilePathStack(IMarkdownContext, ImmutableStack<String>) DfmContextExtensions.GetBaseFolder(IMarkdownContext) DfmContextExtensions.SetBaseFolder(IMarkdownContext, String) DfmContextExtensions.GetFallbackFolders(IMarkdownContext) DfmContextExtensions.SetFallbackFolders(IMarkdownContext, IReadOnlyList<String>) DfmContextExtensions.SetDependency(IMarkdownContext, HashSet<String>) DfmContextExtensions.ReportDependency(IMarkdownContext, String) DfmContextExtensions.ReportDependency(IMarkdownContext, IEnumerable<String>) DfmContextExtensions.GetIsInclude(IMarkdownContext) DfmContextExtensions.SetIsInclude(IMarkdownContext) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListBlockToken.html",
    "title": "Class MarkdownListBlockToken | DocFX website",
    "keywords": "Class MarkdownListBlockToken Inheritance Object MarkdownListBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownListBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownListBlockToken> Constructors MarkdownListBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, Boolean, SourceInfo) Declaration public MarkdownListBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> tokens, bool ordered, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Boolean ordered SourceInfo sourceInfo MarkdownListBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, Boolean, Int32, SourceInfo) Declaration public MarkdownListBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> tokens, bool ordered, int start, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Boolean ordered Int32 start SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Ordered Declaration public bool Ordered { get; } Property Value Type Description Boolean Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Start Declaration public int Start { get; } Property Value Type Description Int32 Tokens Declaration public ImmutableArray<IMarkdownToken> Tokens { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownListBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownListBlockToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListItemBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListItemBlockToken.html",
    "title": "Class MarkdownListItemBlockToken | DocFX website",
    "keywords": "Class MarkdownListItemBlockToken Inheritance Object MarkdownListItemBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownListItemBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownListItemBlockToken> Constructors MarkdownListItemBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, Boolean, SourceInfo) Declaration public MarkdownListItemBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> tokens, bool loose, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Boolean loose SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Loose Declaration public bool Loose { get; } Property Value Type Description Boolean Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Tokens Declaration public ImmutableArray<IMarkdownToken> Tokens { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownListItemBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownListItemBlockToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNewLineBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNewLineBlockRule.html",
    "title": "Class MarkdownNewLineBlockRule | DocFX website",
    "keywords": "Class MarkdownNewLineBlockRule Inheritance Object MarkdownNewLineBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownNewLineBlockRule : IMarkdownRule Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Newline Declaration [Obsolete(\"Please use NewLineMatcher.\")] public virtual Regex Newline { get; } Property Value Type Description Regex NewLineMatcher Declaration public virtual Matcher NewLineMatcher { get; } Property Value Type Description Matcher Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNewLineBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNewLineBlockToken.html",
    "title": "Class MarkdownNewLineBlockToken | DocFX website",
    "keywords": "Class MarkdownNewLineBlockToken Inheritance Object MarkdownNewLineBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownNewLineBlockToken : IMarkdownToken Constructors MarkdownNewLineBlockToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownNewLineBlockToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNoLinkInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNoLinkInlineRule.html",
    "title": "Class MarkdownNoLinkInlineRule | DocFX website",
    "keywords": "Class MarkdownNoLinkInlineRule Inheritance Object MarkdownLinkBaseInlineRule MarkdownNoLinkInlineRule Inherited Members MarkdownLinkBaseInlineRule.GenerateToken(IMarkdownParser, String, String, String, Boolean, SourceInfo, MarkdownLinkType, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownNoLinkInlineRule : MarkdownLinkBaseInlineRule, IMarkdownRule Properties Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownLinkBaseInlineRule.Name NoLink Declaration public virtual Regex NoLink { get; } Property Value Type Description Regex Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides MarkdownLinkBaseInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNonParagraphBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNonParagraphBlockToken.html",
    "title": "Class MarkdownNonParagraphBlockToken | DocFX website",
    "keywords": "Class MarkdownNonParagraphBlockToken Inheritance Object MarkdownNonParagraphBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownNonParagraphBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownNonParagraphBlockToken> Constructors MarkdownNonParagraphBlockToken(IMarkdownRule, IMarkdownContext, InlineContent, SourceInfo) Declaration public MarkdownNonParagraphBlockToken(IMarkdownRule rule, IMarkdownContext context, InlineContent content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context InlineContent content SourceInfo sourceInfo Properties Content Declaration public InlineContent Content { get; } Property Value Type Description InlineContent Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownNonParagraphBlockToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description MarkdownNonParagraphBlockToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNpTableBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNpTableBlockRule.html",
    "title": "Class MarkdownNpTableBlockRule | DocFX website",
    "keywords": "Class MarkdownNpTableBlockRule Inheritance Object MarkdownNpTableBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownNpTableBlockRule : IMarkdownRule Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name NpTable Declaration [Obsolete(\"Please use NewLineMatcher.\")] public virtual Regex NpTable { get; } Property Value Type Description Regex NpTableMatcher Declaration public virtual Matcher NpTableMatcher { get; } Property Value Type Description Matcher Methods ParseAligns(String[]) Declaration protected virtual Align[] ParseAligns(string[] aligns) Parameters Type Name Description String [] aligns Returns Type Description Align [] TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParagraphBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParagraphBlockRule.html",
    "title": "Class MarkdownParagraphBlockRule | DocFX website",
    "keywords": "Class MarkdownParagraphBlockRule Inheritance Object MarkdownParagraphBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownParagraphBlockRule : IMarkdownRule Fields Instance Declaration public static readonly MarkdownParagraphBlockRule Instance Field Value Type Description MarkdownParagraphBlockRule Properties Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentParserContext.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentParserContext.html",
    "title": "Class TripleSlashCommentParserContext | DocFX website",
    "keywords": "Class TripleSlashCommentParserContext Inheritance Object TripleSlashCommentParserContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class TripleSlashCommentParserContext : ITripleSlashCommentParserContext Properties AddReferenceDelegate Declaration public Action<string, string> AddReferenceDelegate { get; set; } Property Value Type Description Action < String , String > Implements ITripleSlashCommentParserContext.AddReferenceDelegate PreserveRawInlineComments Declaration public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean Implements ITripleSlashCommentParserContext.PreserveRawInlineComments Source Declaration public SourceDetail Source { get; set; } Property Value Type Description SourceDetail Implements ITripleSlashCommentParserContext.Source Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.MarkupResult.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.MarkupResult.html",
    "title": "Class MarkupResult | DocFX website",
    "keywords": "Class MarkupResult Inheritance Object MarkupResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class MarkupResult Properties Dependency Declaration public ImmutableArray<string> Dependency { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > FileLinkSources Declaration public ImmutableDictionary<string, ImmutableList<LinkSourceInfo>> FileLinkSources { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , System.Collections.Immutable.ImmutableList < LinkSourceInfo >> Html Declaration public string Html { get; set; } Property Value Type Description String LinkToFiles Declaration public ImmutableArray<string> LinkToFiles { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > LinkToUids Declaration public ImmutableHashSet<string> LinkToUids { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableHashSet < String > UidLinkSources Declaration public ImmutableDictionary<string, ImmutableList<LinkSourceInfo>> UidLinkSources { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , System.Collections.Immutable.ImmutableList < LinkSourceInfo >> YamlHeader Declaration public ImmutableDictionary<string, object> YamlHeader { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Methods Clone() Declaration public MarkupResult Clone() Returns Type Description MarkupResult Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ModelWithCache.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ModelWithCache.html",
    "title": "Class ModelWithCache | DocFX website",
    "keywords": "Class ModelWithCache Inheritance Object ModelWithCache Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public sealed class ModelWithCache : IDisposable Constructors ModelWithCache(Object, IFormatter) Declaration public ModelWithCache(object content, IFormatter serializer = null) Parameters Type Name Description Object content IFormatter serializer Properties Content Declaration public object Content { get; set; } Property Value Type Description Object File Declaration public string File { get; set; } Property Value Type Description String Serializer Declaration public IFormatter Serializer { get; set; } Property Value Type Description IFormatter Methods Deserialize() Declaration public bool Deserialize() Returns Type Description Boolean Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Serialize() Declaration public bool Serialize() Returns Type Description Boolean Events ContentAccessed Declaration public event EventHandler ContentAccessed Event Type Type Description EventHandler Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ObservableDictionary-2.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ObservableDictionary-2.html",
    "title": "Class ObservableDictionary<TKey, TValue> | DocFX website",
    "keywords": "Class ObservableDictionary<TKey, TValue> Inheritance Object ObservableDictionary<TKey, TValue> OutputFileCollection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class ObservableDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, INotifyCollectionChanged Type Parameters Name Description TKey TValue Constructors ObservableDictionary() Declaration public ObservableDictionary() ObservableDictionary(IEqualityComparer<TKey>) Declaration public ObservableDictionary(IEqualityComparer<TKey> comparer) Parameters Type Name Description IEqualityComparer <TKey> comparer Properties Comparer Declaration public IEqualityComparer<TKey> Comparer { get; } Property Value Type Description IEqualityComparer <TKey> Count Declaration public int Count { get; } Property Value Type Description Int32 Implements ICollection<T>.Count IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Implements ICollection<T>.IsReadOnly Item[TKey] Declaration public TValue this[TKey key] { get; set; } Parameters Type Name Description TKey key Property Value Type Description TValue Implements IDictionary<TKey, TValue>.Item[TKey] Keys Declaration public ICollection<TKey> Keys { get; } Property Value Type Description ICollection <TKey> Implements IDictionary<TKey, TValue>.Keys Values Declaration public ICollection<TValue> Values { get; } Property Value Type Description ICollection <TValue> Implements IDictionary<TKey, TValue>.Values Methods Add(TKey, TValue) Declaration public void Add(TKey key, TValue value) Parameters Type Name Description TKey key TValue value Implements IDictionary<TKey, TValue>.Add(TKey, TValue) Clear() Declaration public void Clear() Implements ICollection<T>.Clear() ContainsKey(TKey) Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key Returns Type Description Boolean Implements IDictionary<TKey, TValue>.ContainsKey(TKey) GetEnumerator() Declaration public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair <TKey, TValue>> Implements IEnumerable<T>.GetEnumerator() Remove(TKey) Declaration public bool Remove(TKey key) Parameters Type Name Description TKey key Returns Type Description Boolean Implements IDictionary<TKey, TValue>.Remove(TKey) TryGetValue(TKey, out TValue) Declaration public bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description Boolean Implements IDictionary<TKey, TValue>.TryGetValue(TKey, TValue) Events CollectionChanged Declaration public event NotifyCollectionChangedEventHandler CollectionChanged Event Type Type Description NotifyCollectionChangedEventHandler Implements INotifyCollectionChanged.CollectionChanged Explicit Interface Implementations ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>) Declaration void ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair <TKey, TValue> item Implements ICollection<T>.Add(T) ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>) Declaration bool ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair <TKey, TValue> item Returns Type Description Boolean Implements ICollection<T>.Contains(T) ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32) Declaration void ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair <TKey, TValue>[] array Int32 arrayIndex Implements ICollection<T>.CopyTo(T[], Int32) ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>) Declaration bool ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair <TKey, TValue> item Returns Type Description Boolean Implements ICollection<T>.Remove(T) IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements IEnumerable.GetEnumerator() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Plugins.OutputFileCollection.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.OutputFileCollection.html",
    "title": "Class OutputFileCollection | DocFX website",
    "keywords": "Class OutputFileCollection Inheritance Object ObservableDictionary < String , OutputFileInfo > OutputFileCollection Inherited Members ObservableDictionary<String, OutputFileInfo>.Comparer ObservableDictionary<String, OutputFileInfo>.Item[String] ObservableDictionary<String, OutputFileInfo>.Keys ObservableDictionary<String, OutputFileInfo>.Values ObservableDictionary<String, OutputFileInfo>.Add(String, OutputFileInfo) ObservableDictionary<String, OutputFileInfo>.ContainsKey(String) ObservableDictionary<String, OutputFileInfo>.Remove(String) ObservableDictionary<String, OutputFileInfo>.TryGetValue(String, OutputFileInfo) ObservableDictionary<String, OutputFileInfo>.Count ObservableDictionary<String, OutputFileInfo>.IsReadOnly ObservableDictionary<String, OutputFileInfo>.ICollection<KeyValuePair<String, OutputFileInfo>>.Add(KeyValuePair<String, OutputFileInfo>) ObservableDictionary<String, OutputFileInfo>.Clear() ObservableDictionary<String, OutputFileInfo>.ICollection<KeyValuePair<String, OutputFileInfo>>.Contains(KeyValuePair<String, OutputFileInfo>) ObservableDictionary<String, OutputFileInfo>.ICollection<KeyValuePair<String, OutputFileInfo>>.CopyTo(KeyValuePair<String, OutputFileInfo>[], Int32) ObservableDictionary<String, OutputFileInfo>.ICollection<KeyValuePair<String, OutputFileInfo>>.Remove(KeyValuePair<String, OutputFileInfo>) ObservableDictionary<String, OutputFileInfo>.GetEnumerator() ObservableDictionary<String, OutputFileInfo>.IEnumerable.GetEnumerator() ObservableDictionary<String, OutputFileInfo>.CollectionChanged Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class OutputFileCollection : ObservableDictionary<string, OutputFileInfo>, IDictionary<string, OutputFileInfo>, ICollection<KeyValuePair<string, OutputFileInfo>>, IEnumerable<KeyValuePair<string, OutputFileInfo>>, IEnumerable, INotifyCollectionChanged Properties Comparer Declaration public IEqualityComparer<string> Comparer { get; } Property Value Type Description IEqualityComparer < String > Count Declaration public int Count { get; } Property Value Type Description Int32 Item[String] Declaration public OutputFileInfo this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description OutputFileInfo Keys Declaration public ICollection<string> Keys { get; } Property Value Type Description ICollection < String > Values Declaration public ICollection<OutputFileInfo> Values { get; } Property Value Type Description ICollection < OutputFileInfo > Methods Add(String, OutputFileInfo) Declaration public void Add(string key, OutputFileInfo value) Parameters Type Name Description String key OutputFileInfo value Clear() Declaration public void Clear() ContainsKey(String) Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean ContainsValue(OutputFileInfo) Declaration public bool ContainsValue(OutputFileInfo value) Parameters Type Name Description OutputFileInfo value Returns Type Description Boolean GetEnumerator() Declaration public IEnumerator<KeyValuePair<string, OutputFileInfo>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < String , OutputFileInfo >> Remove(String) Declaration public bool Remove(string key) Parameters Type Name Description String key Returns Type Description Boolean TryGetValue(String, out OutputFileInfo) Declaration public bool TryGetValue(string key, out OutputFileInfo value) Parameters Type Name Description String key OutputFileInfo value Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Plugins.OutputFileInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.OutputFileInfo.html",
    "title": "Class OutputFileInfo | DocFX website",
    "keywords": "Class OutputFileInfo Inheritance Object OutputFileInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class OutputFileInfo : INotifyPropertyChanged Properties Hash Declaration [JsonProperty(\"hash\")] public string Hash { get; set; } Property Value Type Description String LinkToPath Declaration [JsonProperty(\"link_to_path\")] public string LinkToPath { get; set; } Property Value Type Description String Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > RelativePath Declaration [JsonProperty(\"relative_path\")] public string RelativePath { get; set; } Property Value Type Description String Methods OnPropertyChanged(String, String, String) Declaration protected void OnPropertyChanged(string propertyName, string original, string current) Parameters Type Name Description String propertyName String original String current Events PropertyChanged Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ProcessingPriority.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ProcessingPriority.html",
    "title": "Enum ProcessingPriority | DocFX website",
    "keywords": "Enum ProcessingPriority Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public enum ProcessingPriority Fields Name Description AboveNormal BelowNormal High Low Normal NotSupported Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.PropertyChangedEventArgs-1.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.PropertyChangedEventArgs-1.html",
    "title": "Class PropertyChangedEventArgs<T> | DocFX website",
    "keywords": "Class PropertyChangedEventArgs<T> Inheritance Object EventArgs PropertyChangedEventArgs PropertyChangedEventArgs<T> Inherited Members PropertyChangedEventArgs.PropertyName EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class PropertyChangedEventArgs<T> : PropertyChangedEventArgs Type Parameters Name Description T Constructors PropertyChangedEventArgs(String, T, T) Declaration public PropertyChangedEventArgs(string propertyName, T original, T current) Parameters Type Name Description String propertyName T original T current Properties Current Declaration public T Current { get; } Property Value Type Description T Original Declaration public T Original { get; } Property Value Type Description T Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.RootedFileAbstractLayer.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.RootedFileAbstractLayer.html",
    "title": "Class RootedFileAbstractLayer | DocFX website",
    "keywords": "Class RootedFileAbstractLayer Inheritance Object RootedFileAbstractLayer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class RootedFileAbstractLayer : IFileAbstractLayer Constructors RootedFileAbstractLayer(IFileAbstractLayer) Declaration public RootedFileAbstractLayer(IFileAbstractLayer impl) Parameters Type Name Description IFileAbstractLayer impl Properties CanRead Declaration public bool CanRead { get; } Property Value Type Description Boolean Implements IFileAbstractLayer.CanRead CanWrite Declaration public bool CanWrite { get; } Property Value Type Description Boolean Implements IFileAbstractLayer.CanWrite Methods Copy(String, String) Declaration public void Copy(string sourceFileName, string destFileName) Parameters Type Name Description String sourceFileName String destFileName Implements IFileAbstractLayer.Copy(String, String) Create(String) Declaration public Stream Create(string file) Parameters Type Name Description String file Returns Type Description Stream Implements IFileAbstractLayer.Create(String) Exists(String) Declaration public bool Exists(string file) Parameters Type Name Description String file Returns Type Description Boolean Implements IFileAbstractLayer.Exists(String) GetAllInputFiles() Declaration public IEnumerable<string> GetAllInputFiles() Returns Type Description IEnumerable < String > Implements IFileAbstractLayer.GetAllInputFiles() GetPhysicalPath(String) Declaration public string GetPhysicalPath(string file) Parameters Type Name Description String file Returns Type Description String Implements IFileAbstractLayer.GetPhysicalPath(String) GetProperties(String) Declaration public ImmutableDictionary<string, string> GetProperties(string file) Parameters Type Name Description String file Returns Type Description System.Collections.Immutable.ImmutableDictionary < String , String > Implements IFileAbstractLayer.GetProperties(String) OpenRead(String) Declaration public Stream OpenRead(string file) Parameters Type Name Description String file Returns Type Description Stream Implements IFileAbstractLayer.OpenRead(String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) FileAbstractLayerExtensions.OpenReadText(IFileAbstractLayer, String) FileAbstractLayerExtensions.ReadAllText(IFileAbstractLayer, String) FileAbstractLayerExtensions.ReadAllLines(IFileAbstractLayer, String) FileAbstractLayerExtensions.CreateText(IFileAbstractLayer, String) FileAbstractLayerExtensions.WriteAllText(IFileAbstractLayer, String, String) FileAbstractLayerExtensions.HasProperty(IFileAbstractLayer, String, String) FileAbstractLayerExtensions.GetProperty(IFileAbstractLayer, String, String) FileAbstractLayerExtensions.GetAllPhysicalPaths(IFileAbstractLayer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies Classes FullObjectGraphTraversalStrategy An implementation of YamlDotNet.Serialization.IObjectGraphTraversalStrategy that traverses readable properties, collections and dictionaries. RoundtripObjectGraphTraversalStrategy An implementation of YamlDotNet.Serialization.IObjectGraphTraversalStrategy that traverses properties that are read/write, collections and dictionaries, while ensuring that the graph can be regenerated from the resulting document."
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.EmitTypeInspector.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.EmitTypeInspector.html",
    "title": "Class EmitTypeInspector | DocFX website",
    "keywords": "Class EmitTypeInspector Inheritance Object ExtensibleTypeInspectorSkeleton EmitTypeInspector Inherited Members ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class EmitTypeInspector : ExtensibleTypeInspectorSkeleton, IExtensibleTypeInspector, ITypeInspector Constructors EmitTypeInspector(ITypeResolver) Declaration public EmitTypeInspector(ITypeResolver resolver) Parameters Type Name Description YamlDotNet.Serialization.ITypeResolver resolver Methods GetProperties(Type, Object) Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type Object container Returns Type Description IEnumerable < YamlDotNet.Serialization.IPropertyDescriptor > Overrides ExtensibleTypeInspectorSkeleton.GetProperties(Type, Object) GetProperty(Type, Object, String) Declaration public override IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Overrides ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleNamingConventionTypeInspector.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleNamingConventionTypeInspector.html",
    "title": "Class ExtensibleNamingConventionTypeInspector | DocFX website",
    "keywords": "Class ExtensibleNamingConventionTypeInspector Inheritance Object ExtensibleTypeInspectorSkeleton ExtensibleNamingConventionTypeInspector Inherited Members ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class ExtensibleNamingConventionTypeInspector : ExtensibleTypeInspectorSkeleton, IExtensibleTypeInspector, ITypeInspector Constructors ExtensibleNamingConventionTypeInspector(IExtensibleTypeInspector, INamingConvention) Declaration public ExtensibleNamingConventionTypeInspector(IExtensibleTypeInspector innerTypeDescriptor, INamingConvention namingConvention) Parameters Type Name Description IExtensibleTypeInspector innerTypeDescriptor YamlDotNet.Serialization.INamingConvention namingConvention Methods GetProperties(Type, Object) Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type Object container Returns Type Description IEnumerable < YamlDotNet.Serialization.IPropertyDescriptor > Overrides ExtensibleTypeInspectorSkeleton.GetProperties(Type, Object) GetProperty(Type, Object, String) Declaration public override IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Overrides ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleReadableAndWritablePropertiesTypeInspector.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleReadableAndWritablePropertiesTypeInspector.html",
    "title": "Class ExtensibleReadableAndWritablePropertiesTypeInspector | DocFX website",
    "keywords": "Class ExtensibleReadableAndWritablePropertiesTypeInspector Inheritance Object ExtensibleTypeInspectorSkeleton ExtensibleReadableAndWritablePropertiesTypeInspector Inherited Members ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class ExtensibleReadableAndWritablePropertiesTypeInspector : ExtensibleTypeInspectorSkeleton, IExtensibleTypeInspector, ITypeInspector Constructors ExtensibleReadableAndWritablePropertiesTypeInspector(IExtensibleTypeInspector) Declaration public ExtensibleReadableAndWritablePropertiesTypeInspector(IExtensibleTypeInspector innerTypeDescriptor) Parameters Type Name Description IExtensibleTypeInspector innerTypeDescriptor Methods GetProperties(Type, Object) Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type Object container Returns Type Description IEnumerable < YamlDotNet.Serialization.IPropertyDescriptor > Overrides ExtensibleTypeInspectorSkeleton.GetProperties(Type, Object) GetProperty(Type, Object, String) Declaration public override IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Overrides ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleTypeInspectorSkeleton.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleTypeInspectorSkeleton.html",
    "title": "Class ExtensibleTypeInspectorSkeleton | DocFX website",
    "keywords": "Class ExtensibleTypeInspectorSkeleton Inheritance Object ExtensibleTypeInspectorSkeleton EmitTypeInspector ExtensibleNamingConventionTypeInspector ExtensibleReadableAndWritablePropertiesTypeInspector ExtensibleYamlAttributesTypeInspector Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public abstract class ExtensibleTypeInspectorSkeleton : IExtensibleTypeInspector, ITypeInspector Methods GetProperties(Type, Object) Declaration public abstract IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type Object container Returns Type Description IEnumerable < YamlDotNet.Serialization.IPropertyDescriptor > Implements YamlDotNet.Serialization.ITypeInspector.GetProperties(System.Type, System.Object) GetProperty(Type, Object, String) Declaration public virtual IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Implements IExtensibleTypeInspector.GetProperty(Type, Object, String) GetProperty(Type, Object, String, Boolean) Declaration public IPropertyDescriptor GetProperty(Type type, object container, string name, bool ignoreUnmatched) Parameters Type Name Description Type type Object container String name Boolean ignoreUnmatched Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Implements YamlDotNet.Serialization.ITypeInspector.GetProperty(System.Type, System.Object, System.String, System.Boolean) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleYamlAttributesTypeInspector.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleYamlAttributesTypeInspector.html",
    "title": "Class ExtensibleYamlAttributesTypeInspector | DocFX website",
    "keywords": "Class ExtensibleYamlAttributesTypeInspector Applies the YamlDotNet.Serialization.YamlMemberAttribute to another YamlDotNet.Serialization.ITypeInspector . Inheritance Object ExtensibleTypeInspectorSkeleton ExtensibleYamlAttributesTypeInspector Inherited Members ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class ExtensibleYamlAttributesTypeInspector : ExtensibleTypeInspectorSkeleton, IExtensibleTypeInspector, ITypeInspector Constructors ExtensibleYamlAttributesTypeInspector(IExtensibleTypeInspector) Declaration public ExtensibleYamlAttributesTypeInspector(IExtensibleTypeInspector innerTypeDescriptor) Parameters Type Name Description IExtensibleTypeInspector innerTypeDescriptor Methods GetProperties(Type, Object) Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type Object container Returns Type Description IEnumerable < YamlDotNet.Serialization.IPropertyDescriptor > Overrides ExtensibleTypeInspectorSkeleton.GetProperties(Type, Object) GetProperty(Type, Object, String) Declaration public override IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Overrides ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.IExtensibleTypeInspector.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.IExtensibleTypeInspector.html",
    "title": "Interface IExtensibleTypeInspector | DocFX website",
    "keywords": "Interface IExtensibleTypeInspector Inherited Members YamlDotNet.Serialization.ITypeInspector.GetProperties(System.Type, System.Object) YamlDotNet.Serialization.ITypeInspector.GetProperty(System.Type, System.Object, System.String, System.Boolean) Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public interface IExtensibleTypeInspector : ITypeInspector Methods GetProperty(Type, Object, String) Declaration IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockToken.html",
    "title": "Class DfmFencesBlockToken | DocFX website",
    "keywords": "Class DfmFencesBlockToken Inheritance Object DfmFencesToken DfmFencesBlockToken Inherited Members DfmFencesToken.Rule DfmFencesToken.Context DfmFencesToken.Path DfmFencesToken.Lang DfmFencesToken.Name DfmFencesToken.Title DfmFencesToken.PathQueryOption DfmFencesToken.SourceInfo Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmFencesBlockToken : DfmFencesToken, IMarkdownToken Constructors DfmFencesBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, IDfmFencesBlockPathQueryOption) Declaration public DfmFencesBlockToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang = null, string title = null, IDfmFencesBlockPathQueryOption pathQueryOption = null) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title IDfmFencesBlockPathQueryOption pathQueryOption Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesInlineRule.html",
    "title": "Class DfmFencesInlineRule | DocFX website",
    "keywords": "Class DfmFencesInlineRule Inheritance Object DfmFencesRule DfmFencesInlineRule Inherited Members DfmFencesRule.ParsePathQueryString(String, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmFencesInlineRule : DfmFencesRule, IMarkdownRule Properties Name Declaration public override string Name { get; } Property Value Type Description String Overrides DfmFencesRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides DfmFencesRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesInlineToken.html",
    "title": "Class DfmFencesInlineToken | DocFX website",
    "keywords": "Class DfmFencesInlineToken Inheritance Object DfmFencesToken DfmFencesInlineToken Inherited Members DfmFencesToken.Rule DfmFencesToken.Context DfmFencesToken.Path DfmFencesToken.Lang DfmFencesToken.Name DfmFencesToken.Title DfmFencesToken.PathQueryOption DfmFencesToken.SourceInfo Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmFencesInlineToken : DfmFencesToken, IMarkdownToken Constructors DfmFencesInlineToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, IDfmFencesBlockPathQueryOption) Declaration public DfmFencesInlineToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang = null, string title = null, IDfmFencesBlockPathQueryOption pathQueryOption = null) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title IDfmFencesBlockPathQueryOption pathQueryOption Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmCustomizedRendererPart.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmCustomizedRendererPart.html",
    "title": "Interface IDfmCustomizedRendererPart | DocFX website",
    "keywords": "Interface IDfmCustomizedRendererPart Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmCustomizedRendererPart Properties MarkdownContextType Declaration Type MarkdownContextType { get; } Property Value Type Description Type MarkdownRendererType Declaration Type MarkdownRendererType { get; } Property Value Type Description Type MarkdownTokenType Declaration Type MarkdownTokenType { get; } Property Value Type Description Type Name Declaration string Name { get; } Property Value Type Description String Methods Match(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration bool Match(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description Boolean Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration StringBuffer Render(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmCustomizedRendererPartProvider.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmCustomizedRendererPartProvider.html",
    "title": "Interface IDfmCustomizedRendererPartProvider | DocFX website",
    "keywords": "Interface IDfmCustomizedRendererPartProvider Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmCustomizedRendererPartProvider Methods CreateParts(IReadOnlyDictionary<String, Object>) Declaration IEnumerable<IDfmCustomizedRendererPart> CreateParts(IReadOnlyDictionary<string, object> parameters) Parameters Type Name Description IReadOnlyDictionary < String , Object > parameters Returns Type Description IEnumerable < IDfmCustomizedRendererPart > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmEngineCustomizer.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmEngineCustomizer.html",
    "title": "Interface IDfmEngineCustomizer | DocFX website",
    "keywords": "Interface IDfmEngineCustomizer Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmEngineCustomizer Methods Customize(DfmEngineBuilder, IReadOnlyDictionary<String, Object>) Customize the DfmEngineBuilder . Declaration void Customize(DfmEngineBuilder builder, IReadOnlyDictionary<string, object> parameters) Parameters Type Name Description DfmEngineBuilder builder The instance of DfmEngineBuilder to customize. IReadOnlyDictionary < String , Object > parameters The markdown engine parameters. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmFencesBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmFencesBlockPathQueryOption.html",
    "title": "Interface IDfmFencesBlockPathQueryOption | DocFX website",
    "keywords": "Interface IDfmFencesBlockPathQueryOption Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmFencesBlockPathQueryOption Properties DedentLength Declaration int ? DedentLength { get; set; } Property Value Type Description Nullable < Int32 > ErrorMessage Declaration string ErrorMessage { get; } Property Value Type Description String HighlightLines Declaration string HighlightLines { get; set; } Property Value Type Description String Methods GetQueryLines(String[]) Declaration IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > ValidateAndPrepare(String[], DfmFencesToken) Declaration bool ValidateAndPrepare(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description Boolean ValidateHighlightLinesAndDedentLength(Int32) Declaration bool ValidateHighlightLinesAndDedentLength(int totalLines) Parameters Type Name Description Int32 totalLines Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmEngineBuilder.html",
    "title": "Class GfmEngineBuilder | DocFX website",
    "keywords": "Class GfmEngineBuilder Inheritance Object MarkdownEngineBuilder GfmEngineBuilder AzureEngineBuilder AzureMigrationEngineBuilder DfmEngineBuilder Inherited Members MarkdownEngineBuilder.Options MarkdownEngineBuilder.BlockRules MarkdownEngineBuilder.InlineRules MarkdownEngineBuilder.Rewriter MarkdownEngineBuilder.TokenTreeValidator MarkdownEngineBuilder.CreateParseContext() MarkdownEngineBuilder.CreateEngine(Object) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmEngineBuilder : MarkdownEngineBuilder Constructors GfmEngineBuilder(Options) Declaration public GfmEngineBuilder(Options options) Parameters Type Name Description Options options Methods BuildBlockRules() Declaration protected virtual void BuildBlockRules() BuildInlineRules() Declaration protected virtual void BuildInlineRules() BuildRules() Declaration protected virtual void BuildRules() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmEscapeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmEscapeInlineRule.html",
    "title": "Class GfmEscapeInlineRule | DocFX website",
    "keywords": "Class GfmEscapeInlineRule Inheritance Object MarkdownEscapeInlineRule GfmEscapeInlineRule Inherited Members MarkdownEscapeInlineRule.Name MarkdownEscapeInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmEscapeInlineRule : MarkdownEscapeInlineRule, IMarkdownRule Properties Escape Declaration public override Regex Escape { get; } Property Value Type Description Regex Overrides MarkdownEscapeInlineRule.Escape Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmFencesBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmFencesBlockRule.html",
    "title": "Class GfmFencesBlockRule | DocFX website",
    "keywords": "Class GfmFencesBlockRule Inheritance Object GfmFencesBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmFencesBlockRule : IMarkdownRule Properties Fences Declaration [Obsolete(\"Please use FencesMatcher.\", true)] public virtual Regex Fences { get; } Property Value Type Description Regex FencesMatcher Declaration public virtual Matcher FencesMatcher { get; } Property Value Type Description Matcher Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmHeadingBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmHeadingBlockRule.html",
    "title": "Class GfmHeadingBlockRule | DocFX website",
    "keywords": "Class GfmHeadingBlockRule Inheritance Object MarkdownHeadingBlockRule GfmHeadingBlockRule Inherited Members MarkdownHeadingBlockRule.Name MarkdownHeadingBlockRule.Heading MarkdownHeadingBlockRule.HeadingMatcher MarkdownHeadingBlockRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax [Obsolete] public class GfmHeadingBlockRule : MarkdownHeadingBlockRule, IMarkdownRule Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngineByOptionsBuilder.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngineByOptionsBuilder.html",
    "title": "Class MarkdownEngineByOptionsBuilder | DocFX website",
    "keywords": "Class MarkdownEngineByOptionsBuilder Inheritance Object MarkdownEngineBuilder MarkdownEngineByOptionsBuilder Inherited Members MarkdownEngineBuilder.Options MarkdownEngineBuilder.BlockRules MarkdownEngineBuilder.InlineRules MarkdownEngineBuilder.Rewriter MarkdownEngineBuilder.TokenTreeValidator MarkdownEngineBuilder.CreateParseContext() MarkdownEngineBuilder.CreateEngine(Object) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEngineByOptionsBuilder : MarkdownEngineBuilder Constructors MarkdownEngineByOptionsBuilder(Options) Declaration public MarkdownEngineByOptionsBuilder(Options options) Parameters Type Name Description Options options Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapedTextInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapedTextInlineRule.html",
    "title": "Class MarkdownEscapedTextInlineRule | DocFX website",
    "keywords": "Class MarkdownEscapedTextInlineRule Inheritance Object MarkdownEscapedTextInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEscapedTextInlineRule : IMarkdownRule Properties EscapedText Declaration public virtual Regex EscapedText { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapeInlineRule.html",
    "title": "Class MarkdownEscapeInlineRule | DocFX website",
    "keywords": "Class MarkdownEscapeInlineRule Inheritance Object MarkdownEscapeInlineRule GfmEscapeInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEscapeInlineRule : IMarkdownRule Properties Escape Declaration public virtual Regex Escape { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapeInlineToken.html",
    "title": "Class MarkdownEscapeInlineToken | DocFX website",
    "keywords": "Class MarkdownEscapeInlineToken Inheritance Object MarkdownEscapeInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEscapeInlineToken : IMarkdownToken Constructors MarkdownEscapeInlineToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public MarkdownEscapeInlineToken(IMarkdownRule rule, IMarkdownContext context, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String content SourceInfo sourceInfo Properties Content Declaration public string Content { get; } Property Value Type Description String Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownException.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownException.html",
    "title": "Class MarkdownException | DocFX website",
    "keywords": "Class MarkdownException Inheritance Object Exception MarkdownException MarkdownParsingException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownException : Exception, ISerializable, _Exception Constructors MarkdownException() Declaration public MarkdownException() MarkdownException(String) Declaration public MarkdownException(string message) Parameters Type Name Description String message MarkdownException(String, Exception) Declaration public MarkdownException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHeadingBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHeadingBlockRule.html",
    "title": "Class MarkdownHeadingBlockRule | DocFX website",
    "keywords": "Class MarkdownHeadingBlockRule Inheritance Object MarkdownHeadingBlockRule GfmHeadingBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHeadingBlockRule : IMarkdownRule Properties Heading Declaration [Obsolete(\"Please use HeadingMatcher.\")] public virtual Regex Heading { get; } Property Value Type Description Regex HeadingMatcher Declaration public virtual Matcher HeadingMatcher { get; } Property Value Type Description Matcher Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHeadingBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHeadingBlockToken.html",
    "title": "Class MarkdownHeadingBlockToken | DocFX website",
    "keywords": "Class MarkdownHeadingBlockToken Inheritance Object MarkdownHeadingBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHeadingBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownHeadingBlockToken> Constructors MarkdownHeadingBlockToken(IMarkdownRule, IMarkdownContext, InlineContent, String, Int32, SourceInfo) Declaration public MarkdownHeadingBlockToken(IMarkdownRule rule, IMarkdownContext context, InlineContent content, string id, int depth, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context InlineContent content String id Int32 depth SourceInfo sourceInfo Properties Content Declaration public InlineContent Content { get; } Property Value Type Description InlineContent Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Depth Declaration public int Depth { get; } Property Value Type Description Int32 Id Declaration public string Id { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownHeadingBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownHeadingBlockToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHrBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHrBlockRule.html",
    "title": "Class MarkdownHrBlockRule | DocFX website",
    "keywords": "Class MarkdownHrBlockRule Inheritance Object MarkdownHrBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHrBlockRule : IMarkdownRule Properties Hr Declaration [Obsolete(\"Please use HrMatcher.\")] public virtual Regex Hr { get; } Property Value Type Description Regex HrMatcher Declaration public virtual Matcher HrMatcher { get; } Property Value Type Description Matcher Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) TryMatchOld(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatchOld(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Matchers.MatchResult.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Matchers.MatchResult.html",
    "title": "Class MatchResult | DocFX website",
    "keywords": "Class MatchResult Inheritance Object MatchResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite.Matchers Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MatchResult Constructors MatchResult(Int32, MatchContent) Declaration public MatchResult(int length, MatchContent mc) Parameters Type Name Description Int32 length MatchContent mc Properties Item[String] Declaration public MatchGroup this[string name] { get; } Parameters Type Name Description String name Property Value Type Description MatchGroup Length Declaration public int Length { get; } Property Value Type Description Int32 Methods EnumerateGroups() Declaration public IEnumerable<MatchGroup> EnumerateGroups() Returns Type Description IEnumerable < MatchGroup > GetGroup(String) Declaration public MatchGroup? GetGroup(string name) Parameters Type Name Description String name Returns Type Description Nullable < MatchGroup > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Matchers.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Matchers.html",
    "title": "Namespace Microsoft.DocAsCode.MarkdownLite.Matchers | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.MarkdownLite.Matchers Classes Matcher MatcherExtensions MatchResult Structs MatchContent MatchGroup Enums LengthComparison MatchDirection"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Options.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Options.html",
    "title": "Class Options | DocFX website",
    "keywords": "Class Options Inheritance Object Options Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class Options Constructors Options() Declaration public Options() Properties Breaks Declaration public bool Breaks { get; set; } Property Value Type Description Boolean Gfm Declaration public bool Gfm { get; set; } Property Value Type Description Boolean HeaderPrefix Declaration public string HeaderPrefix { get; set; } Property Value Type Description String Highlight Declaration public Func<string, string, string> Highlight { get; set; } Property Value Type Description Func < String , String , String > LangPrefix Declaration public string LangPrefix { get; set; } Property Value Type Description String LegacyMode Declaration public bool LegacyMode { get; set; } Property Value Type Description Boolean Mangle Declaration public bool Mangle { get; set; } Property Value Type Description Boolean Pedantic Declaration public bool Pedantic { get; set; } Property Value Type Description Boolean Sanitize Declaration public bool Sanitize { get; set; } Property Value Type Description Boolean Sanitizer Declaration public Func<string, string> Sanitizer { get; set; } Property Value Type Description Func < String , String > ShouldExportSourceInfo Declaration public bool ShouldExportSourceInfo { get; set; } Property Value Type Description Boolean SmartLists Declaration public bool SmartLists { get; set; } Property Value Type Description Boolean Smartypants Declaration public bool Smartypants { get; set; } Property Value Type Description Boolean Tables Declaration public bool Tables { get; set; } Property Value Type Description Boolean XHtml Declaration public bool XHtml { get; set; } Property Value Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.SourceInfo.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.SourceInfo.html",
    "title": "Struct SourceInfo | DocFX website",
    "keywords": "Struct SourceInfo Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public struct SourceInfo Properties File Declaration public string File { get; } Property Value Type Description String LineNumber Declaration public int LineNumber { get; } Property Value Type Description Int32 Markdown Declaration public string Markdown { get; } Property Value Type Description String ValidLineCount Declaration public int ValidLineCount { get; } Property Value Type Description Int32 Methods Copy(String, Int32) Declaration public SourceInfo Copy(string markdown, int lineOffset = 0) Parameters Type Name Description String markdown Int32 lineOffset Returns Type Description SourceInfo Create(String, String) Declaration public static SourceInfo Create(string markdown, string file) Parameters Type Name Description String markdown String file Returns Type Description SourceInfo Create(String, String, Int32) Declaration public static SourceInfo Create(string markdown, string file, int lineNumber) Parameters Type Name Description String markdown String file Int32 lineNumber Returns Type Description SourceInfo Create(String, String, Int32, Int32) Declaration public static SourceInfo Create(string markdown, string file, int lineNumber, int lineCount) Parameters Type Name Description String markdown String file Int32 lineNumber Int32 lineCount Returns Type Description SourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.StringBuffer.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.StringBuffer.html",
    "title": "Class StringBuffer | DocFX website",
    "keywords": "Class StringBuffer A type like StringBuilder but only do concat. Inheritance Object StringBuffer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public sealed class StringBuffer Fields Empty An empty StringBuffer . Declaration public static readonly StringBuffer Empty Field Value Type Description StringBuffer Methods Append(String) Append string to string buffer. (Create new instance if self is Empty , otherwise, modify self). Declaration public StringBuffer Append(string str) Parameters Type Name Description String str The string. Returns Type Description StringBuffer The string buffer. Clone() Declaration public StringBuffer Clone() Returns Type Description StringBuffer Concat(StringBuffer) Concat another string buffer. (Create new instance if self is Empty , otherwise, modify self). Declaration public StringBuffer Concat(StringBuffer another) Parameters Type Name Description StringBuffer another The string buffer. Returns Type Description StringBuffer The string buffer. EndsWith(Char) Declaration public bool EndsWith(char character) Parameters Type Name Description Char character Returns Type Description Boolean EndsWith(String) Declaration public bool EndsWith(string text) Parameters Type Name Description String text Returns Type Description Boolean GetLength() Declaration public int GetLength() Returns Type Description Int32 StartsWith(Char) Declaration public bool StartsWith(char character) Parameters Type Name Description Char character Returns Type Description Boolean StartsWith(String) Declaration public bool StartsWith(string text) Parameters Type Name Description String text Returns Type Description Boolean Substring(Int32, Int32) Declaration public StringBuffer Substring(int startIndex, int maxCount) Parameters Type Name Description Int32 startIndex Int32 maxCount Returns Type Description StringBuffer ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators Addition(StringBuffer, StringBuffer) Declaration public static StringBuffer operator +(StringBuffer buffer, StringBuffer another) Parameters Type Name Description StringBuffer buffer StringBuffer another Returns Type Description StringBuffer Addition(StringBuffer, String) Declaration public static StringBuffer operator +(StringBuffer buffer, string value) Parameters Type Name Description StringBuffer buffer String value Returns Type Description StringBuffer Implicit(StringBuffer to String) Declaration public static implicit operator string (StringBuffer buffer) Parameters Type Name Description StringBuffer buffer Returns Type Description String Implicit(String to StringBuffer) Declaration public static implicit operator StringBuffer(string value) Parameters Type Name Description String value Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.StringHelper.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.StringHelper.html",
    "title": "Class StringHelper | DocFX website",
    "keywords": "Class StringHelper Inheritance Object StringHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class StringHelper Methods Apply(Regex, String, Int32) Declaration public static string[] Apply(this Regex regex, string src, int index = 0) Parameters Type Name Description Regex regex String src Int32 index Returns Type Description String [] DecodeURIComponent(String) Declaration public static string DecodeURIComponent(string str) Parameters Type Name Description String str Returns Type Description String Escape(String, Boolean) Declaration public static string Escape(string html, bool encode = false) Parameters Type Name Description String html Boolean encode Returns Type Description String EscapeMarkdown(String) Declaration public static string EscapeMarkdown(string text) Parameters Type Name Description String text Returns Type Description String HtmlDecode(String) Declaration public static string HtmlDecode(string html) Parameters Type Name Description String html Returns Type Description String HtmlEncode(String) Declaration public static string HtmlEncode(string html) Parameters Type Name Description String html Returns Type Description String Match(String, Regex) Declaration public static string[] Match(this string src, Regex regex) Parameters Type Name Description String src Regex regex Returns Type Description String [] NotEmpty(IList<String>, Int32, Int32) Declaration public static string NotEmpty(IList<string> source, int index1, int index2) Parameters Type Name Description IList < String > source Int32 index1 Int32 index2 Returns Type Description String ReplaceRegex(String, Regex, String) Declaration public static string ReplaceRegex(this string input, Regex pattern, string replacement) Parameters Type Name Description String input Regex pattern String replacement Returns Type Description String SplitRegex(String, Regex) Declaration public static string[] SplitRegex(this string input, Regex pattern) Parameters Type Name Description String input Regex pattern Returns Type Description String [] Unescape(String) Declaration public static string Unescape(string html) Parameters Type Name Description String html Returns Type Description String UnescapeMarkdown(String) Declaration public static string UnescapeMarkdown(string markdown) Parameters Type Name Description String markdown Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.TokenHelper.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.TokenHelper.html",
    "title": "Class TokenHelper | DocFX website",
    "keywords": "Class TokenHelper Inheritance Object TokenHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class TokenHelper Methods CreateParagraghs(IMarkdownParser, IMarkdownRule, ImmutableArray<IMarkdownToken>, Boolean, SourceInfo) Declaration public static ImmutableArray<IMarkdownToken> CreateParagraghs(IMarkdownParser parser, IMarkdownRule rule, ImmutableArray<IMarkdownToken> blockTokens, bool wrapParagraph, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownParser parser IMarkdownRule rule System.Collections.Immutable.ImmutableArray < IMarkdownToken > blockTokens Boolean wrapParagraph SourceInfo sourceInfo Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken >"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.TwoPhaseBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.TwoPhaseBlockToken.html",
    "title": "Class TwoPhaseBlockToken | DocFX website",
    "keywords": "Class TwoPhaseBlockToken Inheritance Object TwoPhaseBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public sealed class TwoPhaseBlockToken : IMarkdownToken Constructors TwoPhaseBlockToken(IMarkdownRule, IMarkdownContext, SourceInfo, Func<IMarkdownParser, TwoPhaseBlockToken, IMarkdownToken>) Declaration public TwoPhaseBlockToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo, Func<IMarkdownParser, TwoPhaseBlockToken, IMarkdownToken> extractor) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Func < IMarkdownParser , TwoPhaseBlockToken , IMarkdownToken > extractor Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods Extract(IMarkdownParser) Declaration public IMarkdownToken Extract(IMarkdownParser parser) Parameters Type Name Description IMarkdownParser parser Returns Type Description IMarkdownToken Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.html",
    "title": "Namespace Microsoft.DocAsCode.Metadata.ManagedReference | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Metadata.ManagedReference Classes AttributeFilterInfo BuildMembers BuildToc CachedFilterVisitor CompositeYamlModelGenerator ConfigFilterRule ConfigFilterRuleExcludeItem ConfigFilterRuleIncludeItem ConfigFilterRuleItem ConfigFilterRuleItemUnion ConfigFilterVisitor CopyInherited Copies doc comments to items marked with 'inheritdoc' from interfaces and base classes. CSharpNameVisitorCreator CSReferenceItemVisitor CSYamlModelGenerator DefaultFilterVisitor DelegatingFilterVisitor ExtendedSymbolKindHelper ExtractMetadataInputModel ExtractMetadataWorker FilterVisitorExtensions LayoutCheckAndCleanup LinkItem MergeCommentsHelper MetadataItem MetadataModel NameVisitor NameVisitorCreator NormalizeSyntax ReferenceItem ReferenceItemVisitor ResolverContext ResolveReference SetDerivedClass SetParent SimpleYamlModelGenerator SymbolVisitorAdapter SyntaxDetail TripleSlashCommentModel TripleSlashCommentParserContext TripleSlashCommentTransformer VBNameVisitorCreator VBReferenceItemVisitor VBYamlModelGenerator VisitorHelper YamlMetadataResolver YamlModelGenerator YamlViewModelExtensions Interfaces IFilterVisitor IResolverPipeline ITripleSlashCommentParserContext Enums ExtendedSymbolKind LayoutItem Defines the layout for an API page NameOptions"
  },
  "api/Microsoft.DocAsCode.MetadataJsonConfig.html": {
    "href": "api/Microsoft.DocAsCode.MetadataJsonConfig.html",
    "title": "Class MetadataJsonConfig | DocFX website",
    "keywords": "Class MetadataJsonConfig Inheritance Object List < MetadataJsonItemConfig > MetadataJsonConfig Inherited Members System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.set_Item(System.Int32, System.Object) List<MetadataJsonItemConfig>.Add(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.IList.Add(Object) List<MetadataJsonItemConfig>.AddRange(IEnumerable<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.AsReadOnly() List<MetadataJsonItemConfig>.BinarySearch(Int32, Int32, MetadataJsonItemConfig, IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.BinarySearch(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.BinarySearch(MetadataJsonItemConfig, IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Clear() List<MetadataJsonItemConfig>.Contains(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.IList.Contains(Object) List<MetadataJsonItemConfig>.ConvertAll<TOutput>(Converter<MetadataJsonItemConfig, TOutput>) List<MetadataJsonItemConfig>.CopyTo(MetadataJsonItemConfig[]) List<MetadataJsonItemConfig>.ICollection.CopyTo(Array, Int32) List<MetadataJsonItemConfig>.CopyTo(Int32, MetadataJsonItemConfig[], Int32, Int32) List<MetadataJsonItemConfig>.CopyTo(MetadataJsonItemConfig[], Int32) List<MetadataJsonItemConfig>.Exists(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Find(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindAll(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindIndex(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindIndex(Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindIndex(Int32, Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLast(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLastIndex(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLastIndex(Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLastIndex(Int32, Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.ForEach(Action<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.GetEnumerator() List<MetadataJsonItemConfig>.IEnumerable<MetadataJsonItemConfig>.GetEnumerator() List<MetadataJsonItemConfig>.IEnumerable.GetEnumerator() List<MetadataJsonItemConfig>.GetRange(Int32, Int32) List<MetadataJsonItemConfig>.IndexOf(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.IList.IndexOf(Object) List<MetadataJsonItemConfig>.IndexOf(MetadataJsonItemConfig, Int32) List<MetadataJsonItemConfig>.IndexOf(MetadataJsonItemConfig, Int32, Int32) List<MetadataJsonItemConfig>.Insert(Int32, MetadataJsonItemConfig) List<MetadataJsonItemConfig>.IList.Insert(Int32, Object) List<MetadataJsonItemConfig>.InsertRange(Int32, IEnumerable<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.LastIndexOf(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.LastIndexOf(MetadataJsonItemConfig, Int32) List<MetadataJsonItemConfig>.LastIndexOf(MetadataJsonItemConfig, Int32, Int32) List<MetadataJsonItemConfig>.Remove(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.IList.Remove(Object) List<MetadataJsonItemConfig>.RemoveAll(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.RemoveAt(Int32) List<MetadataJsonItemConfig>.RemoveRange(Int32, Int32) List<MetadataJsonItemConfig>.Reverse() List<MetadataJsonItemConfig>.Reverse(Int32, Int32) List<MetadataJsonItemConfig>.Sort() List<MetadataJsonItemConfig>.Sort(IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Sort(Int32, Int32, IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Sort(Comparison<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.ToArray() List<MetadataJsonItemConfig>.TrimExcess() List<MetadataJsonItemConfig>.TrueForAll(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Capacity List<MetadataJsonItemConfig>.Count List<MetadataJsonItemConfig>.IList.IsFixedSize List<MetadataJsonItemConfig>.ICollection<MetadataJsonItemConfig>.IsReadOnly List<MetadataJsonItemConfig>.IList.IsReadOnly List<MetadataJsonItemConfig>.ICollection.IsSynchronized List<MetadataJsonItemConfig>.ICollection.SyncRoot List<MetadataJsonItemConfig>.Item[Int32] List<MetadataJsonItemConfig>.IList.Item[Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class MetadataJsonConfig : List<MetadataJsonItemConfig>, IList<MetadataJsonItemConfig>, ICollection<MetadataJsonItemConfig>, IList, ICollection, IReadOnlyList<MetadataJsonItemConfig>, IReadOnlyCollection<MetadataJsonItemConfig>, IEnumerable<MetadataJsonItemConfig>, IEnumerable Constructors MetadataJsonConfig(MetadataJsonItemConfig[]) Declaration public MetadataJsonConfig(params MetadataJsonItemConfig[] configs) Parameters Type Name Description MetadataJsonItemConfig [] configs MetadataJsonConfig(IEnumerable<MetadataJsonItemConfig>) Declaration public MetadataJsonConfig(IEnumerable<MetadataJsonItemConfig> configs) Parameters Type Name Description IEnumerable < MetadataJsonItemConfig > configs Properties BaseDirectory Declaration [JsonIgnore] public string BaseDirectory { get; set; } Property Value Type Description String Force Declaration [JsonIgnore] public bool Force { get; set; } Property Value Type Description Boolean OutputFolder Declaration [JsonIgnore] public string OutputFolder { get; set; } Property Value Type Description String Raw Declaration [JsonIgnore] public bool Raw { get; set; } Property Value Type Description Boolean ShouldSkipMarkup Declaration [JsonIgnore] public bool ShouldSkipMarkup { get; set; } Property Value Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>) DocumentExceptionExtensions.RunAll<TElement, TResult>(IReadOnlyList<TElement>, Func<TElement, TResult>) DocumentExceptionExtensions.RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>) DocumentExceptionExtensions.RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>, Int32)"
  },
  "api/Microsoft.DocAsCode.MetadataJsonItemConfig.html": {
    "href": "api/Microsoft.DocAsCode.MetadataJsonItemConfig.html",
    "title": "Class MetadataJsonItemConfig | DocFX website",
    "keywords": "Class MetadataJsonItemConfig Inheritance Object MetadataJsonItemConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class MetadataJsonItemConfig Properties Destination Declaration [JsonProperty(\"dest\")] public string Destination { get; set; } Property Value Type Description String FilterConfigFile Declaration [JsonProperty(\"filter\")] public string FilterConfigFile { get; set; } Property Value Type Description String Force Declaration [JsonProperty(\"force\")] public bool ? Force { get; set; } Property Value Type Description Nullable < Boolean > GlobalNamespaceId Declaration [JsonProperty(\"globalNamespaceId\")] public string GlobalNamespaceId { get; set; } Property Value Type Description String MSBuildProperties Declaration [JsonProperty(\"properties\")] public Dictionary<string, string> MSBuildProperties { get; set; } Property Value Type Description Dictionary < String , String > Raw Declaration [JsonProperty(\"raw\")] public bool ? Raw { get; set; } Property Value Type Description Nullable < Boolean > ShouldSkipMarkup Declaration [JsonProperty(\"shouldSkipMarkup\")] public bool ? ShouldSkipMarkup { get; set; } Property Value Type Description Nullable < Boolean > Source Declaration [JsonProperty(\"src\")] public FileMapping Source { get; set; } Property Value Type Description FileMapping UseCompatibilityFileName Declaration [JsonProperty(\"useCompatibilityFileName\")] public bool ? UseCompatibilityFileName { get; set; } Property Value Type Description Nullable < Boolean > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.OptionUsageAttribute.html": {
    "href": "api/Microsoft.DocAsCode.OptionUsageAttribute.html",
    "title": "Class OptionUsageAttribute | DocFX website",
    "keywords": "Class OptionUsageAttribute Inheritance Object Attribute OptionUsageAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)] public class OptionUsageAttribute : Attribute, _Attribute Constructors OptionUsageAttribute(String) Declaration public OptionUsageAttribute(string name) Parameters Type Name Description String name Properties Name Declaration public string Name { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.BuildPhase.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.BuildPhase.html",
    "title": "Enum BuildPhase | DocFX website",
    "keywords": "Enum BuildPhase Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public enum BuildPhase Fields Name Description Compile Link PostBuild PreBuildBuild Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ResponseObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ResponseObject.html",
    "title": "Class ResponseObject | DocFX website",
    "keywords": "Class ResponseObject Inheritance Object ResponseObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class ResponseObject Properties Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Examples Key is the mime type Declaration [YamlMember(Alias = \"examples\")] [JsonProperty(\"examples\")] public Dictionary<string, object> Examples { get; set; } Property Value Type Description Dictionary < String , Object > Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.SwaggerModel.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.SwaggerModel.html",
    "title": "Class SwaggerModel | DocFX website",
    "keywords": "Class SwaggerModel Inheritance Object SwaggerModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class SwaggerModel Properties BasePath The base path on which the API is served, which is relative to the host. If it is not included, the API is served directly under the host. The value MUST start with a leading slash (/). The basePath does not support path templating. Declaration [YamlMember(Alias = \"basePath\")] [JsonProperty(\"basePath\")] public string BasePath { get; set; } Property Value Type Description String Definitions An object to hold data types produced and consumed by operations. Declaration [YamlMember(Alias = \"definitions\")] [JsonProperty(\"definitions\")] public object Definitions { get; set; } Property Value Type Description Object Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Host The host (name or ip) serving the API. This MUST be the host only and does not include the scheme nor sub-paths. It MAY include a port. If the host is not included, the host serving the documentation is to be used (including the port). The host does not support path templating. Declaration [YamlMember(Alias = \"host\")] [JsonProperty(\"host\")] public string Host { get; set; } Property Value Type Description String Info Required. Provides metadata about the API. The metadata can be used by the clients if needed. Declaration [YamlMember(Alias = \"info\")] [JsonProperty(\"info\")] public InfoObject Info { get; set; } Property Value Type Description InfoObject Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Parameters An object to hold parameters that can be used across operations. This property does not define global parameters for all operations Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public object Parameters { get; set; } Property Value Type Description Object Paths Required. The available paths and operations for the API. Declaration [YamlMember(Alias = \"paths\")] [JsonProperty(\"paths\")] public PathsObject Paths { get; set; } Property Value Type Description PathsObject Raw The original swagger.json content Declaration [YamlIgnore] [JsonIgnore] public string Raw { get; set; } Property Value Type Description String Responses An object to hold responses that can be used across operations. This property does not define global responses for all operations. Declaration [YamlMember(Alias = \"responses\")] [JsonProperty(\"responses\")] public object Responses { get; set; } Property Value Type Description Object Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String Tags A list of tags used by the specification with additional metadata. The order of the tags can be used to reflect on their order by the parsing tools. Declaration [YamlMember(Alias = \"tags\")] [JsonProperty(\"tags\")] public List<TagItemObject> Tags { get; set; } Property Value Type Description List < TagItemObject > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.TagItemObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.TagItemObject.html",
    "title": "Class TagItemObject | DocFX website",
    "keywords": "Class TagItemObject Inheritance Object TagItemObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class TagItemObject Properties BookmarkId Define the bookmark id for the tag. It's extensions to the Swagger Schema, which MUST begin with 'x-'. Declaration [YamlMember(Alias = \"x-bookmark-id\")] [JsonProperty(\"x-bookmark-id\")] public string BookmarkId { get; set; } Property Value Type Description String Description A short description for the tag. GFM syntax can be used for rich text representation. Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Name Required. The name of the tag. Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.html",
    "title": "Namespace Microsoft.DocAsCode.Build.RestApi.Swagger | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.RestApi.Swagger Classes InfoObject Info object OperationObject ParameterObject PathItemObject TODO: need a converter PathsObject ResponseObject SwaggerModel TagItemObject"
  },
  "api/Microsoft.DocAsCode.Common.CrossAppDomainListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.CrossAppDomainListener.html",
    "title": "Class CrossAppDomainListener | DocFX website",
    "keywords": "Class CrossAppDomainListener Inheritance Object MarshalByRefObject CrossAppDomainListener Inherited Members MarshalByRefObject.MemberwiseClone(Boolean) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class CrossAppDomainListener : MarshalByRefObject, ILoggerListener, IDisposable Properties LogLevelThreshold Declaration public LogLevel LogLevelThreshold { get; set; } Property Value Type Description LogLevel Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Flush() Declaration public void Flush() Implements ILoggerListener.Flush() WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.DictionaryMerger.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.DictionaryMerger.html",
    "title": "Class DictionaryMerger | DocFX website",
    "keywords": "Class DictionaryMerger Inheritance Object MergerDecorator DictionaryMerger Inherited Members MergerDecorator.TestKey(Object, Object, Type, IMergeContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax public class DictionaryMerger : MergerDecorator, IMerger Constructors DictionaryMerger(IMerger) Declaration public DictionaryMerger(IMerger inner) Parameters Type Name Description IMerger inner Methods Merge(ref Object, Object, Type, IMergeContext) Declaration public override void Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Overrides MergerDecorator.Merge(ref Object, Object, Type, IMergeContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.IMergeContext.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.IMergeContext.html",
    "title": "Interface IMergeContext | DocFX website",
    "keywords": "Interface IMergeContext Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax public interface IMergeContext Properties Item[String] Declaration object this[string key] { get; } Parameters Type Name Description String key Property Value Type Description Object Merger Declaration IMerger Merger { get; } Property Value Type Description IMerger Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.IMergeHandler.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.IMergeHandler.html",
    "title": "Interface IMergeHandler | DocFX website",
    "keywords": "Interface IMergeHandler Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax public interface IMergeHandler Methods Merge(ref Object, Object, IMergeContext) Declaration void Merge(ref object source, object overrides, IMergeContext context) Parameters Type Name Description Object source Object overrides IMergeContext context Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ISupportRandomFileWriter.html": {
    "href": "api/Microsoft.DocAsCode.Common.ISupportRandomFileWriter.html",
    "title": "Interface ISupportRandomFileWriter | DocFX website",
    "keywords": "Interface ISupportRandomFileWriter File writer. Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public interface ISupportRandomFileWriter Methods CreateRandomFile() Create a random file. Declaration Tuple<string, Stream> CreateRandomFile() Returns Type Description Tuple < String , Stream > A tuple of random file name and stream. CreateRandomFileName() Create a random file name. Declaration string CreateRandomFileName() Returns Type Description String A random file name. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.JObjectDictionaryToObjectDictionaryConverter.html": {
    "href": "api/Microsoft.DocAsCode.Common.JObjectDictionaryToObjectDictionaryConverter.html",
    "title": "Class JObjectDictionaryToObjectDictionaryConverter | DocFX website",
    "keywords": "Class JObjectDictionaryToObjectDictionaryConverter Inheritance Object Newtonsoft.Json.JsonConverter JObjectDictionaryToObjectDictionaryConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class JObjectDictionaryToObjectDictionaryConverter : JsonConverter Methods CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.JsonUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.JsonUtility.html",
    "title": "Class JsonUtility | DocFX website",
    "keywords": "Class JsonUtility Inheritance Object JsonUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class JsonUtility Fields DefaultSerializer Declaration public static readonly ThreadLocal<JsonSerializer> DefaultSerializer Field Value Type Description ThreadLocal < Newtonsoft.Json.JsonSerializer > Methods Deserialize<T>(TextReader, JsonSerializer) Declaration public static T Deserialize<T>(TextReader reader, JsonSerializer serializer = null) Parameters Type Name Description TextReader reader Newtonsoft.Json.JsonSerializer serializer Returns Type Description T Type Parameters Name Description T Deserialize<T>(String, JsonSerializer) Declaration public static T Deserialize<T>(string path, JsonSerializer serializer = null) Parameters Type Name Description String path Newtonsoft.Json.JsonSerializer serializer Returns Type Description T Type Parameters Name Description T FromJsonString<T>(String, JsonSerializer) Declaration public static T FromJsonString<T>(this string json, JsonSerializer serializer = null) Parameters Type Name Description String json Newtonsoft.Json.JsonSerializer serializer Returns Type Description T Type Parameters Name Description T Serialize(TextWriter, Object, Formatting, JsonSerializer) Declaration public static void Serialize(TextWriter writer, object graph, Formatting formatting = Formatting.None, JsonSerializer serializer = null) Parameters Type Name Description TextWriter writer Object graph Newtonsoft.Json.Formatting formatting Newtonsoft.Json.JsonSerializer serializer Serialize(Object, Formatting, JsonSerializer) Declaration public static string Serialize(object graph, Formatting formatting = Formatting.None, JsonSerializer serializer = null) Parameters Type Name Description Object graph Newtonsoft.Json.Formatting formatting Newtonsoft.Json.JsonSerializer serializer Returns Type Description String Serialize(String, Object, Formatting, JsonSerializer) Declaration public static void Serialize(string path, object graph, Formatting formatting = Formatting.None, JsonSerializer serializer = null) Parameters Type Name Description String path Object graph Newtonsoft.Json.Formatting formatting Newtonsoft.Json.JsonSerializer serializer ToJsonString(Object, Formatting, JsonSerializer) Declaration public static string ToJsonString(this object graph, Formatting formatting = Formatting.None, JsonSerializer serializer = null) Parameters Type Name Description Object graph Newtonsoft.Json.Formatting formatting Newtonsoft.Json.JsonSerializer serializer Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.Common.LinkFileReader.html": {
    "href": "api/Microsoft.DocAsCode.Common.LinkFileReader.html",
    "title": "Class LinkFileReader | DocFX website",
    "keywords": "Class LinkFileReader Inheritance Object LinkFileReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class LinkFileReader : IFileReader Constructors LinkFileReader(IEnumerable<PathMapping>) Declaration public LinkFileReader(IEnumerable<PathMapping> mappings) Parameters Type Name Description IEnumerable < PathMapping > mappings Properties Mappings Declaration public ImmutableArray<PathMapping> Mappings { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < PathMapping > Methods EnumerateFiles() Declaration public IEnumerable<RelativePath> EnumerateFiles() Returns Type Description IEnumerable < RelativePath > Implements IFileReader.EnumerateFiles() FindFile(RelativePath) Declaration public PathMapping? FindFile(RelativePath file) Parameters Type Name Description RelativePath file Returns Type Description Nullable < PathMapping > Implements IFileReader.FindFile(RelativePath) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.StreamSegmentSerialization.StreamSerializer.html": {
    "href": "api/Microsoft.DocAsCode.Common.StreamSegmentSerialization.StreamSerializer.html",
    "title": "Class StreamSerializer | DocFX website",
    "keywords": "Class StreamSerializer Inheritance Object StreamSerializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.StreamSegmentSerialization Assembly :Microsoft.DocAsCode.Common.dll Syntax public class StreamSerializer Constructors StreamSerializer(Stream) Declaration public StreamSerializer(Stream underlyingStream) Parameters Type Name Description Stream underlyingStream Properties UnderlyingStream Declaration public Stream UnderlyingStream { get; } Property Value Type Description Stream Methods Write(Action<Stream>) Declaration public StreamSegment Write(Action<Stream> writeAction) Parameters Type Name Description Action < Stream > writeAction Returns Type Description StreamSegment Write(Byte[]) Declaration public StreamSegment Write(byte[] value) Parameters Type Name Description Byte [] value Returns Type Description StreamSegment Write(IReadOnlyCollection<KeyValuePair<String, Object>>) Declaration public StreamSegment Write(IReadOnlyCollection<KeyValuePair<string, object>> value) Parameters Type Name Description IReadOnlyCollection < KeyValuePair < String , Object >> value Returns Type Description StreamSegment Write(IReadOnlyList<Object>) Declaration public StreamSegment Write(IReadOnlyList<object> value) Parameters Type Name Description IReadOnlyList < Object > value Returns Type Description StreamSegment Write(Int32) Declaration public StreamSegment Write(int value) Parameters Type Name Description Int32 value Returns Type Description StreamSegment Write(Object) Declaration public StreamSegment Write(object value) Parameters Type Name Description Object value Returns Type Description StreamSegment Write(String) Declaration public StreamSegment Write(string value) Parameters Type Name Description String value Returns Type Description StreamSegment WriteNull() Declaration public StreamSegment WriteNull() Returns Type Description StreamSegment Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.StreamSegmentSerialization.html": {
    "href": "api/Microsoft.DocAsCode.Common.StreamSegmentSerialization.html",
    "title": "Namespace Microsoft.DocAsCode.Common.StreamSegmentSerialization | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Common.StreamSegmentSerialization Classes StreamDeserializer StreamSegment StreamSerializer Enums StreamSegmentType"
  },
  "api/Microsoft.DocAsCode.Common.StringExtension.html": {
    "href": "api/Microsoft.DocAsCode.Common.StringExtension.html",
    "title": "Class StringExtension | DocFX website",
    "keywords": "Class StringExtension Inheritance Object StringExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class StringExtension Methods BackSlashToForwardSlash(String) Declaration public static string BackSlashToForwardSlash(this string input) Parameters Type Name Description String input Returns Type Description String ForwardSlashCombine(String, String) Declaration public static string ForwardSlashCombine(this string baseAddress, string relativeAddress) Parameters Type Name Description String baseAddress String relativeAddress Returns Type Description String GetMd5String(String) Declaration public static string GetMd5String(this string content) Parameters Type Name Description String content Returns Type Description String GetNormalizedFullPathKey(IEnumerable<String>) Declaration public static string GetNormalizedFullPathKey(this IEnumerable<string> list) Parameters Type Name Description IEnumerable < String > list Returns Type Description String GetNormalizedFullPathList(IEnumerable<String>) Declaration public static IEnumerable<string> GetNormalizedFullPathList(this IEnumerable<string> paths) Parameters Type Name Description IEnumerable < String > paths Returns Type Description IEnumerable < String > GetNormalizedPathList(IEnumerable<String>) Declaration public static IEnumerable<string> GetNormalizedPathList(this IEnumerable<string> paths) Parameters Type Name Description IEnumerable < String > paths Returns Type Description IEnumerable < String > ToDelimitedString(IEnumerable<String>, String) Declaration public static string ToDelimitedString(this IEnumerable<string> input, string delimiter = \",\") Parameters Type Name Description IEnumerable < String > input String delimiter Returns Type Description String ToDisplayPath(String) Declaration public static string ToDisplayPath(this string path) Parameters Type Name Description String path Returns Type Description String ToNormalizedFullPath(String) Should not convert path to lower case as under Linux/Unix, path is case sensitive Also, Website URL should be case sensitive consider the server might be running under Linux/Unix So we could even not lower the path under Windows as the generated YAML should be ideally OS irrelevant Declaration public static string ToNormalizedFullPath(this string path) Parameters Type Name Description String path Returns Type Description String ToNormalizedPath(String) Declaration public static string ToNormalizedPath(this string path) Parameters Type Name Description String path Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.Common.TaskHelper.html": {
    "href": "api/Microsoft.DocAsCode.Common.TaskHelper.html",
    "title": "Class TaskHelper | DocFX website",
    "keywords": "Class TaskHelper Inheritance Object TaskHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class TaskHelper Fields Completed A completed task Declaration public static readonly Task Completed Field Value Type Description Task Methods ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) Provide parallel version for ForEach Declaration public static Task ForEachInParallelAsync<T>(this IEnumerable<T> source, Func<T, Task> body) Parameters Type Name Description IEnumerable <T> source The enumerable to control the foreach loop Func <T, Task > body The task body Returns Type Description Task The task Type Parameters Name Description T The type for the enumerable Remarks The max parallelism is 64. ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) Provide parallel version for ForEach Declaration public static Task ForEachInParallelAsync<T>(this IEnumerable<T> source, Func<T, Task> body, int maxParallelism) Parameters Type Name Description IEnumerable <T> source The enumerable to control the foreach loop Func <T, Task > body The task body Int32 maxParallelism The max parallelism allowed Returns Type Description Task The task Type Parameters Name Description T The type for the enumerable SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>) Provide parallel version for Select that each element will map to a result Declaration public static Task<IReadOnlyList<TResult>> SelectInParallelAsync<TSource, TResult>(this IEnumerable<TSource> source, Func<TSource, Task<TResult>> body) Parameters Type Name Description IEnumerable <TSource> source The enumerable to control the select Func <TSource, Task <TResult>> body The select body Returns Type Description Task < IReadOnlyList <TResult>> The task Type Parameters Name Description TSource The type for the enumerable TResult The type for the result Remarks The max parallelism is 64. SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) Provide parallel version for Select that each element will map to a result Declaration public static Task<IReadOnlyList<TResult>> SelectInParallelAsync<TSource, TResult>(this IEnumerable<TSource> source, Func<TSource, Task<TResult>> body, int maxParallelism) Parameters Type Name Description IEnumerable <TSource> source The enumerable to control the select Func <TSource, Task <TResult>> body The select body Int32 maxParallelism The max parallelism allowed Returns Type Description Task < IReadOnlyList <TResult>> The task Type Parameters Name Description TSource The type for the enumerable TResult The type for the result"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ItemViewModel.html",
    "title": "Class ItemViewModel | DocFX website",
    "keywords": "Class ItemViewModel Inheritance Object ItemViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class ItemViewModel : IOverwriteDocumentViewModel Properties AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] [MergeOption(MergeOption.Ignore)] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > Children Declaration [YamlMember(Alias = \"children\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"children\")] public List<string> Children { get; set; } Property Value Type Description List < String > CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Conceptual DerivedClasses Declaration [YamlMember(Alias = \"derivedClasses\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"derivedClasses\")] public List<string> DerivedClasses { get; set; } Property Value Type Description List < String > Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail Implements IOverwriteDocumentViewModel.Documentation Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] [MergeOption(MergeOption.Replace)] public List<string> Examples { get; set; } Property Value Type Description List < String > Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ExceptionInfo> Exceptions { get; set; } Property Value Type Description List < ExceptionInfo > ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"extensionMethods\")] public List<string> ExtensionMethods { get; set; } Property Value Type Description List < String > FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public string FullName { get; set; } Property Value Type Description String FullNameForCSharp Declaration [YamlIgnore] [JsonIgnore] public string FullNameForCSharp { get; set; } Property Value Type Description String FullNameForVB Declaration [YamlIgnore] [JsonIgnore] public string FullNameForVB { get; set; } Property Value Type Description String FullNames Declaration [ExtensibleMember(\"fullName.\")] [JsonIgnore] public SortedList<string, string> FullNames { get; set; } Property Value Type Description SortedList < String , String > Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String Id Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Id { get; set; } Property Value Type Description String Implements Declaration [YamlMember(Alias = \"implements\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"implements\")] public List<string> Implements { get; set; } Property Value Type Description List < String > Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"inheritance\")] public List<string> Inheritance { get; set; } Property Value Type Description List < String > InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"inheritedMembers\")] public List<string> InheritedMembers { get; set; } Property Value Type Description List < String > IsExplicitInterfaceImplementation Declaration [YamlMember(Alias = \"isEii\")] [JsonProperty(\"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean Metadata Declaration [ExtensibleMember] [JsonIgnore] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Modifiers Declaration [ExtensibleMember(\"modifiers.\")] [MergeOption(MergeOption.Ignore)] [JsonIgnore] public SortedList<string, List<string>> Modifiers { get; set; } Property Value Type Description SortedList < String , List < String >> Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String NameForCSharp Declaration [YamlIgnore] [JsonIgnore] public string NameForCSharp { get; set; } Property Value Type Description String NameForVB Declaration [YamlIgnore] [JsonIgnore] public string NameForVB { get; set; } Property Value Type Description String Names Declaration [ExtensibleMember(\"name.\")] [JsonIgnore] public SortedList<string, string> Names { get; set; } Property Value Type Description SortedList < String , String > NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public string NamespaceName { get; set; } Property Value Type Description String NamesWithType Declaration [ExtensibleMember(\"nameWithType.\")] [JsonIgnore] public SortedList<string, string> NamesWithType { get; set; } Property Value Type Description SortedList < String , String > NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string NameWithType { get; set; } Property Value Type Description String NameWithTypeForCSharp Declaration [YamlIgnore] [JsonIgnore] public string NameWithTypeForCSharp { get; set; } Property Value Type Description String NameWithTypeForVB Declaration [YamlIgnore] [JsonIgnore] public string NameWithTypeForVB { get; set; } Property Value Type Description String Overload Declaration [YamlMember(Alias = \"overload\")] [JsonProperty(\"overload\")] public string Overload { get; set; } Property Value Type Description String Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public string Overridden { get; set; } Property Value Type Description String Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String Platform Declaration [YamlMember(Alias = \"platform\")] [JsonProperty(\"platform\")] [MergeOption(MergeOption.Replace)] public List<string> Platform { get; set; } Property Value Type Description List < String > Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<LinkInfo> SeeAlsos { get; set; } Property Value Type Description List < LinkInfo > SeeAlsosUidReference Declaration [JsonIgnore] [YamlIgnore] public List<string> SeeAlsosUidReference { get; } Property Value Type Description List < String > Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<LinkInfo> Sees { get; set; } Property Value Type Description List < LinkInfo > SeesUidReference Declaration [JsonIgnore] [YamlIgnore] public List<string> SeesUidReference { get; } Property Value Type Description List < String > Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String SupportedLanguages Declaration [YamlMember(Alias = \"langs\")] [JsonProperty(\"langs\")] public string[] SupportedLanguages { get; set; } Property Value Type Description String [] Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public SyntaxDetailViewModel Syntax { get; set; } Property Value Type Description SyntaxDetailViewModel Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public MemberType? Type { get; set; } Property Value Type Description Nullable < MemberType > Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] [MergeOption(MergeOption.MergeKey)] public string Uid { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Uid Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkInfo.html",
    "title": "Class LinkInfo | DocFX website",
    "keywords": "Class LinkInfo Inheritance Object LinkInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class LinkInfo Properties AltText Declaration [YamlMember(Alias = \"altText\")] [JsonProperty(\"altText\")] public string AltText { get; set; } Property Value Type Description String CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] [MergeOption(MergeOption.Ignore)] public string CommentId { get; set; } Property Value Type Description String LinkId Declaration [YamlMember(Alias = \"linkId\")] [MergeOption(MergeOption.MergeKey)] [JsonProperty(\"linkId\")] public string LinkId { get; set; } Property Value Type Description String LinkType Declaration [YamlMember(Alias = \"linkType\")] [JsonProperty(\"linkType\")] [MergeOption(MergeOption.Ignore)] public LinkType LinkType { get; set; } Property Value Type Description LinkType Methods Clone() Declaration public LinkInfo Clone() Returns Type Description LinkInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkType.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkType.html",
    "title": "Enum LinkType | DocFX website",
    "keywords": "Enum LinkType Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public enum LinkType Fields Name Description CRef HRef Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.MemberType.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.MemberType.html",
    "title": "Enum MemberType | DocFX website",
    "keywords": "Enum MemberType Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public enum MemberType Fields Name Description Assembly Class Constructor Default Delegate Enum Event Field Interface Method Namespace Operator Property Struct Toc Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer) YamlViewModelExtensions.IsPageLevel() YamlViewModelExtensions.AllowMultipleItems()"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesRule.html",
    "title": "Class DfmFencesRule | DocFX website",
    "keywords": "Class DfmFencesRule Inheritance Object DfmFencesRule DfmFencesBlockRule DfmFencesInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public abstract class DfmFencesRule : IMarkdownRule Properties Name Declaration public abstract string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods ParsePathQueryString(String, String) Declaration protected static IDfmFencesBlockPathQueryOption ParsePathQueryString(string queryOption, string queryString) Parameters Type Name Description String queryOption String queryString Returns Type Description IDfmFencesBlockPathQueryOption TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public abstract IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesToken.html",
    "title": "Class DfmFencesToken | DocFX website",
    "keywords": "Class DfmFencesToken Inheritance Object DfmFencesToken DfmFencesBlockToken DfmFencesInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public abstract class DfmFencesToken : IMarkdownToken Constructors DfmFencesToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, IDfmFencesBlockPathQueryOption) Declaration public DfmFencesToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang, string title, IDfmFencesBlockPathQueryOption pathQueryOption) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title IDfmFencesBlockPathQueryOption pathQueryOption Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Lang Declaration public string Lang { get; } Property Value Type Description String Name Declaration public string Name { get; } Property Value Type Description String Path Declaration public string Path { get; } Property Value Type Description String PathQueryOption Declaration public IDfmFencesBlockPathQueryOption PathQueryOption { get; } Property Value Type Description IDfmFencesBlockPathQueryOption Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Title Declaration public string Title { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockRule.html",
    "title": "Class DfmIncludeBlockRule | DocFX website",
    "keywords": "Class DfmIncludeBlockRule Inheritance Object DfmIncludeBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeBlockRule : IMarkdownRule Properties Include Declaration [Obsolete] public virtual Regex Include { get; } Property Value Type Description Regex IncludeMatcher Declaration public virtual Matcher IncludeMatcher { get; } Property Value Type Description Matcher Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockToken.html",
    "title": "Class DfmIncludeBlockToken | DocFX website",
    "keywords": "Class DfmIncludeBlockToken Inheritance Object DfmIncludeBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeBlockToken : IMarkdownToken Constructors DfmIncludeBlockToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration public DfmIncludeBlockToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title SourceInfo sourceInfo DfmIncludeBlockToken(IMarkdownRule, IMarkdownContext, String, String, String, String, SourceInfo) Declaration [Obsolete] public DfmIncludeBlockToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title String raw SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Name Declaration public string Name { get; } Property Value Type Description String Raw Declaration [Obsolete] public string Raw { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Src Declaration public string Src { get; } Property Value Type Description String Title Declaration public string Title { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.PlugableRendererBase.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.PlugableRendererBase.html",
    "title": "Class PlugableRendererBase | DocFX website",
    "keywords": "Class PlugableRendererBase Inheritance Object PlugableRendererBase Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public abstract class PlugableRendererBase : IDisposable Constructors PlugableRendererBase(Object) Declaration public PlugableRendererBase(object innerRenderer) Parameters Type Name Description Object innerRenderer Methods BaseRender(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration public StringBuffer BaseRender(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description StringBuffer Dispose() Declaration public virtual void Dispose() Implements IDisposable.Dispose() Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration public StringBuffer Render(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.RecursiveNameCodeSnippetExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.RecursiveNameCodeSnippetExtractor.html",
    "title": "Class RecursiveNameCodeSnippetExtractor | DocFX website",
    "keywords": "Class RecursiveNameCodeSnippetExtractor Recursive name extrator works for snippet name only exists in start line representation E.g., C# region representation only has snippet name in start line representation Inheritance Object CodeSnippetRegexExtractor RecursiveNameCodeSnippetExtractor Inherited Members CodeSnippetRegexExtractor.GetAll(String[]) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class RecursiveNameCodeSnippetExtractor : CodeSnippetRegexExtractor, ICodeSnippetExtractor Constructors RecursiveNameCodeSnippetExtractor(Regex, Regex) Declaration public RecursiveNameCodeSnippetExtractor(Regex startLineRegex, Regex endLineRegex) Parameters Type Name Description Regex startLineRegex Regex endLineRegex Methods ResolveCodeSnippetTags(String[]) Declaration protected override List<CodeSnippetTag> ResolveCodeSnippetTags(string[] lines) Parameters Type Name Description String [] lines Returns Type Description List < CodeSnippetTag > Overrides CodeSnippetRegexExtractor.ResolveCodeSnippetTags(String[]) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.SplitToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.SplitToken.html",
    "title": "Class SplitToken | DocFX website",
    "keywords": "Class SplitToken Inheritance Object SplitToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class SplitToken Constructors SplitToken(IMarkdownToken) Declaration public SplitToken(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Properties InnerTokens Declaration public List<IMarkdownToken> InnerTokens { get; set; } Property Value Type Description List < IMarkdownToken > Token Declaration public IMarkdownToken Token { get; set; } Property Value Type Description IMarkdownToken Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.TagNameBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.TagNameBlockPathQueryOption.html",
    "title": "Class TagNameBlockPathQueryOption | DocFX website",
    "keywords": "Class TagNameBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption TagNameBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class TagNameBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Properties TagName Declaration public string TagName { get; set; } Property Value Type Description String Methods GetQueryLines(String[]) Declaration public override IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[]) ValidateAndPrepare(String[], DfmFencesToken) Declaration public override bool ValidateAndPrepare(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description Boolean Overrides DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesToken) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.FileMappingItem.html": {
    "href": "api/Microsoft.DocAsCode.FileMappingItem.html",
    "title": "Class FileMappingItem | DocFX website",
    "keywords": "Class FileMappingItem Data model for a file-mapping item Inheritance Object FileMappingItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] public class FileMappingItem Constructors FileMappingItem() Declaration public FileMappingItem() FileMappingItem(String[]) Declaration public FileMappingItem(params string[] files) Parameters Type Name Description String [] files Properties AllowDotMatch Allow files start with . to be matched even if . is not explicitly specified in the pattern. By default files start with . will not be matched by * unless the pattern starts with . . Declaration [JsonProperty(\"dot\")] public bool ? AllowDotMatch { get; set; } Property Value Type Description Nullable < Boolean > CaseSensitive Pattern match will be case sensitive. By default the pattern is case insensitive Declaration [JsonProperty(\"case\")] public bool ? CaseSensitive { get; set; } Property Value Type Description Nullable < Boolean > CurrentWorkingDirectory cwd defines the root folder for the source files, it has the same meaning as src As discussed, cwd may lead to confusing and misunderstanding, so in version 1.3, src is introduced and cwd is kept for backward compatibility Declaration [JsonProperty(\"cwd\")] [Obsolete] public string CurrentWorkingDirectory { get; set; } Property Value Type Description String DestinationFolder The destination folder for the files if copy/transform is used Declaration [JsonProperty(\"dest\")] public string DestinationFolder { get; set; } Property Value Type Description String DisableEscape Disable the usage of \\ to escape values. By default the usage is enabled. Declaration [JsonProperty(\"noEscape\")] public bool ? DisableEscape { get; set; } Property Value Type Description Nullable < Boolean > DisableExpand Disable {a,b}c => [\"ac\", \"bc\"] . By default the usage is enabled. Declaration [JsonProperty(\"noExpand\")] public bool ? DisableExpand { get; set; } Property Value Type Description Nullable < Boolean > DisableGlobStar Disable the usage of ** to match everything including / when it is the beginning of the pattern or is after / . By default the usage is enable. Declaration [JsonProperty(\"noGlobStar\")] public bool ? DisableGlobStar { get; set; } Property Value Type Description Nullable < Boolean > DisableNegate Disable pattern begin with ! to mean negate By default the usage is enabled. Declaration [JsonProperty(\"noNegate\")] public bool ? DisableNegate { get; set; } Property Value Type Description Nullable < Boolean > Exclude The file glob pattern collection for files that should be excluded, with path relative to property src / cwd is value is set Declaration [JsonProperty(\"exclude\")] public FileItems Exclude { get; set; } Property Value Type Description FileItems Files The file glob pattern collection, with path relative to property src / cwd is value is set Declaration [JsonProperty(\"files\")] public FileItems Files { get; set; } Property Value Type Description FileItems Name The name of current item, the value is not used for now Declaration [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String RootTocPath The Root TOC Path used for navbar in current version, relative to output root If not set, will use the toc in output root in current version if exists. Declaration [JsonProperty(\"rootTocPath\")] public string RootTocPath { get; set; } Property Value Type Description String SourceFolder src defines the root folder for the source files, it has the same meaning as cwd Declaration [JsonProperty(\"src\")] public string SourceFolder { get; set; } Property Value Type Description String VersionName Version name for the current file-mapping item. If not set, treat the current file-mapping item as in default version. Mappings with the same version name will be built together. Cross reference doesn't support cross different versions. Declaration [JsonProperty(\"version\")] public string VersionName { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.FileMetadataPairs.html": {
    "href": "api/Microsoft.DocAsCode.FileMetadataPairs.html",
    "title": "Class FileMetadataPairs | DocFX website",
    "keywords": "Class FileMetadataPairs Inheritance Object FileMetadataPairs Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] [JsonConverter(typeof (FileMetadataPairsConverter))] public class FileMetadataPairs Constructors FileMetadataPairs(FileMetadataPairsItem) Declaration public FileMetadataPairs(FileMetadataPairsItem item) Parameters Type Name Description FileMetadataPairsItem item FileMetadataPairs(List<FileMetadataPairsItem>) Declaration public FileMetadataPairs(List<FileMetadataPairsItem> items) Parameters Type Name Description List < FileMetadataPairsItem > items Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public FileMetadataPairsItem this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description FileMetadataPairsItem Items Declaration public IReadOnlyList<FileMetadataPairsItem> Items { get; } Property Value Type Description IReadOnlyList < FileMetadataPairsItem > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.FileMetadataPairsConverter.html": {
    "href": "api/Microsoft.DocAsCode.FileMetadataPairsConverter.html",
    "title": "Class FileMetadataPairsConverter | DocFX website",
    "keywords": "Class FileMetadataPairsConverter Inheritance Object Newtonsoft.Json.JsonConverter FileMetadataPairsConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class FileMetadataPairsConverter : JsonConverter Methods CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.FileMetadataPairsItem.html": {
    "href": "api/Microsoft.DocAsCode.FileMetadataPairsItem.html",
    "title": "Class FileMetadataPairsItem | DocFX website",
    "keywords": "Class FileMetadataPairsItem Inheritance Object FileMetadataPairsItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] public class FileMetadataPairsItem Constructors FileMetadataPairsItem(String, Object) Declaration public FileMetadataPairsItem(string pattern, object value) Parameters Type Name Description String pattern Object value Properties Glob Declaration public GlobMatcher Glob { get; } Property Value Type Description GlobMatcher Value JObject, no need to transform it to object as the metadata value will not be used but only to be serialized Declaration public object Value { get; } Property Value Type Description Object Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownToken.html",
    "title": "Interface IMarkdownToken | DocFX website",
    "keywords": "Interface IMarkdownToken The token for markdown. It should be immutable. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownToken Properties Context The context when created this token. Declaration IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Rule The rule created this token. Declaration IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule SourceInfo The source info of this token. Declaration SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenRewriter.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenRewriter.html",
    "title": "Interface IMarkdownTokenRewriter | DocFX website",
    "keywords": "Interface IMarkdownTokenRewriter rewrite the markdown when rendering Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownTokenRewriter Methods Rewrite(IMarkdownRewriteEngine, IMarkdownToken) rewrite Declaration IMarkdownToken Rewrite(IMarkdownRewriteEngine engine, IMarkdownToken token) Parameters Type Name Description IMarkdownRewriteEngine engine the engine IMarkdownToken token the token Returns Type Description IMarkdownToken If need rewrite, return the new token, otherwise, null Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenTreeValidator.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenTreeValidator.html",
    "title": "Interface IMarkdownTokenTreeValidator | DocFX website",
    "keywords": "Interface IMarkdownTokenTreeValidator Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownTokenTreeValidator Methods Validate(ImmutableArray<IMarkdownToken>) Declaration void Validate(ImmutableArray<IMarkdownToken> tokens) Parameters Type Name Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenValidator.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenValidator.html",
    "title": "Interface IMarkdownTokenValidator | DocFX website",
    "keywords": "Interface IMarkdownTokenValidator Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownTokenValidator Methods Validate(IMarkdownToken) Declaration void Validate(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenValidatorProvider.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenValidatorProvider.html",
    "title": "Interface IMarkdownTokenValidatorProvider | DocFX website",
    "keywords": "Interface IMarkdownTokenValidatorProvider Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownTokenValidatorProvider Methods GetValidators() Declaration ImmutableArray<IMarkdownTokenValidator> GetValidators() Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownTokenValidator > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.InlineContent.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.InlineContent.html",
    "title": "Class InlineContent | DocFX website",
    "keywords": "Class InlineContent Inheritance Object InlineContent Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class InlineContent : IMarkdownRewritable<InlineContent> Constructors InlineContent(ImmutableArray<IMarkdownToken>) Declaration public InlineContent(ImmutableArray<IMarkdownToken> tokens) Parameters Type Name Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Properties Tokens Declaration public ImmutableArray<IMarkdownToken> Tokens { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Methods Rewrite(IMarkdownRewriteEngine) Declaration public InlineContent Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description InlineContent Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.JsonTokenTreeRenderer.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.JsonTokenTreeRenderer.html",
    "title": "Class JsonTokenTreeRenderer | DocFX website",
    "keywords": "Class JsonTokenTreeRenderer Inheritance Object JsonTokenTreeRenderer DfmJsonTokenTreeRender Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class JsonTokenTreeRenderer Methods Escape(String) Declaration protected string Escape(string content) Parameters Type Name Description String content Returns Type Description String ExposeTokenName(IMarkdownToken) Declaration protected string ExposeTokenName(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Returns Type Description String Insert(IMarkdownToken, StringBuffer, StringBuffer) Declaration protected StringBuffer Insert(IMarkdownToken token, StringBuffer name, StringBuffer tokenContent = null) Parameters Type Name Description IMarkdownToken token StringBuffer name StringBuffer tokenContent Returns Type Description StringBuffer Insert(Int32, Int32, StringBuffer, StringBuffer) Declaration protected StringBuffer Insert(int startLineNumber, int endLineNumber, StringBuffer name, StringBuffer tokenContent = null) Parameters Type Name Description Int32 startLineNumber Int32 endLineNumber StringBuffer name StringBuffer tokenContent Returns Type Description StringBuffer Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, GfmDelInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer GfmDelInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownBrInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownBrInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBrInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownCodeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownCodeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownCodeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownCodeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownCodeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownCodeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownEmInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownEmInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownEscapeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownEscapeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownEscapeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHeadingBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHeadingBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHrBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHrBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHtmlBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHtmlBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownIgnoreToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownIgnoreToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownIgnoreToken token IMarkdownContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownImageInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownImageInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownLinkInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownLinkInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownListBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownListBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownListItemBlockToken) Declaration protected virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownListItemBlockToken token) Parameters Type Name Description IMarkdownRenderer renderer MarkdownListItemBlockToken token Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownNewLineBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownNewLineBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownNewLineBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownNonParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownNonParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownRawToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownRawToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownRawToken token IMarkdownContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownStrongInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownStrongInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTableBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTableBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownTagInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTagInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTagInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownTextToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTextToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTextToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownTextToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTextToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTextToken token MarkdownInlineContext context Returns Type Description StringBuffer TrimStringEnd(String, String) Declaration protected string TrimStringEnd(string source, string target) Parameters Type Name Description String source String target Returns Type Description String TrimStringStart(String, String) Declaration protected string TrimStringStart(string source, string target) Parameters Type Name Description String source String target Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.LinkObj.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.LinkObj.html",
    "title": "Class LinkObj | DocFX website",
    "keywords": "Class LinkObj Inheritance Object LinkObj Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class LinkObj Properties Href Declaration public string Href { get; set; } Property Value Type Description String Title Declaration public string Title { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRenderer.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRenderer.html",
    "title": "Class MarkdownRenderer | DocFX website",
    "keywords": "Class MarkdownRenderer Inheritance Object MarkdownRenderer DfmMarkdownRenderer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownRenderer Methods Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, GfmDelInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render GfmDelInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer render IMarkdownToken token IMarkdownContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownEmInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownEmInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownHeadingBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownHeadingBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownHrBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownHrBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownHtmlBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownHtmlBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownImageInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownImageInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownLinkInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownLinkInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownListBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownListBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownListItemBlockToken, String) Declaration protected virtual StringBuffer Render(IMarkdownRenderer render, MarkdownListItemBlockToken token, string indent) Parameters Type Name Description IMarkdownRenderer render MarkdownListItemBlockToken token String indent Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownNonParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownNonParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownStrongInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownStrongInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownTableBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownTableBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRendererAdapter.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRendererAdapter.html",
    "title": "Class MarkdownRendererAdapter | DocFX website",
    "keywords": "Class MarkdownRendererAdapter The adapter for markdown renderer, use dynamic dispatch. Inheritance Object MarkdownRendererAdapter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownRendererAdapter : IMarkdownRenderer Constructors MarkdownRendererAdapter(IMarkdownEngine, Object, Options, Dictionary<String, LinkObj>) Declaration public MarkdownRendererAdapter(IMarkdownEngine engine, object renderer, Options options, Dictionary<string, LinkObj> links) Parameters Type Name Description IMarkdownEngine engine Object renderer Options options Dictionary < String , LinkObj > links Properties Engine Declaration public IMarkdownEngine Engine { get; } Property Value Type Description IMarkdownEngine Implements IMarkdownRenderer.Engine Links Declaration public Dictionary<string, LinkObj> Links { get; } Property Value Type Description Dictionary < String , LinkObj > Implements IMarkdownRenderer.Links Options Declaration public Options Options { get; } Property Value Type Description Options Implements IMarkdownRenderer.Options Renderer Declaration public object Renderer { get; } Property Value Type Description Object Methods Render(IMarkdownToken) Declaration public StringBuffer Render(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Returns Type Description StringBuffer Implements IMarkdownRenderer.Render(IMarkdownToken) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRewriteEngine.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRewriteEngine.html",
    "title": "Class MarkdownRewriteEngine | DocFX website",
    "keywords": "Class MarkdownRewriteEngine Inheritance Object MarkdownRewriteEngine Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownRewriteEngine : IMarkdownRewriteEngine Constructors MarkdownRewriteEngine(IMarkdownEngine, IMarkdownTokenRewriter) Declaration public MarkdownRewriteEngine(IMarkdownEngine engine, IMarkdownTokenRewriter rewriter) Parameters Type Name Description IMarkdownEngine engine IMarkdownTokenRewriter rewriter Properties Engine Declaration public IMarkdownEngine Engine { get; } Property Value Type Description IMarkdownEngine Implements IMarkdownRewriteEngine.Engine Methods Complete() Declaration public virtual void Complete() Implements IMarkdownRewriteEngine.Complete() GetParents() Declaration public virtual ImmutableArray<IMarkdownToken> GetParents() Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Implements IMarkdownRewriteEngine.GetParents() GetVariable(String) Declaration public virtual object GetVariable(string name) Parameters Type Name Description String name Returns Type Description Object Implements IMarkdownRewriteEngine.GetVariable(String) HasPostProcess(String) Declaration public virtual bool HasPostProcess(string name) Parameters Type Name Description String name Returns Type Description Boolean Implements IMarkdownRewriteEngine.HasPostProcess(String) HasVariable(String) Declaration public virtual bool HasVariable(string name) Parameters Type Name Description String name Returns Type Description Boolean Implements IMarkdownRewriteEngine.HasVariable(String) Initialize() Declaration public void Initialize() Implements IMarkdownRewriteEngine.Initialize() RemovePostProcess(String) Declaration public virtual void RemovePostProcess(string name) Parameters Type Name Description String name Implements IMarkdownRewriteEngine.RemovePostProcess(String) RemoveVariable(String) Declaration public virtual void RemoveVariable(string name) Parameters Type Name Description String name Implements IMarkdownRewriteEngine.RemoveVariable(String) Rewrite(ImmutableArray<IMarkdownToken>) Declaration public virtual ImmutableArray<IMarkdownToken> Rewrite(ImmutableArray<IMarkdownToken> tokens) Parameters Type Name Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Implements IMarkdownRewriteEngine.Rewrite(ImmutableArray<IMarkdownToken>) SetPostProcess(String, Action<IMarkdownRewriteEngine>) Declaration public virtual void SetPostProcess(string name, Action<IMarkdownRewriteEngine> action) Parameters Type Name Description String name Action < IMarkdownRewriteEngine > action Implements IMarkdownRewriteEngine.SetPostProcess(String, Action<IMarkdownRewriteEngine>) SetVariable(String, Object) Declaration public virtual void SetVariable(string name, object value) Parameters Type Name Description String name Object value Implements IMarkdownRewriteEngine.SetVariable(String, Object) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownStrongInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownStrongInlineRule.html",
    "title": "Class MarkdownStrongInlineRule | DocFX website",
    "keywords": "Class MarkdownStrongInlineRule Inheritance Object MarkdownStrongInlineRule GfmStrongInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownStrongInlineRule : IMarkdownRule Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Strong Declaration public virtual Regex Strong { get; } Property Value Type Description Regex Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownStrongInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownStrongInlineToken.html",
    "title": "Class MarkdownStrongInlineToken | DocFX website",
    "keywords": "Class MarkdownStrongInlineToken Inheritance Object MarkdownStrongInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownStrongInlineToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownStrongInlineToken> Constructors MarkdownStrongInlineToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public MarkdownStrongInlineToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > content SourceInfo sourceInfo Properties Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownStrongInlineToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownStrongInlineToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableBlockRule.html",
    "title": "Class MarkdownTableBlockRule | DocFX website",
    "keywords": "Class MarkdownTableBlockRule Inheritance Object MarkdownTableBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTableBlockRule : IMarkdownRule Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Table Declaration [Obsolete(\"Please use TableMatcher.\")] public virtual Regex Table { get; } Property Value Type Description Regex TableMatcher Declaration public virtual Matcher TableMatcher { get; } Property Value Type Description Matcher Methods ParseAligns(String[]) Declaration protected virtual Align[] ParseAligns(string[] aligns) Parameters Type Name Description String [] aligns Returns Type Description Align [] TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableBlockToken.html",
    "title": "Class MarkdownTableBlockToken | DocFX website",
    "keywords": "Class MarkdownTableBlockToken Inheritance Object MarkdownTableBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTableBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownTableBlockToken> Constructors MarkdownTableBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<MarkdownTableItemBlockToken>, ImmutableArray<Align>, ImmutableArray<ImmutableArray<MarkdownTableItemBlockToken>>, SourceInfo) Declaration public MarkdownTableBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<MarkdownTableItemBlockToken> header, ImmutableArray<Align> align, ImmutableArray<ImmutableArray<MarkdownTableItemBlockToken>> cells, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < MarkdownTableItemBlockToken > header System.Collections.Immutable.ImmutableArray < Align > align System.Collections.Immutable.ImmutableArray < System.Collections.Immutable.ImmutableArray < MarkdownTableItemBlockToken >> cells SourceInfo sourceInfo Properties Align Declaration public ImmutableArray<Align> Align { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < Align > Cells Declaration public ImmutableArray<ImmutableArray<MarkdownTableItemBlockToken>> Cells { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < System.Collections.Immutable.ImmutableArray < MarkdownTableItemBlockToken >> Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Header Declaration public ImmutableArray<MarkdownTableItemBlockToken> Header { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < MarkdownTableItemBlockToken > Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownTableBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownTableBlockToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableItemBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableItemBlockToken.html",
    "title": "Class MarkdownTableItemBlockToken | DocFX website",
    "keywords": "Class MarkdownTableItemBlockToken Inheritance Object MarkdownTableItemBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTableItemBlockToken : IMarkdownToken, IMarkdownRewritable<MarkdownTableItemBlockToken> Constructors MarkdownTableItemBlockToken(IMarkdownRule, IMarkdownContext, InlineContent, SourceInfo) Declaration public MarkdownTableItemBlockToken(IMarkdownRule rule, IMarkdownContext context, InlineContent content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context InlineContent content SourceInfo sourceInfo Properties Content Declaration public InlineContent Content { get; } Property Value Type Description InlineContent Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownTableItemBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownTableItemBlockToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataModel.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataModel.html",
    "title": "Class MetadataModel | DocFX website",
    "keywords": "Class MetadataModel Inheritance Object MetadataModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class MetadataModel Properties Members Declaration public List<MetadataItem> Members { get; set; } Property Value Type Description List < MetadataItem > TocYamlViewModel Declaration public MetadataItem TocYamlViewModel { get; set; } Property Value Type Description MetadataItem Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameOptions.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameOptions.html",
    "title": "Enum NameOptions | DocFX website",
    "keywords": "Enum NameOptions Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Flags] public enum NameOptions Fields Name Description All None Qualified UseAlias WithGenericParameter WithMethodGenericParameter WithNamespace WithParameter WithType WithTypeGenericParameter Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitor.html",
    "title": "Class NameVisitor | DocFX website",
    "keywords": "Class NameVisitor Inheritance Object Microsoft.CodeAnalysis.SymbolVisitor NameVisitor Inherited Members Microsoft.CodeAnalysis.SymbolVisitor.Visit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.DefaultVisit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitDiscard(Microsoft.CodeAnalysis.IDiscardSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitField(Microsoft.CodeAnalysis.IFieldSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitNamedType(Microsoft.CodeAnalysis.INamedTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class NameVisitor : SymbolVisitor Constructors NameVisitor() Declaration protected NameVisitor() Methods Append(String) Declaration protected void Append(string text) Parameters Type Name Description String text Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitorCreator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitorCreator.html",
    "title": "Class NameVisitorCreator | DocFX website",
    "keywords": "Class NameVisitorCreator Inheritance Object NameVisitorCreator CSharpNameVisitorCreator VBNameVisitorCreator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class NameVisitorCreator Constructors NameVisitorCreator() Declaration protected NameVisitorCreator() Methods Create() Declaration protected abstract NameVisitor Create() Returns Type Description NameVisitor GetCSharp(NameOptions) Declaration public static NameVisitorCreator GetCSharp(NameOptions option) Parameters Type Name Description NameOptions option Returns Type Description NameVisitorCreator GetName(ISymbol) Declaration public string GetName(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description String GetVB(NameOptions) Declaration public static NameVisitorCreator GetVB(NameOptions option) Parameters Type Name Description NameOptions option Returns Type Description NameVisitorCreator Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NormalizeSyntax.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NormalizeSyntax.html",
    "title": "Class NormalizeSyntax | DocFX website",
    "keywords": "Class NormalizeSyntax Inheritance Object NormalizeSyntax Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class NormalizeSyntax : IResolverPipeline Methods Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItem.html",
    "title": "Class ReferenceItem | DocFX website",
    "keywords": "Class ReferenceItem Inheritance Object ReferenceItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ReferenceItem Properties CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String IsDefinition Declaration [YamlMember(Alias = \"isDefinition\")] [JsonProperty(\"isDefinition\")] public bool ? IsDefinition { get; set; } Property Value Type Description Nullable < Boolean > Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String Parts Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public SortedList<SyntaxLanguage, List<LinkItem>> Parts { get; set; } Property Value Type Description SortedList < SyntaxLanguage , List < LinkItem >> Methods Clone() Declaration public ReferenceItem Clone() Returns Type Description ReferenceItem Merge(ReferenceItem) Declaration public void Merge(ReferenceItem other) Parameters Type Name Description ReferenceItem other Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItemVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItemVisitor.html",
    "title": "Class ReferenceItemVisitor | DocFX website",
    "keywords": "Class ReferenceItemVisitor Inheritance Object Microsoft.CodeAnalysis.SymbolVisitor ReferenceItemVisitor CSReferenceItemVisitor VBReferenceItemVisitor Inherited Members Microsoft.CodeAnalysis.SymbolVisitor.Visit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.DefaultVisit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitDiscard(Microsoft.CodeAnalysis.IDiscardSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitField(Microsoft.CodeAnalysis.IFieldSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class ReferenceItemVisitor : SymbolVisitor Constructors ReferenceItemVisitor(ReferenceItem) Declaration protected ReferenceItemVisitor(ReferenceItem referenceItem) Parameters Type Name Description ReferenceItem referenceItem Fields QualifiedFormat Declaration public static readonly SymbolDisplayFormat QualifiedFormat Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat QualifiedFormatWithoutGenericeParameter Declaration public static readonly SymbolDisplayFormat QualifiedFormatWithoutGenericeParameter Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat ShortFormat Declaration public static readonly SymbolDisplayFormat ShortFormat Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat ShortFormatWithoutGenericeParameter Declaration public static readonly SymbolDisplayFormat ShortFormatWithoutGenericeParameter Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat Properties ReferenceItem Declaration protected ReferenceItem ReferenceItem { get; } Property Value Type Description ReferenceItem Methods AddBeginGenericParameter() Declaration protected abstract void AddBeginGenericParameter() AddEndGenericParameter() Declaration protected abstract void AddEndGenericParameter() AddGenericParameterSeparator() Declaration protected abstract void AddGenericParameterSeparator() AddLinkItems(INamedTypeSymbol, Boolean) Declaration protected abstract void AddLinkItems(INamedTypeSymbol symbol, bool withGenericeParameter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol Boolean withGenericeParameter VisitNamedType(INamedTypeSymbol) Declaration public override void VisitNamedType(INamedTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitNamedType(Microsoft.CodeAnalysis.INamedTypeSymbol) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolverContext.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolverContext.html",
    "title": "Class ResolverContext | DocFX website",
    "keywords": "Class ResolverContext Inheritance Object ResolverContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ResolverContext Properties ApiFolder Declaration public string ApiFolder { get; set; } Property Value Type Description String Members Declaration public Dictionary<string, MetadataItem> Members { get; set; } Property Value Type Description Dictionary < String , MetadataItem > PreserveRawInlineComments Declaration public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean References Declaration public Dictionary<string, ReferenceItem> References { get; set; } Property Value Type Description Dictionary < String , ReferenceItem > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ISupportIncrementalBuildStep.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ISupportIncrementalBuildStep.html",
    "title": "Interface ISupportIncrementalBuildStep | DocFX website",
    "keywords": "Interface ISupportIncrementalBuildStep Declare a build step can support incremental build. Inherited Members IDocumentBuildStep.Name IDocumentBuildStep.BuildOrder IDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) IDocumentBuildStep.Build(FileModel, IHostService) IDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ISupportIncrementalBuildStep : IDocumentBuildStep Methods CanIncrementalBuild(FileAndType) Check each file, when incremental context hash is same. Declaration bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType the file and type information Returns Type Description Boolean Can use incremental build for this file. GetDependencyTypesToRegister() Get dependency types to register Declaration IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > dependency types to register GetIncrementalContextHash() Get the hash of incremental context, if it is different from latest one then full build. Declaration string GetIncrementalContextHash() Returns Type Description String the hash. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ISupportIncrementalDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ISupportIncrementalDocumentProcessor.html",
    "title": "Interface ISupportIncrementalDocumentProcessor | DocFX website",
    "keywords": "Interface ISupportIncrementalDocumentProcessor Declare a document processor can support incremental build. Inherited Members IDocumentProcessor.Name IDocumentProcessor.BuildSteps IDocumentProcessor.GetProcessingPriority(FileAndType) IDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) IDocumentProcessor.Save(FileModel) IDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ISupportIncrementalDocumentProcessor : IDocumentProcessor Methods GetIncrementalContextHash() Get the hash of incremental context, if it is different from latest one then full build. Declaration string GetIncrementalContextHash() Returns Type Description String the hash. LoadIntermediateModel(Stream) Load intermediate model from stream. Declaration FileModel LoadIntermediateModel(Stream stream) Parameters Type Name Description Stream stream The stream containing saved model. Returns Type Description FileModel The file model. SaveIntermediateModel(FileModel, Stream) Save intermediate model to stream. Declaration void SaveIntermediateModel(FileModel model, Stream stream) Parameters Type Name Description FileModel model The model to save. Stream stream The stream for saving. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ISupportIncrementalPostProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ISupportIncrementalPostProcessor.html",
    "title": "Interface ISupportIncrementalPostProcessor | DocFX website",
    "keywords": "Interface ISupportIncrementalPostProcessor Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ISupportIncrementalPostProcessor Properties PostProcessorHost Get or set post processor host Declaration IPostProcessorHost PostProcessorHost { get; set; } Property Value Type Description IPostProcessorHost Methods GetIncrementalContextHash() Get the hash of incremental context, skip incremental if it is different from latest one. Declaration string GetIncrementalContextHash() Returns Type Description String the hash. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.LinkSourceInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.LinkSourceInfo.html",
    "title": "Struct LinkSourceInfo | DocFX website",
    "keywords": "Struct LinkSourceInfo Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public struct LinkSourceInfo Properties Anchor Declaration public string Anchor { get; set; } Property Value Type Description String LineNumber Declaration public int LineNumber { get; set; } Property Value Type Description Int32 SourceFile Declaration public string SourceFile { get; set; } Property Value Type Description String Target Declaration public string Target { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.html",
    "title": "Namespace Microsoft.DocAsCode.Build.Engine | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.Engine Classes ApplyTemplateSettings ArchiveResourceCollection BasicXRefMapReader BuildPhaseUtility CompositeResourceCollectionWithOverridden CrossReferenceNotResolvedException DfmJsonTokenTreeServiceProvider DfmLegacyServiceProvider DfmServiceProvider DocumentBuildContext DocumentBuilder DocumentBuildParameters EmptyResourceCollection ExportSettings ExtractSearchIndex FileCollection FileMetadata FileMetadataItem FileResourceCollection GfmServiceProvider HtmlDocumentHandler HtmlPostProcessContext InvalidPreprocessorException JintProcessorHelper JsonTokenTreeServiceProvider RemoveDebugInfo ResourceCollection ResourceFileExceedsMaxDepthException ResourceFinder SearchIndexItem SingleDocumentBuilder Template TemplateBundle TemplateCollection TemplateJintPreprocessor TemplateManager TemplateModelTransformer TemplatePreprocessorResource TemplateProcessor TemplateRendererResource TemplateResourceInfo TemplateUtility TransformModelOptions ValidateBookmark XRefArchive XRefArchiveBuilder XRefArchiveReader XRefMap XRefMapDownloader XRefMapReader XRefMapRedirection XRefRedirectionReader XRefSpecUidComparer Interfaces IHtmlDocumentHandler ITemplatePreprocessor IXRefContainer IXRefContainerReader Enums ApplyTemplateOptions TemplateRendererType TemplateType XRefArchiveMode"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ManagedReferenceDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ManagedReferenceDocumentProcessor.html",
    "title": "Class ManagedReferenceDocumentProcessor | DocFX website",
    "keywords": "Class ManagedReferenceDocumentProcessor Inheritance Object DisposableDocumentProcessor ReferenceDocumentProcessorBase ManagedReferenceDocumentProcessor Inherited Members ReferenceDocumentProcessorBase.Load(FileAndType, ImmutableDictionary<String, Object>) ReferenceDocumentProcessorBase.LoadOverwrite(FileAndType, ImmutableDictionary<String, Object>) DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(typeof (IDocumentProcessor))] public class ManagedReferenceDocumentProcessor : ReferenceDocumentProcessorBase, IDisposable, ISupportIncrementalDocumentProcessor, IDocumentProcessor Constructors ManagedReferenceDocumentProcessor() Declaration public ManagedReferenceDocumentProcessor() Properties BuildSteps Declaration [ImportMany(\"ManagedReferenceDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps Implements IDocumentProcessor.BuildSteps Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Implements IDocumentProcessor.Name ProcessedDocumentType Declaration protected override string ProcessedDocumentType { get; } Property Value Type Description String Overrides ReferenceDocumentProcessorBase.ProcessedDocumentType Methods DeserializeModel(Stream) Declaration protected virtual object DeserializeModel(Stream stream) Parameters Type Name Description Stream stream Returns Type Description Object DeserializeProperties(Stream) Declaration protected virtual IDictionary<string, object> DeserializeProperties(Stream stream) Parameters Type Name Description Stream stream Returns Type Description IDictionary < String , Object > GetIncrementalContextHash() Declaration public virtual string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalDocumentProcessor.GetIncrementalContextHash() GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Overrides DisposableDocumentProcessor.GetProcessingPriority(FileAndType) Implements IDocumentProcessor.GetProcessingPriority(FileAndType) GetSerializer() Declaration protected virtual JsonSerializer GetSerializer() Returns Type Description Newtonsoft.Json.JsonSerializer LoadArticle(FileAndType, ImmutableDictionary<String, Object>) Declaration protected override FileModel LoadArticle(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides ReferenceDocumentProcessorBase.LoadArticle(FileAndType, ImmutableDictionary<String, Object>) LoadIntermediateModel(Stream) Declaration public virtual FileModel LoadIntermediateModel(Stream stream) Parameters Type Name Description Stream stream Returns Type Description FileModel Implements ISupportIncrementalDocumentProcessor.LoadIntermediateModel(Stream) Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides ReferenceDocumentProcessorBase.Save(FileModel) Implements IDocumentProcessor.Save(FileModel) SaveIntermediateModel(FileModel, Stream) Declaration public virtual void SaveIntermediateModel(FileModel model, Stream stream) Parameters Type Name Description FileModel model Stream stream Implements ISupportIncrementalDocumentProcessor.SaveIntermediateModel(FileModel, Stream) SerializeModel(Object, Stream) Declaration protected virtual void SerializeModel(object model, Stream stream) Parameters Type Name Description Object model Stream stream SerializeProperties(IDictionary<String, Object>, Stream) Declaration protected virtual void SerializeProperties(IDictionary<string, object> properties, Stream stream) Parameters Type Name Description IDictionary < String , Object > properties Stream stream UpdateModelContent(FileModel) Declaration protected virtual void UpdateModelContent(FileModel model) Parameters Type Name Description FileModel model Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.MergeManagedReferenceDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.MergeManagedReferenceDocument.html",
    "title": "Class MergeManagedReferenceDocument | DocFX website",
    "keywords": "Class MergeManagedReferenceDocument Inheritance Object BaseDocumentBuildStep MergeManagedReferenceDocument Inherited Members BaseDocumentBuildStep.Build(FileModel, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax public class MergeManagedReferenceDocument : BaseDocumentBuildStep, ISupportIncrementalBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Implements IDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Implements IDocumentBuildStep.Name Methods CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > Implements ISupportIncrementalBuildStep.GetDependencyTypesToRegister() GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep.GetIncrementalContextHash() Prebuild(ImmutableList<FileModel>, IHostService) Declaration public override IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Overrides BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Implements IDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "RELEASENOTE.html": {
    "href": "RELEASENOTE.html",
    "title": "Version Notes (Current Version: v2.17) | DocFX website",
    "keywords": "Version Notes (Current Version: v2.17) v2.17(Pre-Release) Introduce Master page syntax into Template System: Mustache: {{!master('<master_page_name>')}} Liquid: {% master <master_page_name> %} [Breaking Change] View model for ManagedReference.html.primary.tmpl is updated from {item: model} to model , if you overwrites ManagedReference.html.primary.tmpl in your own template, make sure to re-export the template file. v2.16 Support the latest csproj format <Project Sdk=\"Microsoft.NET.Sdk\"> The latest csproj introduces in a new property TargetFrameworks , docfx does not support it for now. To make docfx work, please specify TargetFramework when calling docfx. A sample docfx.json would be as follows. The merge command is to merge YAML files generated with different TargetFramework into one YAML file. { \"metadata\": [ { \"src\": \"*.csproj\", \"dest\": \"temp/api/netstandard1.4\", \"properties\": { \"TargetFramework\": \"netstandard1.4\" } }, { \"src\": \"*.csproj\", \"dest\": \"temp/api/net46\", \"properties\": { \"TargetFramework\": \"net46\" } } ], \"merge\": { \"content\": [ { \"files\": \"*.yml\", \"src\": \"temp/api/netstandard1.4\" }, { \"files\": \"*.yml\", \"src\": \"temp/api/net46\" } ], \"fileMetadata\": { \"platform\": { \"temp/api/netstandard1.4/*.yml\": [ \"netstandard1.4\" ], \"temp/api/net46/*.yml\": [ \"net46\" ] } }, \"dest\": \"api\" }, \"build\": { \"content\": [ { \"files\": [ \"api/*.yml\", \"**.md\", \"**/toc.yml\" ] } ], \"dest\": \"_site\" } } v2.15 Bug fixes: Auto dedent the included code snippet, both when including the whole file and file sections. [Breaking Change]For inline inclusion, trim ending white spaces, considering ending white spaces in inline inclusion in most cases are typos. Following GitHub markdown behavior changes. v2.14 Bug fixes: Fix duplicate project references fail GetCompilationAsync. https://github.com/dotnet/docfx/issues/1414 v2.13 Breaking Change : Create new type for files in manifest. Support working folder for dfm include and code. Upgrade YamlDotNet to 4.1. Support cross file definition reference for swagger. Bug fixes: Filter config file is expected in working dir instead of project's dir/src dir. Create msbuild workspace with release configuration by default. https://github.com/dotnet/docfx/pull/1356 v2.12 Bug fixes: default template: Do not load search-worker.js when search is disabled in docfx.js C# region support for code snippets broken by #endregion with extra text. https://github.com/dotnet/docfx/issues/1200 Markdown list continue with def. Markdown link rule is not allowed in link text. Markdown list restore wrong context. Metadata _docfxVersion can't be overwritten. https://github.com/dotnet/docfx/issues/1251 statictoc template out of sync with default template. https://github.com/dotnet/docfx/issues/1256 Fix footer covering sidetoc. https://github.com/dotnet/docfx/issues/1222 v2.11 Export custom href generator. Introduce attribute driven data model to Managed Reference Bug fixes: Generate overload name/fullname form generic method should not contain method parameter. Fix href for markdown link to non-exist files in include files. v2.10 Bug fixes: Markdown table content is misplaced if there is empty column in it. Markdown include should not share link context. Fix rawTitle when article's first line is HTML comment. v2.9.3 hotfix for wrong file link check message. v2.9.2 Remove commit id to avoid config hash changed. v2.9.1 Enable to show derived classes. Add log for config hash. v2.9 Breaking Change Using <span class=\"xxx\"> for languageKeyWord, paramref and typeparamref in generated yml files, instead of using <em> and <strong> . Change default template accordingly. Remove project Microsoft.DocAsCode.Utility , move class to Microsoft.DocAsCode.Common . Get documentation's git information with git command instead of GitSharp . REST: Support remarks to be overwritten. Support reference in parameters to be overwritten. Support DFM syntax in swagger description Bug fixes: Fix inherited member's name when xref unresolved. Fix missing items in breadcrumb. ( https://github.com/dotnet/docfx/issues/944 ) Fix generating overload method names from generic method. Fix full text search not work in index page. Fix the warning that no highlight function defined. v2.8.2 Fix bug: throw error when md contain wrong path.. v2.8.1 Fix bug: RelativePath.TryParse should not throw error when path contains invalid path characters. v2.8 Improve markdown engine: Remove paragraph rule. Improve parser performance. Report bookmarks in template preprocessor, which is used in URL segment when resolving cross reference. Support customizing logo and favicon through metadata. ( https://github.com/dotnet/docfx/pull/892 ) Refine the warning message of invalid bookmark. Improve layout for print. ( https://github.com/dotnet/docfx/issues/852 ) Remove the usage of FileModel.LocalPathFromRepoRoot . This property is marked Obsolete . Copy PathUtility , RelativePath , StringExtension and FilePathComparer from project Microsoft.DocAsCode.Utility to Microsoft.DocAsCode.Common . The copied classes in project Microsoft.DocAsCode.Utility are kept there for bits compatibility and marked Obsolete . Add command option docfx -v to show version of DocFX Bug fixes: concurrency issue of Logger . unable to handle file link with query string. unable to resolve uid for in html <a href=\"xref:...\"> . display specName wrong for generic type. ( https://github.com/dotnet/docfx/issues/896 ) breadcrumb rendered wrong when multiple toc item matched. subcommand metadata can't specify DocFX config file v2.7.3 Fix bookmark validation failed when link contains illegal characters. Fix xref to fall back to uid. v2.7.2 Fix xref with query string not resolved. Fix relative path when validating bookmark. v2.7.1 Search embedded resource prior to local resource. v2.7 Improve markdown engine performance. Improve regex. Add regex timeout. Fix bugs in markdown parser. Refine xref. Provide more options. Support options in query string. Support query string in toc href. Remove debug information in html. Add metadata command option to disable rendering triple-slash-comments as markdown. Fix bug in merging properties. Support extension for preprocessor file in default template. ( https://github.com/dotnet/docfx/issues/662 ) Improve error/warning message. Support bookmark validation. v2.6.3 minor: fix the Renderer v2.6.2 Improve markdown engine performance. Improve regex. Add regex timeout. Fix bugs in markdown parser. DFM: Support code in table v2.6.1 Fix argumentnullexception for generating overload item. Add serializable attribute. Use mark.js to highlight keywords. v2.6 Remove rest resolved cache. Fix assert fail in metadata. ( https://github.com/dotnet/docfx/issues/741 ) Add new command option: repositoryRoot. v2.5.4 Fix isssue #719 that assertion failed. v2.5.3 Update documenation Remove debug build option in Release configuration v2.5.2 Fix error message for invalid file link. v2.5.1 Support attribute filter to filter out attributes. Support choosing git URL pattern. ( https://github.com/dotnet/docfx/issues/677 ) Fix bug for line number is 0. v2.5 Add source file and line number for warning invalid file/uid link. Fix bugs in markdown table. v2.4 Update default template theme. Fix resolving properties for swagger. Fix bugs in markdown. Fix id in title (following GitHub rule). Fix strikeout not work in dfm. Fix tight list item behavior. Fix line number in table. v2.3 Support emoji in markdown content. Upgrade yamldotnet to 3.9. Refine markdown validation. Support separated meta json file. Change hightlight.js theme to github-gist . Support '.json' as supported swagger file extension. Support topicHref and tocHref to specify homepage toc. Support customized contribute repository and branch for \"Improve this Doc\" button. ( https://github.com/dotnet/docfx/issues/482 ) Improve message for docfx.exe template command. v2.2.2 Fix bug in .manifest file. v2.2.1 Fix bug when metadata incremental check. Move post process out of DocumentBuilder. v2.2 Support multi-version site. ( https://github.com/dotnet/docfx/issues/396 ) Support loop reference for Swagger Rest API. ( https://github.com/dotnet/docfx/issues/223 ) Support plug-in for post processor. Support href for see/seealso tags. Improve API reference documentation of namespace and enum. Update prerequisite to build docfx. Update manifest schema. Add chocolatey support in CI script. Provide with options in build.cmd. Bug fixes: syntax for static class is incorrect. improve warning message about global namespace class. ( https://github.com/dotnet/docfx/issues/417 ) fix normalizexml bug for empty <code></code> in tripleslashcomment. v2.1 Support for xref zip file in relative path. Support anchor in toc file. Support plug-in for validating markdown input metadata. Add output file md5 hashes. Breaking Url Rename generic type file name in metadata step E.g. System.Func<T> will generate System.Func-1.yml instead of System.Func`1.yml , and after build the url will be System.Func-1.html instead of System.Func%601.html . To keep old behavior, please add following option in metadata part in docfx.json: \"useCompatibilityFileName\": true Display extension methods in API reference documentation Provide with option _displayLangs in docfx.json to choose which language version you want to show. Support more Swagger syntax: Support allOf . ( https://github.com/dotnet/docfx/issues/360 ) Support $ref with [ and ] in json pointer. ( https://github.com/dotnet/docfx/issues/359 ) Support parameters applicable for all the operations under path . ( https://github.com/dotnet/docfx/issues/358 ) v2.0.2 Support localization tokens in DFM. v2.0.1 Fix bug that file links can't be resolved in overwrite file v2.0 Breaking Change Add line info for markdown parser. Allow Markdown reference at the end of overwrite file. Provide more information for API reference documentation display inherited members display overridden members display implemented interface separate category for Explicit Interface Implementation Rest api - Enable Tag in Swagger file to organize the API s. v1.9 Breaking Change Refactor template system: The input data model now contains all the properties including system generated metadata starting with underscore _ and globally shared variables stored in __global . You can use docfx build --exportRawModel to view the data model. Preprocessor 's transform function signature changes to: exports.transform = function (model){ // transform the model return model; } Provide a new embedded template statictoc with TOC generated in build time. Webpages generated by this template is PURE static and you can simply open the generated webpage file to take a preview, no local server is needed. Allow switch markdown engine. Allow export metadata to manifest file. Improve exclude logic to help avoid PathTooLongException . ( https://github.com/dotnet/docfx/issues/156 ) Provide with a config file named search-stopwords.json to customise full-text search stop-words. ( https://github.com/dotnet/docfx/issues/279 ) Bug fixes: Fix bug when cref contains loop. ( https://github.com/dotnet/docfx/issues/289 ) Make sure id is unique for each HTML in markdown transforming. ( https://github.com/dotnet/docfx/issues/224 ) Fix index range bugs in YamlHeaderParser . ( https://github.com/dotnet/docfx/issues/265 ) v1.8.4 Fix bug when outputFolder, basedirectory and destination are all not set fix <a> tag when href has invalid value with anchor v1.8.3 Fix bug for [!include()[]] when multiple articles in different subfolder including one file that v1.8.2 not resolved v1.8.2 Fix bug for [!include()[]] when multiple articles in different subfolder including one file v1.8.1 Fix bug when serialize attribute argument for type array. ( https://github.com/dotnet/docfx/issues/280 ) Fix bug when include file link to an anchor. Don't modify link when target file not existed. v1.8 Support multiple regions selection, code lines highlight and dedent length setting in Code Snippet . ( https://github.com/dotnet/docfx/issues/189 ) Support more tags in triple-slash-comments, e.g. lang , list , code , paramref and typeparamref . Add Example section to default template. Bug fixes: Fix bug when parsing triple-slash-comments. ( https://github.com/dotnet/docfx/issues/221 ) Fix syntax generation for VB module. ( https://github.com/dotnet/docfx/issues/260 ) v1.7 Behavior change For articles not in TOC, it's TOC file is the nearest TOC File in its output folder. Previously we only search the TOC File under the same input folder of the Not-In-Toc article. Provide more information for API reference documentation Type of events ( https://github.com/dotnet/docfx/issues/217 ) Parameters/returns for delegates ( https://github.com/dotnet/docfx/issues/218 ) Type parameter description ( https://github.com/dotnet/docfx/issues/204 ) Cross-reference is now supporting anchor # ( https://github.com/dotnet/docfx/issues/190 ) C# Code snippet now supports referencing source code using a region #engion ( https://github.com/dotnet/docfx/issues/160 ) Support TOC reference . With this syntax, we can combine multiple TOC files into a single TOC. ( https://github.com/dotnet/docfx/issues/161 ) Improve user experience when using docfx.msbuild in VS IDE Code refactor: We improved DocFX project structure in this release. Microsoft.DocAsCode.EntityModel namespace is no longer in use. Assemblies are separated into Microsoft.DocAsCode.Build , Microsoft.DocAsCode.DataContracts , and Microsoft.DocAsCode.Metadata namespace. All assemblies can be separately referenced through NuGet. In this way, it is much convenient for plugin writers to reference existing data models and utilities. v1.6 Add attribute in c# and vb syntax. Support full text search, with pure client side implementation: The feature is disabled by default. You can enable it by adding \"_enableSearch\": true to the globalMetadata property of docfx.json . The search engine is powered by lunr.js v1.5 Add 3 options to build subcommand: --rawModelOutputFolder : to specify the output folder for raw model if --exportRawModel . If the value is not set, raw model will be in the same folder as the output documenation. --viewModelOutputFolder : to specify the output folder for view model if --exportViewModel . If the value is not set, view model will be in the same folder as the output documenation. --dryRun : if this option is set, docfx will go through all the build processes for all the documents, however, no documentation will generated. Improve markdown: Allow paired parentheses in link target, e.g. [text](paired(parentheses(are)supported)now \"title\") . Improve performance for document build. Breaking changes: modify interface IDocumentBuildStep . v1.4.2 Fix bug for encoded link file. Fix bug for directory not found. v1.4.1 Remove newFileRepository from output metadata v1.4 Cross-reference related: Make @uid rule more strict: if @ is not followed by ' or \" , it must be followed by word character ( [a-zA-Z] ) Introduce new syntax for cross-reference: similar to autolink: <xref:uid> similar to link: [title](xref:uid) or [title](@uid) support uid in toc.yml : - uid: getting-started - uid: manual support cross reference in toc.md # <xref:getting-started> # [Override title](@getting-started) Update yaml serializion: Add ExtensibleMemberAttribute Improve docfx init , now with docfx init , a docfx_project seed project will will generated. Several improvements for default template: Provide properties to customize layout: _disableNavbar , _disableBreadcrumb , _disableToc , _disableAffix , _disableContribution , _disableFooter Include empty main.css and main.js to head.tmpl.partial partial template so that there is no need to customize head.tmpl.partial when you want to customize website style. v1.3.8 Fix no link and ref link cannot work issue in table v1.3.7 Fix no link and ref link cannot work issue in markdownlite. Fix link issue (allow space in link) in markdownlite. Fix para for list in markdownlite. Fix tokenize bug in dfm. Add markdown token validator in dfm. v1.3.6 Fix cross domain issue: timeout exception throws when document build takes longer than 15 minutes Fix docfx IOException when calling docfx -l report.txt v1.3.5 FIX Github pages compatibility issue( Github pages now disallow iframe , however the default template of docfx uses iframe to load side toc): Update default template to use AJAX to load side toc, the original one is renamed to iframe.html . So now we have 2 embedded template, one is default and another is iframe.html . v1.3 docfx improvements Add subcommand docfx template . You can now docfx template list and docfx template export -A to list and export all the embeded templates! Add subcommand docfx merge . You can use this subcommand to merge platform from multiple APIs with the same uid Add two options to build subcommand, --exportRawModel and --exportViewModel . --exportRawModel exports the data model to apply templates, --exportViewModel exports the view model after running template's pre-process scripts. Add --globalMetadata , and --globalMetadataFile options to build subcommand. These options allow globalMetadata to be loaded from command line in json format or from a JSON file. Add --fileMetadataFile option to build subcommand. This option allows fileMeatdata to be read from an external JSON file. Support plugins. You can create your own template with a plugins folder, inside which, you create your own build steps. Refer to @Microsoft.DocAsCode.EntityModel.Plugins.BaseDocumentBuildStep for a sample plugin implementation. DFM syntax improvements Support note&div syntax Support query format in code snippet [!code-<language>[<name>](<codepath><queryoption><queryoptionvalue> \"<title>\")] Change xref logic: If content after @ is wrapped by ' or \" , it contains any character including white space If content after @ is not wrapped by ' or \" , it ends when: line ends meets whitespaces line ends with . , , , ; , : , ! , ? and ~ meets 2 times or more . , , , ; , : , ! , ? and ~ Code improvements Add Microsoft.DocAsCode.YamlSerialization This project is based on YamlDotNet . It overrides classes like type converters to improve performance and fix bug existed in YamlDotNet Refactor markdown engine Microsoft.DocAsCode.MarkdownLite Add IMarkdownRewritable<T> . It provides a way to operate markdown tokens. Other improvements Add a new property _path into _attrs , it stands for the relative path from docfx.json to current file Improve missing xref warning message to include containing files. Add data-uid as attribute to generated html from default template, so that you can now find uid for API much more easily. v1.2 Support Liquid template, templates ending with .liquid are considered as using liquid templating language. Liquid contains include tag to support partials, we follow the ruby partials naming convention to have _<partialName>.liquid as partial template. A custom tag ref , e.g. {% ref file1 %} is introduced to specify the resource files that current template depends on. DFM include syntax is updated to use [!include[<title>](<filepath>)] syntax Disable glob pattern in docfx metadata command line option as it is to some extent confusing, consider using a -g option later to re-enable it. v1.1 Rewrite Glob The syntax of glob is: ** is called globstar, it matches any number of characters, including / , as long as it's the only thing in a path part. If ** is right behind / , it is a shortcut for **/* . * matches any number of characters, but not / ? matches 1 characters, but not / {} allows for a comma-separated list of \"or\" expressions, e.g. {a,b} => a and b ! at the beginning of a pattern will negate the match [...] matches a range of characters, similar to a RegExp range / is considered as path separator, while \\ is considered as escape character Support fileMetadata . You can specify different metadata value using glob pattern Improve overwrite functionality. Now you can overwrite not only summary/remarks, but also descriptions for parameters. You can even add exceptions. Now the latest project.json projects are also supported in DNX version. Simple code snippet is now supported, syntax is [!code-REST-i[title](path \"optionalTitle\")] Url is now encoded in markdown link. v1.0 Add section syntax in DFM Fix several bugs in DFM Update default template: rename css/js file Fix several display issue in default template v0.3 Support Static Website Templates Schema change to docfx.json"
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to DocFX website! | DocFX website",
    "keywords": ""
  },
  "install.html": {
    "href": "install.html",
    "title": "Thanks for installing DocFX! | DocFX website",
    "keywords": ""
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleExcludeItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleExcludeItem.html",
    "title": "Class ConfigFilterRuleExcludeItem | DocFX website",
    "keywords": "Class ConfigFilterRuleExcludeItem Inheritance Object ConfigFilterRuleItem ConfigFilterRuleExcludeItem Inherited Members ConfigFilterRuleItem.UidRegex ConfigFilterRuleItem.Kind ConfigFilterRuleItem.Attribute ConfigFilterRuleItem.IsMatch(ISymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class ConfigFilterRuleExcludeItem : ConfigFilterRuleItem Properties CanVisit Declaration [YamlIgnore] public override bool CanVisit { get; } Property Value Type Description Boolean Overrides ConfigFilterRuleItem.CanVisit Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleIncludeItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleIncludeItem.html",
    "title": "Class ConfigFilterRuleIncludeItem | DocFX website",
    "keywords": "Class ConfigFilterRuleIncludeItem Inheritance Object ConfigFilterRuleItem ConfigFilterRuleIncludeItem Inherited Members ConfigFilterRuleItem.UidRegex ConfigFilterRuleItem.Kind ConfigFilterRuleItem.Attribute ConfigFilterRuleItem.IsMatch(ISymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class ConfigFilterRuleIncludeItem : ConfigFilterRuleItem Properties CanVisit Declaration [YamlIgnore] public override bool CanVisit { get; } Property Value Type Description Boolean Overrides ConfigFilterRuleItem.CanVisit Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItem.html",
    "title": "Class ConfigFilterRuleItem | DocFX website",
    "keywords": "Class ConfigFilterRuleItem Inheritance Object ConfigFilterRuleItem ConfigFilterRuleExcludeItem ConfigFilterRuleIncludeItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class ConfigFilterRuleItem Properties Attribute Declaration [YamlMember(Alias = \"hasAttribute\")] public AttributeFilterInfo Attribute { get; set; } Property Value Type Description AttributeFilterInfo CanVisit Declaration [YamlIgnore] public abstract bool CanVisit { get; } Property Value Type Description Boolean Kind Declaration [YamlMember(Alias = \"type\")] public ExtendedSymbolKind? Kind { get; set; } Property Value Type Description Nullable < ExtendedSymbolKind > UidRegex Declaration [YamlMember(Alias = \"uidRegex\")] public string UidRegex { get; set; } Property Value Type Description String Methods IsMatch(ISymbol) Declaration public bool IsMatch(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItemUnion.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItemUnion.html",
    "title": "Class ConfigFilterRuleItemUnion | DocFX website",
    "keywords": "Class ConfigFilterRuleItemUnion Inheritance Object ConfigFilterRuleItemUnion Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class ConfigFilterRuleItemUnion Properties Exclude Declaration [YamlMember(Alias = \"exclude\")] public ConfigFilterRuleExcludeItem Exclude { get; set; } Property Value Type Description ConfigFilterRuleExcludeItem Include Declaration [YamlMember(Alias = \"include\")] public ConfigFilterRuleIncludeItem Include { get; set; } Property Value Type Description ConfigFilterRuleIncludeItem Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterVisitor.html",
    "title": "Class ConfigFilterVisitor | DocFX website",
    "keywords": "Class ConfigFilterVisitor Inheritance Object DelegatingFilterVisitor ConfigFilterVisitor Inherited Members DelegatingFilterVisitor.Inner DelegatingFilterVisitor.CanVisitApi(ISymbol, Boolean, IFilterVisitor) DelegatingFilterVisitor.CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ConfigFilterVisitor : DelegatingFilterVisitor, IFilterVisitor Constructors ConfigFilterVisitor(IFilterVisitor, ConfigFilterRule) Declaration public ConfigFilterVisitor(IFilterVisitor inner, ConfigFilterRule rule) Parameters Type Name Description IFilterVisitor inner ConfigFilterRule rule ConfigFilterVisitor(IFilterVisitor, String) Declaration public ConfigFilterVisitor(IFilterVisitor inner, string configFile) Parameters Type Name Description IFilterVisitor inner String configFile Methods CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitApiCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitAttributeCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) LoadRules(String) Declaration public static ConfigFilterRule LoadRules(string configFile) Parameters Type Name Description String configFile Returns Type Description ConfigFilterRule Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) FilterVisitorExtensions.WithConfig(IFilterVisitor, String) FilterVisitorExtensions.WithConfig(IFilterVisitor, ConfigFilterRule) FilterVisitorExtensions.WithCache(IFilterVisitor)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CopyInherited.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CopyInherited.html",
    "title": "Class CopyInherited | DocFX website",
    "keywords": "Class CopyInherited Copies doc comments to items marked with 'inheritdoc' from interfaces and base classes. Inheritance Object CopyInherited Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class CopyInherited : IResolverPipeline Methods Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSharpNameVisitorCreator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSharpNameVisitorCreator.html",
    "title": "Class CSharpNameVisitorCreator | DocFX website",
    "keywords": "Class CSharpNameVisitorCreator Inheritance Object NameVisitorCreator CSharpNameVisitorCreator Inherited Members NameVisitorCreator.GetName(ISymbol) NameVisitorCreator.GetCSharp(NameOptions) NameVisitorCreator.GetVB(NameOptions) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class CSharpNameVisitorCreator : NameVisitorCreator Constructors CSharpNameVisitorCreator(NameOptions) Declaration public CSharpNameVisitorCreator(NameOptions options) Parameters Type Name Description NameOptions options Methods Create() Declaration protected override NameVisitor Create() Returns Type Description NameVisitor Overrides NameVisitorCreator.Create() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSReferenceItemVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSReferenceItemVisitor.html",
    "title": "Class CSReferenceItemVisitor | DocFX website",
    "keywords": "Class CSReferenceItemVisitor Inheritance Object Microsoft.CodeAnalysis.SymbolVisitor ReferenceItemVisitor CSReferenceItemVisitor Inherited Members ReferenceItemVisitor.ShortFormat ReferenceItemVisitor.QualifiedFormat ReferenceItemVisitor.ShortFormatWithoutGenericeParameter ReferenceItemVisitor.QualifiedFormatWithoutGenericeParameter ReferenceItemVisitor.ReferenceItem ReferenceItemVisitor.VisitNamedType(INamedTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.Visit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.DefaultVisit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitDiscard(Microsoft.CodeAnalysis.IDiscardSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class CSReferenceItemVisitor : ReferenceItemVisitor Constructors CSReferenceItemVisitor(ReferenceItem, Boolean) Declaration public CSReferenceItemVisitor(ReferenceItem referenceItem, bool asOverload) Parameters Type Name Description ReferenceItem referenceItem Boolean asOverload Methods AddBeginGenericParameter() Declaration protected override void AddBeginGenericParameter() Overrides ReferenceItemVisitor.AddBeginGenericParameter() AddEndGenericParameter() Declaration protected override void AddEndGenericParameter() Overrides ReferenceItemVisitor.AddEndGenericParameter() AddGenericParameterSeparator() Declaration protected override void AddGenericParameterSeparator() Overrides ReferenceItemVisitor.AddGenericParameterSeparator() AddLinkItems(INamedTypeSymbol, Boolean) Declaration protected override void AddLinkItems(INamedTypeSymbol symbol, bool withGenericeParameter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol Boolean withGenericeParameter Overrides ReferenceItemVisitor.AddLinkItems(INamedTypeSymbol, Boolean) VisitArrayType(IArrayTypeSymbol) Declaration public override void VisitArrayType(IArrayTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IArrayTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol) VisitDynamicType(IDynamicTypeSymbol) Declaration public override void VisitDynamicType(IDynamicTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IDynamicTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol) VisitEvent(IEventSymbol) Declaration public override void VisitEvent(IEventSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol) VisitField(IFieldSymbol) Declaration public override void VisitField(IFieldSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitField(Microsoft.CodeAnalysis.IFieldSymbol) VisitMethod(IMethodSymbol) Declaration public override void VisitMethod(IMethodSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol) VisitNamespace(INamespaceSymbol) Declaration public override void VisitNamespace(INamespaceSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.INamespaceSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol) VisitPointerType(IPointerTypeSymbol) Declaration public override void VisitPointerType(IPointerTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IPointerTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol) VisitProperty(IPropertySymbol) Declaration public override void VisitProperty(IPropertySymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol) VisitTypeParameter(ITypeParameterSymbol) Declaration public override void VisitTypeParameter(ITypeParameterSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ITypeParameterSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.FileIncrementalInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.FileIncrementalInfo.html",
    "title": "Class FileIncrementalInfo | DocFX website",
    "keywords": "Class FileIncrementalInfo Inheritance Object FileIncrementalInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class FileIncrementalInfo Properties IsIncremental Declaration public bool IsIncremental { get; set; } Property Value Type Description Boolean SourceFile Declaration public string SourceFile { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.FileModel.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.FileModel.html",
    "title": "Class FileModel | DocFX website",
    "keywords": "Class FileModel Inheritance Object FileModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public sealed class FileModel : IDisposable Constructors FileModel(FileAndType, Object, FileAndType, IFormatter) Declaration public FileModel(FileAndType ft, object content, FileAndType original = null, IFormatter serializer = null) Parameters Type Name Description FileAndType ft Object content FileAndType original IFormatter serializer FileModel(FileAndType, Object, FileAndType, IFormatter, String) Declaration public FileModel(FileAndType ft, object content, FileAndType original, IFormatter serializer, string key) Parameters Type Name Description FileAndType ft Object content FileAndType original IFormatter serializer String key Properties BaseDir Declaration public string BaseDir { get; set; } Property Value Type Description String Content Declaration public object Content { get; set; } Property Value Type Description Object DocumentType Declaration public string DocumentType { get; set; } Property Value Type Description String File Declaration public string File { get; set; } Property Value Type Description String FileAndType Declaration public FileAndType FileAndType { get; } Property Value Type Description FileAndType FileLinkSources Declaration public ImmutableDictionary<string, ImmutableList<LinkSourceInfo>> FileLinkSources { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , System.Collections.Immutable.ImmutableList < LinkSourceInfo >> Key Declaration public string Key { get; } Property Value Type Description String LinkToFiles Declaration public ImmutableHashSet<string> LinkToFiles { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableHashSet < String > LinkToUids Declaration public ImmutableHashSet<string> LinkToUids { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableHashSet < String > LocalPathFromRoot Declaration public string LocalPathFromRoot { get; set; } Property Value Type Description String ManifestProperties Declaration public dynamic ManifestProperties { get; } Property Value Type Description Object ModelWithCache Declaration public ModelWithCache ModelWithCache { get; } Property Value Type Description ModelWithCache OriginalFileAndType Declaration public FileAndType OriginalFileAndType { get; } Property Value Type Description FileAndType Properties Declaration public dynamic Properties { get; } Property Value Type Description Object Serializer Declaration public IFormatter Serializer { get; set; } Property Value Type Description IFormatter Type Declaration public DocumentType Type { get; } Property Value Type Description DocumentType UidLinkSources Declaration public ImmutableDictionary<string, ImmutableList<LinkSourceInfo>> UidLinkSources { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , System.Collections.Immutable.ImmutableList < LinkSourceInfo >> Uids Declaration public ImmutableArray<UidDefinition> Uids { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < UidDefinition > Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Events ContentAccessed Declaration public event EventHandler ContentAccessed Event Type Type Description EventHandler FileOrBaseDirChanged Declaration public event EventHandler FileOrBaseDirChanged Event Type Type Description EventHandler UidsChanged Declaration public event EventHandler<PropertyChangedEventArgs<ImmutableArray<UidDefinition>>> UidsChanged Event Type Type Description EventHandler < PropertyChangedEventArgs < System.Collections.Immutable.ImmutableArray < UidDefinition >>> Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.HomepageInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.HomepageInfo.html",
    "title": "Class HomepageInfo | DocFX website",
    "keywords": "Class HomepageInfo Inheritance Object HomepageInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class HomepageInfo Properties Homepage Declaration [JsonProperty(\"homepage\")] public string Homepage { get; set; } Property Value Type Description String TocPath Declaration [JsonProperty(\"tocPath\")] public string TocPath { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ICanTraceContextInfoBuildStep.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ICanTraceContextInfoBuildStep.html",
    "title": "Interface ICanTraceContextInfoBuildStep | DocFX website",
    "keywords": "Interface ICanTraceContextInfoBuildStep Inherited Members ISupportIncrementalBuildStep.GetIncrementalContextHash() ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) ISupportIncrementalBuildStep.GetDependencyTypesToRegister() IDocumentBuildStep.Name IDocumentBuildStep.BuildOrder IDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) IDocumentBuildStep.Build(FileModel, IHostService) IDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ICanTraceContextInfoBuildStep : ISupportIncrementalBuildStep, IDocumentBuildStep Methods LoadContext(Stream) Declaration void LoadContext(Stream stream) Parameters Type Name Description Stream stream SaveContext(Stream) Declaration void SaveContext(Stream stream) Parameters Type Name Description Stream stream Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ICustomHrefGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ICustomHrefGenerator.html",
    "title": "Interface ICustomHrefGenerator | DocFX website",
    "keywords": "Interface ICustomHrefGenerator Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ICustomHrefGenerator Methods GenerateHref(IFileLinkInfo) Declaration string GenerateHref(IFileLinkInfo href) Parameters Type Name Description IFileLinkInfo href Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ICustomMarkdownTagValidator.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ICustomMarkdownTagValidator.html",
    "title": "Interface ICustomMarkdownTagValidator | DocFX website",
    "keywords": "Interface ICustomMarkdownTagValidator Contract interface for custom validate tag in markdown Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ICustomMarkdownTagValidator Methods Validate(String) Declaration bool Validate(string tag) Parameters Type Name Description String tag Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IDocumentBuildContext.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IDocumentBuildContext.html",
    "title": "Interface IDocumentBuildContext | DocFX website",
    "keywords": "Interface IDocumentBuildContext Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IDocumentBuildContext Properties RootTocPath The Root Toc Path of current version Declaration string RootTocPath { get; } Property Value Type Description String VersionFolder Current file's version root path from ~ ROOT Declaration string VersionFolder { get; } Property Value Type Description String VersionName Current file's version name Declaration string VersionName { get; } Property Value Type Description String Methods GetFilePath(String) Get final file path from working folder, starting with ~/ Declaration string GetFilePath(string key) Parameters Type Name Description String key Key is the original file path from working folder, starting with ~/ Returns Type Description String The final file path for current file GetTocFileKeySet(String) Get a set of file key for the toc files that current file belongs to Declaration IImmutableList<string> GetTocFileKeySet(string key) Parameters Type Name Description String key The key of current file Returns Type Description System.Collections.Immutable.IImmutableList < String > The set of file key for the toc files that current file belongs to GetTocInfo() Get all the registered toc information Declaration IImmutableList<TocInfo> GetTocInfo() Returns Type Description System.Collections.Immutable.IImmutableList < TocInfo > All the registered toc information GetXrefSpec(String) Get internal xref spec for current uid Declaration XRefSpec GetXrefSpec(string uid) Parameters Type Name Description String uid The uid of the file Returns Type Description XRefSpec The file key of current file RegisterInternalXrefSpec(XRefSpec) Register internal xref spec Declaration void RegisterInternalXrefSpec(XRefSpec xrefSpec) Parameters Type Name Description XRefSpec xrefSpec The xref spec to be registered RegisterInternalXrefSpecBookmark(String, String) Register internal xref spec bookmark Declaration void RegisterInternalXrefSpecBookmark(string uid, string bookmark) Parameters Type Name Description String uid The uid of the xref spec to be registered the bookmark String bookmark The bookmark to be registered RegisterToc(String, String) Register the relationship between current toc file and the article Declaration void RegisterToc(string tocFileKey, string fileKey) Parameters Type Name Description String tocFileKey The key of the toc file that the file belongs to String fileKey The key of the file that belongs to the toc RegisterTocInfo(TocInfo) Register the toc file to context with its information provided Declaration void RegisterTocInfo(TocInfo toc) Parameters Type Name Description TocInfo toc The information for the toc, containing the homepage of the toc SetFilePath(String, String) Set the final file path for current file Declaration void SetFilePath(string key, string filePath) Parameters Type Name Description String key The file key of current file String filePath The final file path for current file Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IDocumentBuildStep.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IDocumentBuildStep.html",
    "title": "Interface IDocumentBuildStep | DocFX website",
    "keywords": "Interface IDocumentBuildStep Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IDocumentBuildStep Properties BuildOrder Declaration int BuildOrder { get; } Property Value Type Description Int32 Name Declaration string Name { get; } Property Value Type Description String Methods Build(FileModel, IHostService) Declaration void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Postbuild(ImmutableList<FileModel>, IHostService) Declaration void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Prebuild(ImmutableList<FileModel>, IHostService) Declaration IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.AttributeFilterInfo.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.AttributeFilterInfo.html",
    "title": "Class AttributeFilterInfo | DocFX website",
    "keywords": "Class AttributeFilterInfo Inheritance Object AttributeFilterInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class AttributeFilterInfo Properties ConstructorArguments Declaration [YamlMember(Alias = \"ctorArguments\")] public List<string> ConstructorArguments { get; set; } Property Value Type Description List < String > ConstructorNamedArguments Declaration [YamlMember(Alias = \"ctorNamedArguments\")] public Dictionary<string, string> ConstructorNamedArguments { get; set; } Property Value Type Description Dictionary < String , String > Uid Declaration [YamlMember(Alias = \"uid\")] public string Uid { get; set; } Property Value Type Description String Methods ContainedIn(ISymbol) Declaration public bool ContainedIn(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildMembers.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildMembers.html",
    "title": "Class BuildMembers | DocFX website",
    "keywords": "Class BuildMembers Inheritance Object BuildMembers Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class BuildMembers : IResolverPipeline Methods Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildToc.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildToc.html",
    "title": "Class BuildToc | DocFX website",
    "keywords": "Class BuildToc Inheritance Object BuildToc Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class BuildToc : IResolverPipeline Methods Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CachedFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CachedFilterVisitor.html",
    "title": "Class CachedFilterVisitor | DocFX website",
    "keywords": "Class CachedFilterVisitor Inheritance Object DelegatingFilterVisitor CachedFilterVisitor Inherited Members DelegatingFilterVisitor.Inner DelegatingFilterVisitor.CanVisitApi(ISymbol, Boolean, IFilterVisitor) DelegatingFilterVisitor.CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class CachedFilterVisitor : DelegatingFilterVisitor, IFilterVisitor Constructors CachedFilterVisitor(IFilterVisitor) Declaration public CachedFilterVisitor(IFilterVisitor inner) Parameters Type Name Description IFilterVisitor inner Methods CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitApiCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitAttributeCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) FilterVisitorExtensions.WithConfig(IFilterVisitor, String) FilterVisitorExtensions.WithConfig(IFilterVisitor, ConfigFilterRule) FilterVisitorExtensions.WithCache(IFilterVisitor)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CompositeYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CompositeYamlModelGenerator.html",
    "title": "Class CompositeYamlModelGenerator | DocFX website",
    "keywords": "Class CompositeYamlModelGenerator Inheritance Object YamlModelGenerator CompositeYamlModelGenerator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public sealed class CompositeYamlModelGenerator : YamlModelGenerator Constructors CompositeYamlModelGenerator(SimpleYamlModelGenerator[]) Declaration public CompositeYamlModelGenerator(params SimpleYamlModelGenerator[] generators) Parameters Type Name Description SimpleYamlModelGenerator [] generators CompositeYamlModelGenerator(IEnumerable<SimpleYamlModelGenerator>) Declaration public CompositeYamlModelGenerator(IEnumerable<SimpleYamlModelGenerator> generators) Parameters Type Name Description IEnumerable < SimpleYamlModelGenerator > generators Methods DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Operators Addition(CompositeYamlModelGenerator, SimpleYamlModelGenerator) Declaration public static CompositeYamlModelGenerator operator +(CompositeYamlModelGenerator left, SimpleYamlModelGenerator right) Parameters Type Name Description CompositeYamlModelGenerator left SimpleYamlModelGenerator right Returns Type Description CompositeYamlModelGenerator Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRule.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRule.html",
    "title": "Class ConfigFilterRule | DocFX website",
    "keywords": "Class ConfigFilterRule Inheritance Object ConfigFilterRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class ConfigFilterRule Properties ApiRules Declaration [YamlMember(Alias = \"apiRules\")] public List<ConfigFilterRuleItemUnion> ApiRules { get; set; } Property Value Type Description List < ConfigFilterRuleItemUnion > AttributeRules Declaration [YamlMember(Alias = \"attributeRules\")] public List<ConfigFilterRuleItemUnion> AttributeRules { get; set; } Property Value Type Description List < ConfigFilterRuleItemUnion > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.DependencyType.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.DependencyType.html",
    "title": "Class DependencyType | DocFX website",
    "keywords": "Class DependencyType Inheritance Object DependencyType Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class DependencyType Properties IsTransitive whether this type of dependency is transitive Declaration [Obsolete] public bool IsTransitive { get; set; } Property Value Type Description Boolean Name name of the dependency type Declaration public string Name { get; set; } Property Value Type Description String Phase the build phase that this type of dependency could have an effect on. [TO-DO]: remove the nullable ? when old value is overwritten Declaration public BuildPhase? Phase { get; set; } Property Value Type Description Nullable < BuildPhase > Transitivity the transitivity of the dependency. [TO-DO]: remove the nullable ? when old value is overwritten Declaration public DependencyTransitivity? Transitivity { get; set; } Property Value Type Description Nullable < DependencyTransitivity > TriggerBuild Declaration [Obsolete] public bool TriggerBuild { get; set; } Property Value Type Description Boolean Methods CouldTransit(DependencyType) Declaration public bool CouldTransit(DependencyType other) Parameters Type Name Description DependencyType other Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.DependencyTypeName.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.DependencyTypeName.html",
    "title": "Class DependencyTypeName | DocFX website",
    "keywords": "Class DependencyTypeName Inheritance Object DependencyTypeName Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public static class DependencyTypeName Fields Bookmark Declaration public const string Bookmark = \"bookmark\" Field Value Type Description String File Declaration public const string File = \"file\" Field Value Type Description String Include Declaration public const string Include = \"include\" Field Value Type Description String Metadata Declaration public const string Metadata = \"metadata\" Field Value Type Description String Overwrite Declaration public const string Overwrite = \"overwrite\" Field Value Type Description String Reference Declaration public const string Reference = \"reference\" Field Value Type Description String Uid Declaration public const string Uid = \"uid\" Field Value Type Description String"
  },
  "api/Microsoft.DocAsCode.Plugins.DocumentException.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.DocumentException.html",
    "title": "Class DocumentException | DocFX website",
    "keywords": "Class DocumentException Inheritance Object Exception DocumentException CrossReferenceNotResolvedException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax [Serializable] public class DocumentException : Exception, ISerializable, _Exception Constructors DocumentException() Declaration public DocumentException() DocumentException(SerializationInfo, StreamingContext) Declaration protected DocumentException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context DocumentException(String) Declaration public DocumentException(string message) Parameters Type Name Description String message DocumentException(String, Exception) Declaration public DocumentException(string message, Exception inner) Parameters Type Name Description String message Exception inner Properties Column Declaration public int Column { get; set; } Property Value Type Description Int32 File Declaration public string File { get; set; } Property Value Type Description String Line Declaration public int Line { get; set; } Property Value Type Description Int32 Methods GetObjectData(SerializationInfo, StreamingContext) Declaration [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)] public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Overrides Exception.GetObjectData(SerializationInfo, StreamingContext) RunAll(Action[]) Declaration public static void RunAll(params Action[] actions) Parameters Type Name Description Action [] actions Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.DocumentExceptionExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.DocumentExceptionExtensions.html",
    "title": "Class DocumentExceptionExtensions | DocFX website",
    "keywords": "Class DocumentExceptionExtensions Inheritance Object DocumentExceptionExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public static class DocumentExceptionExtensions Methods RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>) Declaration public static void RunAll<TElement>(this IReadOnlyList<TElement> elements, Action<TElement> action) Parameters Type Name Description IReadOnlyList <TElement> elements Action <TElement> action Type Parameters Name Description TElement RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>, Int32) Declaration public static void RunAll<TElement>(this IReadOnlyList<TElement> elements, Action<TElement> action, int parallelism) Parameters Type Name Description IReadOnlyList <TElement> elements Action <TElement> action Int32 parallelism Type Parameters Name Description TElement RunAll<TElement, TResult>(IReadOnlyList<TElement>, Func<TElement, TResult>) Declaration public static TResult[] RunAll<TElement, TResult>(this IReadOnlyList<TElement> elements, Func<TElement, TResult> func) Parameters Type Name Description IReadOnlyList <TElement> elements Func <TElement, TResult> func Returns Type Description TResult[] Type Parameters Name Description TElement TResult"
  },
  "api/Microsoft.DocAsCode.Plugins.DocumentType.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.DocumentType.html",
    "title": "Enum DocumentType | DocFX website",
    "keywords": "Enum DocumentType Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public enum DocumentType Fields Name Description Article Metadata Overwrite Resource Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.EnvironmentContext.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.EnvironmentContext.html",
    "title": "Class EnvironmentContext | DocFX website",
    "keywords": "Class EnvironmentContext Inheritance Object EnvironmentContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public static class EnvironmentContext Properties BaseDirectory The directory path which contains docfx.json. Declaration public static string BaseDirectory { get; } Property Value Type Description String FileAbstractLayer Get or set current file abstract layer. Declaration public static IFileAbstractLayer FileAbstractLayer { get; } Property Value Type Description IFileAbstractLayer OutputDirectory The output directory path. Declaration public static string OutputDirectory { get; } Property Value Type Description String"
  },
  "api/Microsoft.DocAsCode.Plugins.FileAbstractLayerExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.FileAbstractLayerExtensions.html",
    "title": "Class FileAbstractLayerExtensions | DocFX website",
    "keywords": "Class FileAbstractLayerExtensions Inheritance Object FileAbstractLayerExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public static class FileAbstractLayerExtensions Methods CreateText(IFileAbstractLayer, String) Declaration public static StreamWriter CreateText(this IFileAbstractLayer fal, string file) Parameters Type Name Description IFileAbstractLayer fal String file Returns Type Description StreamWriter GetAllPhysicalPaths(IFileAbstractLayer) Declaration public static IEnumerable<KeyValuePair<string, string>> GetAllPhysicalPaths(this IFileAbstractLayer fal) Parameters Type Name Description IFileAbstractLayer fal Returns Type Description IEnumerable < KeyValuePair < String , String >> GetProperty(IFileAbstractLayer, String, String) Declaration public static string GetProperty(this IFileAbstractLayer fal, string file, string propertyName) Parameters Type Name Description IFileAbstractLayer fal String file String propertyName Returns Type Description String HasProperty(IFileAbstractLayer, String, String) Declaration public static bool HasProperty(this IFileAbstractLayer fal, string file, string propertyName) Parameters Type Name Description IFileAbstractLayer fal String file String propertyName Returns Type Description Boolean OpenReadText(IFileAbstractLayer, String) Declaration public static StreamReader OpenReadText(this IFileAbstractLayer fal, string file) Parameters Type Name Description IFileAbstractLayer fal String file Returns Type Description StreamReader ReadAllLines(IFileAbstractLayer, String) Declaration public static string[] ReadAllLines(this IFileAbstractLayer fal, string file) Parameters Type Name Description IFileAbstractLayer fal String file Returns Type Description String [] ReadAllText(IFileAbstractLayer, String) Declaration public static string ReadAllText(this IFileAbstractLayer fal, string file) Parameters Type Name Description IFileAbstractLayer fal String file Returns Type Description String WriteAllText(IFileAbstractLayer, String, String) Declaration public static void WriteAllText(this IFileAbstractLayer fal, string file, string content) Parameters Type Name Description IFileAbstractLayer fal String file String content"
  },
  "api/Microsoft.DocAsCode.Plugins.FileAndType.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.FileAndType.html",
    "title": "Class FileAndType | DocFX website",
    "keywords": "Class FileAndType Inheritance Object FileAndType Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public sealed class FileAndType : IEquatable<FileAndType> Constructors FileAndType(String, String, DocumentType, String, String) Declaration [JsonConstructor] public FileAndType(string baseDir, string file, DocumentType type, string sourceDir = null, string destinationDir = null) Parameters Type Name Description String baseDir String file DocumentType type String sourceDir String destinationDir Properties BaseDir Declaration [JsonProperty(\"baseDir\")] public string BaseDir { get; } Property Value Type Description String DestinationDir Declaration [JsonProperty(\"destinationDir\")] public string DestinationDir { get; set; } Property Value Type Description String File Declaration [JsonProperty(\"file\")] public string File { get; } Property Value Type Description String FullPath Declaration [JsonIgnore] public string FullPath { get; } Property Value Type Description String SourceDir Declaration [JsonProperty(\"sourceDir\")] public string SourceDir { get; set; } Property Value Type Description String StringComparer Declaration [JsonIgnore] public StringComparer StringComparer { get; } Property Value Type Description StringComparer Type Declaration [JsonProperty(\"type\")] public DocumentType Type { get; } Property Value Type Description DocumentType Methods ChangeBaseDir(String) Declaration public FileAndType ChangeBaseDir(string baseDir) Parameters Type Name Description String baseDir Returns Type Description FileAndType ChangeFile(String) Declaration public FileAndType ChangeFile(string file) Parameters Type Name Description String file Returns Type Description FileAndType ChangeType(DocumentType) Declaration public FileAndType ChangeType(DocumentType type) Parameters Type Name Description DocumentType type Returns Type Description FileAndType Equals(FileAndType) Declaration public bool Equals(FileAndType other) Parameters Type Name Description FileAndType other Returns Type Description Boolean Implements IEquatable<T>.Equals(T) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Operators Equality(FileAndType, FileAndType) Declaration public static bool operator ==(FileAndType left, FileAndType right) Parameters Type Name Description FileAndType left FileAndType right Returns Type Description Boolean Inequality(FileAndType, FileAndType) Declaration public static bool operator !=(FileAndType left, FileAndType right) Parameters Type Name Description FileAndType left FileAndType right Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.SubCommands.MetadataMerger.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.MetadataMerger.html",
    "title": "Class MetadataMerger | DocFX website",
    "keywords": "Class MetadataMerger Inheritance Object MetadataMerger Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.SubCommands Assembly :docfx.dll Syntax public class MetadataMerger Fields PhaseName Declaration public const string PhaseName = \"Merge Metadata\" Field Value Type Description String Methods Merge(MetadataMergeParameters) Declaration public void Merge(MetadataMergeParameters parameters) Parameters Type Name Description MetadataMergeParameters parameters Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.SubCommands.OptionParserException.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.OptionParserException.html",
    "title": "Class OptionParserException | DocFX website",
    "keywords": "Class OptionParserException Inheritance Object Exception SystemException ArgumentException OptionParserException Inherited Members ArgumentException.GetObjectData(SerializationInfo, StreamingContext) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.SubCommands Assembly :docfx.dll Syntax public class OptionParserException : ArgumentException, _Exception, ISerializable Constructors OptionParserException() Declaration public OptionParserException() OptionParserException(String) Declaration public OptionParserException(string message) Parameters Type Name Description String message Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.SubCommands.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.html",
    "title": "Namespace Microsoft.DocAsCode.SubCommands | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.SubCommands Classes CommandOptionAttribute MetadataMergeParameters MetadataMerger OptionParserException"
  },
  "api/Microsoft.DocAsCode.VersionConfig.html": {
    "href": "api/Microsoft.DocAsCode.VersionConfig.html",
    "title": "Class VersionConfig | DocFX website",
    "keywords": "Class VersionConfig Inheritance Object VersionConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] public class VersionConfig Properties Destination Declaration [JsonProperty(\"dest\")] public string Destination { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ExtensibleMemberAttribute.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ExtensibleMemberAttribute.html",
    "title": "Class ExtensibleMemberAttribute | DocFX website",
    "keywords": "Class ExtensibleMemberAttribute Inheritance Object Attribute ExtensibleMemberAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class ExtensibleMemberAttribute : Attribute, _Attribute Constructors ExtensibleMemberAttribute() Declaration public ExtensibleMemberAttribute() ExtensibleMemberAttribute(String) Declaration public ExtensibleMemberAttribute(string prefix) Parameters Type Name Description String prefix Properties Prefix Declaration public string Prefix { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitArrayNodeDeserializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitArrayNodeDeserializer.html",
    "title": "Class EmitArrayNodeDeserializer | DocFX website",
    "keywords": "Class EmitArrayNodeDeserializer Inheritance Object EmitArrayNodeDeserializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.NodeDeserializers Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class EmitArrayNodeDeserializer : INodeDeserializer Explicit Interface Implementations INodeDeserializer.Deserialize(IParser, Type, Func<IParser, Type, Object>, out Object) Declaration bool INodeDeserializer.Deserialize(IParser reader, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value) Parameters Type Name Description YamlDotNet.Core.IParser reader Type expectedType Func < YamlDotNet.Core.IParser , Type , Object > nestedObjectDeserializer Object value Returns Type Description Boolean Implements YamlDotNet.Serialization.INodeDeserializer.Deserialize(YamlDotNet.Core.IParser, System.Type, System.Func<YamlDotNet.Core.IParser, System.Type, System.Object>, System.Object) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitGenericCollectionNodeDeserializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitGenericCollectionNodeDeserializer.html",
    "title": "Class EmitGenericCollectionNodeDeserializer | DocFX website",
    "keywords": "Class EmitGenericCollectionNodeDeserializer Inheritance Object EmitGenericCollectionNodeDeserializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.NodeDeserializers Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class EmitGenericCollectionNodeDeserializer : INodeDeserializer Constructors EmitGenericCollectionNodeDeserializer(IObjectFactory) Declaration public EmitGenericCollectionNodeDeserializer(IObjectFactory objectFactory) Parameters Type Name Description YamlDotNet.Serialization.IObjectFactory objectFactory Explicit Interface Implementations INodeDeserializer.Deserialize(IParser, Type, Func<IParser, Type, Object>, out Object) Declaration bool INodeDeserializer.Deserialize(IParser reader, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value) Parameters Type Name Description YamlDotNet.Core.IParser reader Type expectedType Func < YamlDotNet.Core.IParser , Type , Object > nestedObjectDeserializer Object value Returns Type Description Boolean Implements YamlDotNet.Serialization.INodeDeserializer.Deserialize(YamlDotNet.Core.IParser, System.Type, System.Func<YamlDotNet.Core.IParser, System.Type, System.Object>, System.Object) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitGenericDictionaryNodeDeserializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitGenericDictionaryNodeDeserializer.html",
    "title": "Class EmitGenericDictionaryNodeDeserializer | DocFX website",
    "keywords": "Class EmitGenericDictionaryNodeDeserializer Inheritance Object EmitGenericDictionaryNodeDeserializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.NodeDeserializers Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class EmitGenericDictionaryNodeDeserializer : INodeDeserializer Constructors EmitGenericDictionaryNodeDeserializer(IObjectFactory) Declaration public EmitGenericDictionaryNodeDeserializer(IObjectFactory objectFactory) Parameters Type Name Description YamlDotNet.Serialization.IObjectFactory objectFactory Explicit Interface Implementations INodeDeserializer.Deserialize(IParser, Type, Func<IParser, Type, Object>, out Object) Declaration bool INodeDeserializer.Deserialize(IParser reader, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value) Parameters Type Name Description YamlDotNet.Core.IParser reader Type expectedType Func < YamlDotNet.Core.IParser , Type , Object > nestedObjectDeserializer Object value Returns Type Description Boolean Implements YamlDotNet.Serialization.INodeDeserializer.Deserialize(YamlDotNet.Core.IParser, System.Type, System.Func<YamlDotNet.Core.IParser, System.Type, System.Object>, System.Object) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockToken.html",
    "title": "Class AzureHtmlMetadataBlockToken | DocFX website",
    "keywords": "Class AzureHtmlMetadataBlockToken Inheritance Object AzureHtmlMetadataBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureHtmlMetadataBlockToken : IMarkdownToken Constructors AzureHtmlMetadataBlockToken(IMarkdownRule, IMarkdownContext, IReadOnlyDictionary<String, String>, IReadOnlyDictionary<String, String>, SourceInfo) Declaration public AzureHtmlMetadataBlockToken(IMarkdownRule rule, IMarkdownContext context, IReadOnlyDictionary<string, string> properties, IReadOnlyDictionary<string, string> tags, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context IReadOnlyDictionary < String , String > properties IReadOnlyDictionary < String , String > tags SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Properties Declaration public IReadOnlyDictionary<string, string> Properties { get; set; } Property Value Type Description IReadOnlyDictionary < String , String > Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Tags Declaration public IReadOnlyDictionary<string, string> Tags { get; set; } Property Value Type Description IReadOnlyDictionary < String , String > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockRule.html",
    "title": "Class AzureIncludeBlockRule | DocFX website",
    "keywords": "Class AzureIncludeBlockRule Inheritance Object AzureIncludeBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeBlockRule : IMarkdownRule Properties AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBasicToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBasicToken.html",
    "title": "Class AzureMigrationIncludeBasicToken | DocFX website",
    "keywords": "Class AzureMigrationIncludeBasicToken Inheritance Object AzureMigrationIncludeBasicToken AzureMigrationIncludeBlockToken AzureMigrationIncludeInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public abstract class AzureMigrationIncludeBasicToken : IMarkdownToken Constructors AzureMigrationIncludeBasicToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration protected AzureMigrationIncludeBasicToken(IMarkdownRule rule, IMarkdownContext context, string name, string src, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String src String title SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Name Declaration public string Name { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Src Declaration public string Src { get; } Property Value Type Description String Title Declaration public string Title { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockToken.html",
    "title": "Class AzureVideoBlockToken | DocFX website",
    "keywords": "Class AzureVideoBlockToken Inheritance Object AzureVideoBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureVideoBlockToken : IMarkdownToken Constructors AzureVideoBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public AzureVideoBlockToken(IMarkdownRule rule, IMarkdownContext context, string videoId, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String videoId SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo VideoId Declaration public string VideoId { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.CompositeModelAttributeHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.CompositeModelAttributeHandler.html",
    "title": "Class CompositeModelAttributeHandler | DocFX website",
    "keywords": "Class CompositeModelAttributeHandler Inheritance Object CompositeModelAttributeHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class CompositeModelAttributeHandler : IModelAttributeHandler Constructors CompositeModelAttributeHandler(IModelAttributeHandler[]) Declaration public CompositeModelAttributeHandler(params IModelAttributeHandler[] handlers) Parameters Type Name Description IModelAttributeHandler [] handlers Methods Handle(Object, HandleModelAttributesContext) Declaration public object Handle(object obj, HandleModelAttributesContext context) Parameters Type Name Description Object obj HandleModelAttributesContext context Returns Type Description Object Implements IModelAttributeHandler.Handle(Object, HandleModelAttributesContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleModelAttributesContext.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleModelAttributesContext.html",
    "title": "Class HandleModelAttributesContext | DocFX website",
    "keywords": "Class HandleModelAttributesContext Inheritance Object HandleModelAttributesContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class HandleModelAttributesContext Properties ContainsPlaceholder Declaration public bool ContainsPlaceholder { get; set; } Property Value Type Description Boolean EnableContentPlaceholder Declaration public bool EnableContentPlaceholder { get; set; } Property Value Type Description Boolean FileAndType Declaration public FileAndType FileAndType { get; set; } Property Value Type Description FileAndType FileLinkSources Declaration public Dictionary<string, List<LinkSourceInfo>> FileLinkSources { get; set; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> Host Declaration public IHostService Host { get; set; } Property Value Type Description IHostService LinkToFiles Declaration public HashSet<string> LinkToFiles { get; set; } Property Value Type Description HashSet < String > LinkToUids Declaration public HashSet<string> LinkToUids { get; set; } Property Value Type Description HashSet < String > PlaceholderContent Declaration public string PlaceholderContent { get; set; } Property Value Type Description String SkipMarkup Declaration public bool SkipMarkup { get; set; } Property Value Type Description Boolean UidLinkSources Declaration public Dictionary<string, List<LinkSourceInfo>> UidLinkSources { get; set; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> Uids Declaration public List<UidDefinition> Uids { get; set; } Property Value Type Description List < UidDefinition > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.ReflectionHelper.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.ReflectionHelper.html",
    "title": "Class ReflectionHelper | DocFX website",
    "keywords": "Class ReflectionHelper Inheritance Object ReflectionHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public static class ReflectionHelper Methods CreateInstance(Type, Type[], Type[], Object[]) Declaration public static object CreateInstance(Type type, Type[] typeArguments, Type[] argumentTypes, object[] arguments) Parameters Type Name Description Type type Type [] typeArguments Type [] argumentTypes Object [] arguments Returns Type Description Object GetGenericType(Type, Type) Declaration public static Type GetGenericType(Type type, Type genericTypeDefinition) Parameters Type Name Description Type type Type genericTypeDefinition Returns Type Description Type GetGettableProperties(Type) Declaration public static List<PropertyInfo> GetGettableProperties(Type type) Parameters Type Name Description Type type Returns Type Description List < PropertyInfo > GetPropertyValue(Object, PropertyInfo) Declaration public static object GetPropertyValue(object instance, PropertyInfo prop) Parameters Type Name Description Object instance PropertyInfo prop Returns Type Description Object GetPublicProperties(Type) Declaration public static IEnumerable<PropertyInfo> GetPublicProperties(Type type) Parameters Type Name Description Type type Returns Type Description IEnumerable < PropertyInfo > GetSettableProperties(Type) Declaration public static List<PropertyInfo> GetSettableProperties(Type type) Parameters Type Name Description Type type Returns Type Description List < PropertyInfo > ImplementsGenericDefintion(Type, Type) Declaration public static bool ImplementsGenericDefintion(Type type, Type genericTypeDefinition) Parameters Type Name Description Type type Type genericTypeDefinition Returns Type Description Boolean IsDictionaryType(Type) Declaration public static bool IsDictionaryType(Type type) Parameters Type Name Description Type type Returns Type Description Boolean IsGenericType(Type, Type) Declaration public static bool IsGenericType(Type type, Type genericTypeDefinition) Parameters Type Name Description Type type Type genericTypeDefinition Returns Type Description Boolean IsIEnumerableType(Type) Declaration public static bool IsIEnumerableType(Type t) Parameters Type Name Description Type t Returns Type Description Boolean SetPropertyValue(Object, PropertyInfo, Object) Declaration public static void SetPropertyValue(object instance, PropertyInfo prop, object value) Parameters Type Name Description Object instance PropertyInfo prop Object value TryGetGenericType(Type, Type, out Type) Declaration public static bool TryGetGenericType(Type type, Type genericTypeDefinition, out Type genericType) Parameters Type Name Description Type type Type genericTypeDefinition Type genericType Returns Type Description Boolean"
  },
  "api/Microsoft.DocAsCode.Build.Engine.HtmlDocumentHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.HtmlDocumentHandler.html",
    "title": "Class HtmlDocumentHandler | DocFX website",
    "keywords": "Class HtmlDocumentHandler Inheritance Object HtmlDocumentHandler RemoveDebugInfo ValidateBookmark Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public abstract class HtmlDocumentHandler : IHtmlDocumentHandler Properties Context Declaration public HtmlPostProcessContext Context { get; } Property Value Type Description HtmlPostProcessContext Methods Handle(HtmlDocument, ManifestItem, String, String) Declaration public void Handle(HtmlDocument document, ManifestItem manifestItem, string inputFile, string outputFile) Parameters Type Name Description HtmlAgilityPack.HtmlDocument document ManifestItem manifestItem String inputFile String outputFile Implements IHtmlDocumentHandler.Handle(HtmlDocument, ManifestItem, String, String) HandleCore(HtmlDocument, ManifestItem, String, String) Declaration protected abstract void HandleCore(HtmlDocument document, ManifestItem manifestItem, string inputFile, string outputFile) Parameters Type Name Description HtmlAgilityPack.HtmlDocument document ManifestItem manifestItem String inputFile String outputFile LoadContext(HtmlPostProcessContext) Declaration public virtual void LoadContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context Implements IHtmlDocumentHandler.LoadContext(HtmlPostProcessContext) PostHandle(Manifest) Declaration public Manifest PostHandle(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest Implements IHtmlDocumentHandler.PostHandle(Manifest) PostHandleCore(Manifest) Declaration protected virtual Manifest PostHandleCore(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest PreHandle(Manifest) Declaration public Manifest PreHandle(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest Implements IHtmlDocumentHandler.PreHandle(Manifest) PreHandleCore(Manifest) Declaration protected virtual Manifest PreHandleCore(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest SaveContext(HtmlPostProcessContext) Declaration public virtual void SaveContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context Implements IHtmlDocumentHandler.SaveContext(HtmlPostProcessContext) SetContext(HtmlPostProcessContext) Declaration public void SetContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildVersionInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildVersionInfo.html",
    "title": "Class BuildVersionInfo | DocFX website",
    "keywords": "Class BuildVersionInfo Inheritance Object BuildVersionInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class BuildVersionInfo Properties Attributes deserialized attributes Declaration [JsonIgnore] public IDictionary<string, FileAttributeItem> Attributes { get; set; } Property Value Type Description IDictionary < String , FileAttributeItem > AttributesFile The file link for file attributes.(type is FileAttributes ). e.g. last modified time, md5. Declaration public string AttributesFile { get; set; } Property Value Type Description String BuildMessage deserialized build messages. Declaration [JsonIgnore] public BuildMessage BuildMessage { get; } Property Value Type Description BuildMessage BuildMessageFile The file link for the build message file (type is BuildMessage ). Declaration public string BuildMessageFile { get; set; } Property Value Type Description String BuildOutputs deserialized outputs Declaration [JsonIgnore] public BuildOutputs BuildOutputs { get; } Property Value Type Description BuildOutputs ConfigHash The hash info for configs. Include global metadata, file metadata. Declaration public string ConfigHash { get; set; } Property Value Type Description String Dependency deserialized dependency graph Declaration [JsonIgnore] public DependencyGraph Dependency { get; set; } Property Value Type Description DependencyGraph DependencyFile The file link for dependency (type is Load(TextReader) ). Declaration public string DependencyFile { get; set; } Property Value Type Description String FileMap deserialized filemap. Declaration [JsonIgnore] public IDictionary<string, FileMapItem> FileMap { get; } Property Value Type Description IDictionary < String , FileMapItem > FileMapFile The file link for the FileMap file. Declaration public string FileMapFile { get; set; } Property Value Type Description String Manifest deserialized manifestitems Declaration [JsonIgnore] public IEnumerable<ManifestItem> Manifest { get; set; } Property Value Type Description IEnumerable < ManifestItem > ManifestFile The file link for the manifest file(type is Manifest ). Declaration public string ManifestFile { get; set; } Property Value Type Description String OutputFile The file link for build outputs (type is BuildOutputs ). Declaration public string OutputFile { get; set; } Property Value Type Description String Processors The information for processors. Declaration public List<ProcessorInfo> Processors { get; } Property Value Type Description List < ProcessorInfo > TocRestructions deserialized Toc Restructions. Declaration [JsonIgnore] public IDictionary<string, List<TreeItemRestructure>> TocRestructions { get; } Property Value Type Description IDictionary < String , List < TreeItemRestructure >> TocRestructionsFile The file link for the TocRestructions file. Declaration public string TocRestructionsFile { get; set; } Property Value Type Description String VersionName The version name of documents. Declaration public string VersionName { get; set; } Property Value Type Description String XRefSpecMap deserialized xrefspecmap. Key is original file path from root. Value is XrefSpecs reported by the file. Declaration [JsonIgnore] public IDictionary<string, List<XRefSpec>> XRefSpecMap { get; } Property Value Type Description IDictionary < String , List < XRefSpec >> XRefSpecMapFile The file link for the XRefMap file(type is XRefMap ). Declaration public string XRefSpecMapFile { get; set; } Property Value Type Description String Methods SaveManifest(String) Declaration public void SaveManifest(string baseDir) Parameters Type Name Description String baseDir Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeItem.html",
    "title": "Class ChangeItem | DocFX website",
    "keywords": "Class ChangeItem Inheritance Object ChangeItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ChangeItem Properties FilePath Declaration public string FilePath { get; set; } Property Value Type Description String Kind Declaration public ChangeKindWithDependency Kind { get; set; } Property Value Type Description ChangeKindWithDependency Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ModelManifest.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ModelManifest.html",
    "title": "Class ModelManifest | DocFX website",
    "keywords": "Class ModelManifest Inheritance Object ModelManifest Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class ModelManifest Properties Models Declaration public OSPlatformSensitiveDictionary<List<ModelManifestItem>> Models { get; } Property Value Type Description OSPlatformSensitiveDictionary < List < ModelManifestItem >> Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ModelManifestItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ModelManifestItem.html",
    "title": "Class ModelManifestItem | DocFX website",
    "keywords": "Class ModelManifestItem Inheritance Object ModelManifestItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class ModelManifestItem Properties FilePath Declaration public string FilePath { get; set; } Property Value Type Description String SourceFilePath Declaration public string SourceFilePath { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.JintProcessorHelper.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.JintProcessorHelper.html",
    "title": "Class JintProcessorHelper | DocFX website",
    "keywords": "Class JintProcessorHelper Inheritance Object JintProcessorHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public static class JintProcessorHelper Methods ConvertJTokenToJsValue(JToken) Declaration public static JsValue ConvertJTokenToJsValue(JToken raw) Parameters Type Name Description Newtonsoft.Json.Linq.JToken raw Returns Type Description Jint.Native.JsValue ConvertStrongTypeToJsValue(Object) Declaration public static JsValue ConvertStrongTypeToJsValue(object raw) Parameters Type Name Description Object raw Returns Type Description Jint.Native.JsValue"
  },
  "api/Microsoft.DocAsCode.Build.Engine.JsonTokenTreeServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.JsonTokenTreeServiceProvider.html",
    "title": "Class JsonTokenTreeServiceProvider | DocFX website",
    "keywords": "Class JsonTokenTreeServiceProvider Inheritance Object JsonTokenTreeServiceProvider Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"jsonTokenTree\", typeof (IMarkdownServiceProvider))] public class JsonTokenTreeServiceProvider : IMarkdownServiceProvider Methods CreateMarkdownService(MarkdownServiceParameters) Declaration public IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService Implements IMarkdownServiceProvider.CreateMarkdownService(MarkdownServiceParameters) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMapDownloader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMapDownloader.html",
    "title": "Class XRefMapDownloader | DocFX website",
    "keywords": "Class XRefMapDownloader Inheritance Object XRefMapDownloader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefMapDownloader Constructors XRefMapDownloader(String, Int32) Declaration public XRefMapDownloader(string baseFolder = null, int maxParallelism = 16) Parameters Type Name Description String baseFolder Int32 maxParallelism Methods DownloadAsync(Uri) Download xref map file from uri (async). Declaration public Task<IXRefContainer> DownloadAsync(Uri uri) Parameters Type Name Description Uri uri The uri of xref map file. Returns Type Description Task < IXRefContainer > An instance of XRefMap . DownloadBySchemeAsync(Uri) Declaration protected virtual Task<IXRefContainer> DownloadBySchemeAsync(Uri uri) Parameters Type Name Description Uri uri Returns Type Description Task < IXRefContainer > Remarks Support scheme: http, https, ftp, file, embedded. DownloadFromLocal(Uri) Declaration protected static IXRefContainer DownloadFromLocal(Uri uri) Parameters Type Name Description Uri uri Returns Type Description IXRefContainer DownloadFromWebAsync(Uri) Declaration protected static Task<XRefMap> DownloadFromWebAsync(Uri uri) Parameters Type Name Description Uri uri Returns Type Description Task < XRefMap > UpdateHref(XRefMap, Uri) Declaration public static void UpdateHref(XRefMap map, Uri uri) Parameters Type Name Description XRefMap map Uri uri Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMapReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMapReader.html",
    "title": "Class XRefMapReader | DocFX website",
    "keywords": "Class XRefMapReader Inheritance Object XRefRedirectionReader XRefMapReader Inherited Members XRefRedirectionReader.Find(String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class XRefMapReader : XRefRedirectionReader, IXRefContainerReader Constructors XRefMapReader(String, Dictionary<String, IXRefContainer>) Declaration public XRefMapReader(string majorKey, Dictionary<string, IXRefContainer> maps) Parameters Type Name Description String majorKey Dictionary < String , IXRefContainer > maps Methods GetMap(String) Declaration protected override IXRefContainer GetMap(string name) Parameters Type Name Description String name Returns Type Description IXRefContainer Overrides XRefRedirectionReader.GetMap(String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiReferenceBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiReferenceBuildOutput.html",
    "title": "Class ApiReferenceBuildOutput | DocFX website",
    "keywords": "Class ApiReferenceBuildOutput Inheritance Object ApiReferenceBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiReferenceBuildOutput Properties AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ApiExceptionInfoBuildOutput> Exceptions { get; set; } Property Value Type Description List < ApiExceptionInfoBuildOutput > ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<string> ExtensionMethods { get; set; } Property Value Type Description List < String > FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public List<ApiLanguageValuePair> FullName { get; set; } Property Value Type Description List < ApiLanguageValuePair > Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<ApiNames> Implements { get; set; } Property Value Type Description List < ApiNames > Index Declaration [YamlMember(Alias = \"index\")] [JsonProperty(\"index\")] public int ? Index { get; set; } Property Value Type Description Nullable < Int32 > Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<ApiReferenceBuildOutput> Inheritance { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<string> InheritedMembers { get; set; } Property Value Type Description List < String > IsExplicitInterfaceImplementation Declaration [YamlMember(Alias = \"isEii\")] [JsonProperty(\"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean IsExternal Declaration [JsonProperty(\"isExternal\")] [YamlMember(Alias = \"isExternal\")] public bool ? IsExternal { get; set; } Property Value Type Description Nullable < Boolean > Level Declaration [YamlMember(Alias = \"level\")] [JsonProperty(\"level\")] public int Level { get; } Property Value Type Description Int32 Metadata Declaration [ExtensibleMember] [JsonIgnore] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Modifiers Declaration [ExtensibleMember(\"modifiers.\")] [JsonIgnore] public SortedList<string, List<string>> Modifiers { get; set; } Property Value Type Description SortedList < String , List < String >> Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public List<ApiLanguageValuePair> Name { get; set; } Property Value Type Description List < ApiLanguageValuePair > NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public string NamespaceName { get; set; } Property Value Type Description String NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public List<ApiLanguageValuePair> NameWithType { get; set; } Property Value Type Description List < ApiLanguageValuePair > Overload Declaration [YamlMember(Alias = \"overload\")] [JsonProperty(\"overload\")] public ApiNames Overload { get; set; } Property Value Type Description ApiNames Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public ApiNames Overridden { get; set; } Property Value Type Description ApiNames Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<ApiLinkInfoBuildOutput> SeeAlsos { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<ApiLinkInfoBuildOutput> Sees { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail Spec Declaration [YamlMember(Alias = \"specName\")] [JsonProperty(\"specName\")] public List<ApiLanguageValuePair> Spec { get; set; } Property Value Type Description List < ApiLanguageValuePair > Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public ApiSyntaxBuildOutput Syntax { get; set; } Property Value Type Description ApiSyntaxBuildOutput Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages FromModel(ReferenceViewModel, String[]) Declaration public static ApiReferenceBuildOutput FromModel(ReferenceViewModel vm, string[] supportedLanguages) Parameters Type Name Description ReferenceViewModel vm String [] supportedLanguages Returns Type Description ApiReferenceBuildOutput FromModel(ItemViewModel) Declaration public static ApiReferenceBuildOutput FromModel(ItemViewModel vm) Parameters Type Name Description ItemViewModel vm Returns Type Description ApiReferenceBuildOutput FromUid(String) Declaration public static ApiReferenceBuildOutput FromUid(string uid) Parameters Type Name Description String uid Returns Type Description ApiReferenceBuildOutput GetSpecNames(String, String[], SortedList<String, List<SpecViewModel>>) Declaration public static List<ApiLanguageValuePair> GetSpecNames(string xref, string[] supportedLanguages, SortedList<string, List<SpecViewModel>> specs = null) Parameters Type Name Description String xref String [] supportedLanguages SortedList < String , List < SpecViewModel >> specs Returns Type Description List < ApiLanguageValuePair > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiSyntaxBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiSyntaxBuildOutput.html",
    "title": "Class ApiSyntaxBuildOutput | DocFX website",
    "keywords": "Class ApiSyntaxBuildOutput Inheritance Object ApiSyntaxBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiSyntaxBuildOutput Properties Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public List<ApiLanguageValuePair> Content { get; set; } Property Value Type Description List < ApiLanguageValuePair > Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ApiParameterBuildOutput> Parameters { get; set; } Property Value Type Description List < ApiParameterBuildOutput > Return Declaration [YamlMember(Alias = \"return\")] [JsonProperty(\"return\")] public ApiParameterBuildOutput Return { get; set; } Property Value Type Description ApiParameterBuildOutput TypeParameters Declaration [YamlMember(Alias = \"typeParameters\")] [JsonProperty(\"typeParameters\")] public List<ApiParameterBuildOutput> TypeParameters { get; set; } Property Value Type Description List < ApiParameterBuildOutput > Methods Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages FromModel(SyntaxDetailViewModel, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiSyntaxBuildOutput FromModel(SyntaxDetailViewModel model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description SyntaxDetailViewModel model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiSyntaxBuildOutput FromModel(SyntaxDetailViewModel, String[]) Declaration public static ApiSyntaxBuildOutput FromModel(SyntaxDetailViewModel model, string[] supportedLanguages) Parameters Type Name Description SyntaxDetailViewModel model String [] supportedLanguages Returns Type Description ApiSyntaxBuildOutput Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.OperationObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.OperationObject.html",
    "title": "Class OperationObject | DocFX website",
    "keywords": "Class OperationObject Inheritance Object OperationObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class OperationObject Properties Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > OperationId Unique string used to identify the operation. The id MUST be unique among all operations described in the API. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is recommended to follow common programming naming conventions. Declaration [YamlMember(Alias = \"operationId\")] [JsonProperty(\"operationId\")] public string OperationId { get; set; } Property Value Type Description String Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ParameterObject> Parameters { get; set; } Property Value Type Description List < ParameterObject > Responses Key: default or HttpStatusCode Declaration [YamlMember(Alias = \"responses\")] [JsonProperty(\"responses\")] public Dictionary<string, ResponseObject> Responses { get; set; } Property Value Type Description Dictionary < String , ResponseObject > Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ParameterObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ParameterObject.html",
    "title": "Class ParameterObject | DocFX website",
    "keywords": "Class ParameterObject Inheritance Object ParameterObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class ParameterObject Properties Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.CompositeStream.html": {
    "href": "api/Microsoft.DocAsCode.Common.CompositeStream.html",
    "title": "Class CompositeStream | DocFX website",
    "keywords": "Class CompositeStream Write-only composite stream. Inheritance Object MarshalByRefObject Stream CompositeStream Inherited Members Stream.Null Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, Int32) Stream.CopyTo(Stream) Stream.CopyTo(Stream, Int32) Stream.Dispose() Stream.Dispose(Boolean) Stream.FlushAsync() Stream.CreateWaitHandle() Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(Byte[], Int32, Int32) Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(Byte[], Int32, Int32) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.MemberwiseClone(Boolean) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class CompositeStream : Stream, IDisposable Constructors CompositeStream(IEnumerable<Stream>) Declaration public CompositeStream(IEnumerable<Stream> streams) Parameters Type Name Description IEnumerable < Stream > streams CompositeStream(Stream[]) Declaration public CompositeStream(params Stream[] streams) Parameters Type Name Description Stream [] streams Properties CanRead Declaration public override bool CanRead { get; } Property Value Type Description Boolean Overrides Stream.CanRead CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description Boolean Overrides Stream.CanSeek CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description Boolean Overrides Stream.CanWrite Length Declaration public override long Length { get; } Property Value Type Description Int64 Overrides Stream.Length Position Declaration public override long Position { get; set; } Property Value Type Description Int64 Overrides Stream.Position Methods Close() Declaration public override void Close() Overrides Stream.Close() CopyToAsync(Stream, Int32, CancellationToken) Declaration public override Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken) Parameters Type Name Description Stream destination Int32 bufferSize CancellationToken cancellationToken Returns Type Description Task Overrides Stream.CopyToAsync(Stream, Int32, CancellationToken) Flush() Declaration public override void Flush() Overrides Stream.Flush() FlushAsync(CancellationToken) Declaration public override Task FlushAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Overrides Stream.FlushAsync(CancellationToken) Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Returns Type Description Int32 Overrides Stream.Read(Byte[], Int32, Int32) ReadAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count CancellationToken cancellationToken Returns Type Description Task < Int32 > Overrides Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken) ReadByte() Declaration public override int ReadByte() Returns Type Description Int32 Overrides Stream.ReadByte() Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description Int64 offset SeekOrigin origin Returns Type Description Int64 Overrides Stream.Seek(Int64, SeekOrigin) SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name Description Int64 value Overrides Stream.SetLength(Int64) Write(Byte[], Int32, Int32) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Overrides Stream.Write(Byte[], Int32, Int32) WriteAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count CancellationToken cancellationToken Returns Type Description Task Overrides Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken) WriteByte(Byte) Declaration public override void WriteByte(byte value) Parameters Type Name Description Byte value Overrides Stream.WriteByte(Byte) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.CompositionUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.CompositionUtility.html",
    "title": "Class CompositionUtility | DocFX website",
    "keywords": "Class CompositionUtility Inheritance Object CompositionUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public static class CompositionUtility Methods GetContainer(IEnumerable<Assembly>) Declaration public static CompositionHost GetContainer(IEnumerable<Assembly> assemblies) Parameters Type Name Description IEnumerable < Assembly > assemblies Returns Type Description System.Composition.Hosting.CompositionHost GetExport(CompositionHost, Type, String) Declaration public static object GetExport(CompositionHost container, Type type, string name) Parameters Type Name Description System.Composition.Hosting.CompositionHost container Type type String name Returns Type Description Object GetExport<T>(CompositionHost, String) Declaration public static T GetExport<T>(CompositionHost container, string name)where T : class Parameters Type Name Description System.Composition.Hosting.CompositionHost container String name Returns Type Description T Type Parameters Name Description T"
  },
  "api/Microsoft.DocAsCode.Common.ConsoleUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.ConsoleUtility.html",
    "title": "Class ConsoleUtility | DocFX website",
    "keywords": "Class ConsoleUtility Inheritance Object ConsoleUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class ConsoleUtility Methods Write(String, ConsoleColor) Declaration public static void Write(string message, ConsoleColor color) Parameters Type Name Description String message ConsoleColor color WriteLine(String, ConsoleColor) Declaration public static void WriteLine(string message, ConsoleColor color) Parameters Type Name Description String message ConsoleColor color"
  },
  "api/Microsoft.DocAsCode.Common.ConvertToObjectHelper.html": {
    "href": "api/Microsoft.DocAsCode.Common.ConvertToObjectHelper.html",
    "title": "Class ConvertToObjectHelper | DocFX website",
    "keywords": "Class ConvertToObjectHelper Inheritance Object ConvertToObjectHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class ConvertToObjectHelper Methods ConvertExpandoObjectToObject(Object) Declaration public static object ConvertExpandoObjectToObject(object raw) Parameters Type Name Description Object raw Returns Type Description Object ConvertJObjectToObject(Object) Declaration public static object ConvertJObjectToObject(object raw) Parameters Type Name Description Object raw Returns Type Description Object ConvertStrongTypeToJObject(Object) Declaration public static object ConvertStrongTypeToJObject(object raw) Parameters Type Name Description Object raw Returns Type Description Object ConvertStrongTypeToObject(Object) Declaration public static object ConvertStrongTypeToObject(object raw) Parameters Type Name Description Object raw Returns Type Description Object"
  },
  "api/Microsoft.DocAsCode.Common.Git.GitException.html": {
    "href": "api/Microsoft.DocAsCode.Common.Git.GitException.html",
    "title": "Class GitException | DocFX website",
    "keywords": "Class GitException Inheritance Object Exception GitException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.Git Assembly :Microsoft.DocAsCode.Common.dll Syntax [Serializable] public class GitException : Exception, ISerializable, _Exception Constructors GitException() Declaration public GitException() GitException(SerializationInfo, StreamingContext) Declaration protected GitException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context GitException(String) Declaration public GitException(string message) Parameters Type Name Description String message GitException(String, Exception) Declaration public GitException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.Git.GitRepoInfo.html": {
    "href": "api/Microsoft.DocAsCode.Common.Git.GitRepoInfo.html",
    "title": "Class GitRepoInfo | DocFX website",
    "keywords": "Class GitRepoInfo Inheritance Object GitRepoInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.Git Assembly :Microsoft.DocAsCode.Common.dll Syntax [Serializable] public class GitRepoInfo Properties LocalBranch Declaration public string LocalBranch { get; set; } Property Value Type Description String LocalHeadCommitId Declaration public string LocalHeadCommitId { get; set; } Property Value Type Description String RemoteBranch Declaration public string RemoteBranch { get; set; } Property Value Type Description String RemoteHeadCommitId Declaration public string RemoteHeadCommitId { get; set; } Property Value Type Description String RemoteOriginUrl Declaration public string RemoteOriginUrl { get; set; } Property Value Type Description String RepoRootPath Declaration public string RepoRootPath { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.Git.GitUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.Git.GitUtility.html",
    "title": "Class GitUtility | DocFX website",
    "keywords": "Class GitUtility Inheritance Object GitUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.Git Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class GitUtility Methods GetFileDetail(String) Declaration public static GitDetail GetFileDetail(string filePath) Parameters Type Name Description String filePath Returns Type Description GitDetail TryGetFileDetail(String) Declaration public static GitDetail TryGetFileDetail(string filePath) Parameters Type Name Description String filePath Returns Type Description GitDetail"
  },
  "api/Microsoft.DocAsCode.Common.Git.RepoType.html": {
    "href": "api/Microsoft.DocAsCode.Common.Git.RepoType.html",
    "title": "Enum RepoType | DocFX website",
    "keywords": "Enum RepoType Namespace :Microsoft.DocAsCode.Common.Git Assembly :Microsoft.DocAsCode.Common.dll Syntax [Serializable] public enum RepoType Fields Name Description GitHub Unknown Vso Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ManifestFileWriter.html": {
    "href": "api/Microsoft.DocAsCode.Common.ManifestFileWriter.html",
    "title": "Class ManifestFileWriter | DocFX website",
    "keywords": "Class ManifestFileWriter Inheritance Object FileWriterBase ManifestFileWriter Inherited Members FileWriterBase.OutputFolder FileWriterBase.ExpandedOutputFolder FileWriterBase.EnsureFolder(String) FileWriterBase.GetRandomEntry() FileWriterBase.CreateRandomFileStream() FileWriterBase.RetryIO<T>(Func<T>) FileWriterBase.RetryIO(Action) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ManifestFileWriter : FileWriterBase, IFileWriter Constructors ManifestFileWriter(Manifest, String, String) Declaration public ManifestFileWriter(Manifest manifest, string manifestFolder, string outputFolder) Parameters Type Name Description Manifest manifest String manifestFolder String outputFolder Properties Manifest Declaration public Manifest Manifest { get; } Property Value Type Description Manifest ManifestFolder Declaration public string ManifestFolder { get; } Property Value Type Description String Methods Copy(PathMapping, RelativePath) Declaration public override void Copy(PathMapping sourceFileName, RelativePath destFileName) Parameters Type Name Description PathMapping sourceFileName RelativePath destFileName Overrides FileWriterBase.Copy(PathMapping, RelativePath) Create(RelativePath) Declaration public override Stream Create(RelativePath file) Parameters Type Name Description RelativePath file Returns Type Description Stream Overrides FileWriterBase.Create(RelativePath) CreateReader() Declaration public override IFileReader CreateReader() Returns Type Description IFileReader Overrides FileWriterBase.CreateReader() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ManifestUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.ManifestUtility.html",
    "title": "Class ManifestUtility | DocFX website",
    "keywords": "Class ManifestUtility Inheritance Object ManifestUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public static class ManifestUtility Methods MergeManifest(List<Manifest>) Declaration public static Manifest MergeManifest(List<Manifest> manifests) Parameters Type Name Description List < Manifest > manifests Returns Type Description Manifest RemoveDuplicateOutputFiles(ManifestItemCollection) Declaration public static void RemoveDuplicateOutputFiles(ManifestItemCollection manifestItems) Parameters Type Name Description ManifestItemCollection manifestItems"
  },
  "api/Microsoft.DocAsCode.Common.PathMapping.html": {
    "href": "api/Microsoft.DocAsCode.Common.PathMapping.html",
    "title": "Struct PathMapping | DocFX website",
    "keywords": "Struct PathMapping Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public struct PathMapping Constructors PathMapping(RelativePath, String) Declaration public PathMapping(RelativePath logicalPath, string physicalPath) Parameters Type Name Description RelativePath logicalPath String physicalPath Properties AllowMoveOut Declaration public bool AllowMoveOut { get; set; } Property Value Type Description Boolean IsFolder Declaration public bool IsFolder { get; } Property Value Type Description Boolean LogicalPath Declaration public RelativePath LogicalPath { get; } Property Value Type Description RelativePath PhysicalPath Declaration public string PhysicalPath { get; } Property Value Type Description String Properties Declaration public ImmutableDictionary<string, string> Properties { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , String > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.PathUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.PathUtility.html",
    "title": "Class PathUtility | DocFX website",
    "keywords": "Class PathUtility Inheritance Object PathUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class PathUtility Fields ListFileExtension Declaration public const string ListFileExtension = \".list\" Field Value Type Description String Methods CopyFile(String, String, Boolean) Declaration public static void CopyFile(string path, string targetPath, bool overwrite = false) Parameters Type Name Description String path String targetPath Boolean overwrite CopyFilesToFolder(IEnumerable<String>, String, String, Boolean, Action<String>, Func<String, Boolean>) Declaration public static IEnumerable<string> CopyFilesToFolder(this IEnumerable<string> files, string sourceFolder, string destinationFolder, bool overwrite, Action<string> messageHandler, Func<string, bool> errorHandler) Parameters Type Name Description IEnumerable < String > files String sourceFolder String destinationFolder Boolean overwrite Action < String > messageHandler Func < String , Boolean > errorHandler Returns Type Description IEnumerable < String > FormatPath(String, UriKind, String) Also change backslash to forward slash Declaration public static string FormatPath(this string path, UriKind kind, string basePath = null) Parameters Type Name Description String path UriKind kind String basePath Returns Type Description String GetFileListFromFile(String) Declaration public static List<string> GetFileListFromFile(string filePath) Parameters Type Name Description String filePath Returns Type Description List < String > GetFullPath(String, String) Declaration public static string GetFullPath(string folder, string href) Parameters Type Name Description String folder String href Returns Type Description String IsDirectory(String) Declaration public static bool IsDirectory(string path) Parameters Type Name Description String path Returns Type Description Boolean IsPathCaseInsensitive() Declaration public static bool IsPathCaseInsensitive() Returns Type Description Boolean IsPathUnderSpecificFolder(String, String) Declaration public static bool IsPathUnderSpecificFolder(string path, string folder) Parameters Type Name Description String path String folder Returns Type Description Boolean IsRelativePath(String) Declaration public static bool IsRelativePath(string path) Parameters Type Name Description String path Returns Type Description Boolean IsVaildFilePath(String) http://stackoverflow.com/questions/422090/in-c-sharp-check-that-filename-is-possibly-valid-not-that-it-exists Declaration public static bool IsVaildFilePath(string path) Parameters Type Name Description String path Returns Type Description Boolean MakeRelativePath(String, String) Creates a relative path from one file or folder to another. Declaration public static string MakeRelativePath(string basePath, string absolutePath) Parameters Type Name Description String basePath Contains the directory that defines the start of the relative path. String absolutePath Contains the path that defines the endpoint of the relative path. Returns Type Description String The relative path from the start directory to the end path. Exceptions Type Condition ArgumentNullException UriFormatException InvalidOperationException NormalizePath(String) Declaration public static string NormalizePath(string path) Parameters Type Name Description String path Returns Type Description String SaveFileListToFile(List<String>, String) Declaration public static void SaveFileListToFile(List<string> fileList, string filePath) Parameters Type Name Description List < String > fileList String filePath ToCleanUrlFileName(String, String) Declaration public static string ToCleanUrlFileName(this string input, string replacement = \"-\") Parameters Type Name Description String input String replacement Returns Type Description String ToValidFilePath(String, Char) Declaration public static string ToValidFilePath(this string input, char replacement = '_') Parameters Type Name Description String input Char replacement Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.ExtensionMemberPrefix.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.ExtensionMemberPrefix.html",
    "title": "Class Constants.ExtensionMemberPrefix | DocFX website",
    "keywords": "Class Constants.ExtensionMemberPrefix Inheritance Object Constants.ExtensionMemberPrefix Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class ExtensionMemberPrefix Fields Content Declaration public const string Content = \"content.\" Field Value Type Description String FullName Declaration public const string FullName = \"fullName.\" Field Value Type Description String Modifiers Declaration public const string Modifiers = \"modifiers.\" Field Value Type Description String Name Declaration public const string Name = \"name.\" Field Value Type Description String NameWithType Declaration public const string NameWithType = \"nameWithType.\" Field Value Type Description String Spec Declaration public const string Spec = \"spec.\" Field Value Type Description String"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.MetadataName.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.MetadataName.html",
    "title": "Class Constants.MetadataName | DocFX website",
    "keywords": "Class Constants.MetadataName Inheritance Object Constants.MetadataName Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class MetadataName Fields Version Declaration public const string Version = \"version\" Field Value Type Description String"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.PropertyName.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.PropertyName.html",
    "title": "Class Constants.PropertyName | DocFX website",
    "keywords": "Class Constants.PropertyName TODO: add other property name const Inheritance Object Constants.PropertyName Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class PropertyName Fields CommentId Declaration public const string CommentId = \"commentId\" Field Value Type Description String Conceptual Declaration public const string Conceptual = \"conceptual\" Field Value Type Description String Content Declaration public const string Content = \"content\" Field Value Type Description String DisplayName Declaration public const string DisplayName = \"displayName\" Field Value Type Description String Documentation Declaration public const string Documentation = \"documentation\" Field Value Type Description String DocumentType Declaration public const string DocumentType = \"documentType\" Field Value Type Description String FullName Declaration public const string FullName = \"fullName\" Field Value Type Description String Href Declaration public const string Href = \"href\" Field Value Type Description String Id Declaration public const string Id = \"id\" Field Value Type Description String Name Declaration public const string Name = \"name\" Field Value Type Description String NameWithType Declaration public const string NameWithType = \"nameWithType\" Field Value Type Description String OutputFileName Declaration public const string OutputFileName = \"outputFileName\" Field Value Type Description String Path Declaration public const string Path = \"path\" Field Value Type Description String Platform Declaration public const string Platform = \"platform\" Field Value Type Description String Source Declaration public const string Source = \"source\" Field Value Type Description String SystemKeys Declaration public const string SystemKeys = \"_systemKeys\" Field Value Type Description String Title Declaration public const string Title = \"title\" Field Value Type Description String TocHref Declaration public const string TocHref = \"tocHref\" Field Value Type Description String TopicHref Declaration public const string TopicHref = \"topicHref\" Field Value Type Description String TopicUid Declaration public const string TopicUid = \"topicUid\" Field Value Type Description String Type Declaration public const string Type = \"type\" Field Value Type Description String Uid Declaration public const string Uid = \"uid\" Field Value Type Description String"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.html",
    "title": "Class Constants | DocFX website",
    "keywords": "Class Constants Inheritance Object Constants Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class Constants Fields ContentPlaceholder Declaration public const string ContentPlaceholder = \"*content\" Field Value Type Description String PrefixSeparator Declaration public const string PrefixSeparator = \".\" Field Value Type Description String YamlExtension Declaration public const string YamlExtension = \".yml\" Field Value Type Description String"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.html",
    "title": "Namespace Microsoft.DocAsCode.DataContracts.ManagedReference | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.DataContracts.ManagedReference Classes ApiParameter ApiReferenceViewModel ArgumentInfo AttributeInfo ExceptionInfo ItemViewModel LinkInfo NamedArgumentInfo PageViewModel SyntaxDetailViewModel Enums LinkType MemberType SyntaxLanguage"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiChildItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiChildItemViewModel.html",
    "title": "Class RestApiChildItemViewModel | DocFX website",
    "keywords": "Class RestApiChildItemViewModel Inheritance Object RestApiItemViewModelBase RestApiChildItemViewModel Inherited Members RestApiItemViewModelBase.Uid RestApiItemViewModelBase.HtmlId RestApiItemViewModelBase.Name RestApiItemViewModelBase.Conceptual RestApiItemViewModelBase.Description RestApiItemViewModelBase.Remarks RestApiItemViewModelBase.Summary RestApiItemViewModelBase.Documentation RestApiItemViewModelBase.Metadata Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiChildItemViewModel : RestApiItemViewModelBase, IOverwriteDocumentViewModel Properties OperationId Declaration [YamlMember(Alias = \"operationId\")] [JsonProperty(\"operationId\")] public string OperationId { get; set; } Property Value Type Description String OperationName operation name, for example get, put, post, delete, options, head and patch. Declaration [YamlMember(Alias = \"operation\")] [JsonProperty(\"operation\")] public string OperationName { get; set; } Property Value Type Description String Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<RestApiParameterViewModel> Parameters { get; set; } Property Value Type Description List < RestApiParameterViewModel > Path Declaration [YamlMember(Alias = \"path\")] [JsonProperty(\"path\")] public string Path { get; set; } Property Value Type Description String Responses Declaration [YamlMember(Alias = \"responses\")] [JsonProperty(\"responses\")] public List<RestApiResponseViewModel> Responses { get; set; } Property Value Type Description List < RestApiResponseViewModel > Tags Declaration [YamlMember(Alias = \"tags\")] [JsonProperty(\"tags\")] public List<string> Tags { get; set; } Property Value Type Description List < String > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiItemViewModelBase.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiItemViewModelBase.html",
    "title": "Class RestApiItemViewModelBase | DocFX website",
    "keywords": "Class RestApiItemViewModelBase Inheritance Object RestApiItemViewModelBase RestApiChildItemViewModel RestApiRootItemViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiItemViewModelBase : IOverwriteDocumentViewModel Properties Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Conceptual Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] [MergeOption(MergeOption.Ignore)] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail Implements IOverwriteDocumentViewModel.Documentation HtmlId Declaration [YamlMember(Alias = \"htmlId\")] [JsonProperty(\"htmlId\")] [MergeOption(MergeOption.Ignore)] public string HtmlId { get; set; } Property Value Type Description String Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] [MergeOption(MergeOption.MergeKey)] public string Uid { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Uid Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiParameterViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiParameterViewModel.html",
    "title": "Class RestApiParameterViewModel | DocFX website",
    "keywords": "Class RestApiParameterViewModel Inheritance Object RestApiParameterViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiParameterViewModel Properties Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] [MergeOption(MergeOption.MergeKey)] public string Name { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineRule.html",
    "title": "Class DfmIncludeInlineRule | DocFX website",
    "keywords": "Class DfmIncludeInlineRule Inheritance Object DfmIncludeInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeInlineRule : IMarkdownRule Properties Include Declaration public virtual Regex Include { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineToken.html",
    "title": "Class DfmIncludeInlineToken | DocFX website",
    "keywords": "Class DfmIncludeInlineToken Inheritance Object DfmIncludeInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeInlineToken : IMarkdownToken Constructors DfmIncludeInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, String, SourceInfo) Declaration public DfmIncludeInlineToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title String raw SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Name Declaration public string Name { get; } Property Value Type Description String Raw Declaration public string Raw { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Src Declaration public string Src { get; } Property Value Type Description String Title Declaration public string Title { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmJsonTokenTreeRender.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmJsonTokenTreeRender.html",
    "title": "Class DfmJsonTokenTreeRender | DocFX website",
    "keywords": "Class DfmJsonTokenTreeRender Inheritance Object JsonTokenTreeRenderer DfmJsonTokenTreeRender Inherited Members JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownNewLineBlockToken, MarkdownBlockContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownCodeBlockToken, MarkdownBlockContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownListItemBlockToken) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownTextToken, MarkdownBlockContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownEscapeInlineToken, MarkdownInlineContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownCodeInlineToken, MarkdownInlineContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownTagInlineToken, MarkdownInlineContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownBrInlineToken, MarkdownInlineContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownTextToken, MarkdownInlineContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownIgnoreToken, IMarkdownContext) JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownRawToken, IMarkdownContext) JsonTokenTreeRenderer.Insert(IMarkdownToken, StringBuffer, StringBuffer) JsonTokenTreeRenderer.Insert(Int32, Int32, StringBuffer, StringBuffer) JsonTokenTreeRenderer.Escape(String) JsonTokenTreeRenderer.ExposeTokenName(IMarkdownToken) JsonTokenTreeRenderer.TrimStringStart(String, String) JsonTokenTreeRenderer.TrimStringEnd(String, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmJsonTokenTreeRender : JsonTokenTreeRenderer Methods Render(IMarkdownRenderer, DfmFencesBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmFencesBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmIncludeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmIncludeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmIncludeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmIncludeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmNoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmNoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmVideoBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmVideoBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmXrefInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmXrefInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmXrefInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmYamlHeaderBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmYamlHeaderBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public override StringBuffer Render(IMarkdownRenderer renderer, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Overrides JsonTokenTreeRenderer.Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmMarkdownRenderer.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmMarkdownRenderer.html",
    "title": "Class DfmMarkdownRenderer | DocFX website",
    "keywords": "Class DfmMarkdownRenderer Inheritance Object MarkdownRenderer DfmMarkdownRenderer AzureMarkdownRenderer Inherited Members MarkdownRenderer.Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownListItemBlockToken, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmMarkdownRenderer : MarkdownRenderer Methods Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmIncludeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmIncludeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmIncludeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render DfmIncludeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmNoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmNoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmSectionBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmSectionBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmSectionBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmVideoBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmVideoBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmYamlHeaderBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmYamlHeaderBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.LineRangeBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.LineRangeBlockPathQueryOption.html",
    "title": "Class LineRangeBlockPathQueryOption | DocFX website",
    "keywords": "Class LineRangeBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption LineRangeBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class LineRangeBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Properties EndLine Declaration public int ? EndLine { get; set; } Property Value Type Description Nullable < Int32 > StartLine Declaration public int ? StartLine { get; set; } Property Value Type Description Nullable < Int32 > Methods GetQueryLines(String[]) Declaration public override IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[]) ValidateAndPrepare(String[], DfmFencesToken) Declaration public override bool ValidateAndPrepare(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description Boolean Overrides DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesToken) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownMetadataValidationRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownMetadataValidationRule.html",
    "title": "Class MarkdownMetadataValidationRule | DocFX website",
    "keywords": "Class MarkdownMetadataValidationRule Inheritance Object MarkdownMetadataValidationRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownMetadataValidationRule Properties ContractName The contract name of rule. Declaration [JsonProperty(\"contractName\", Required = Required.Always)] public string ContractName { get; set; } Property Value Type Description String Disable Whether to disable this rule by default. Declaration [JsonProperty(\"disable\")] public bool Disable { get; set; } Property Value Type Description Boolean Operators Explicit(String to MarkdownMetadataValidationRule) Declaration public static explicit operator MarkdownMetadataValidationRule(string contractName) Parameters Type Name Description String contractName Returns Type Description MarkdownMetadataValidationRule Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownSytleConfig.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownSytleConfig.html",
    "title": "Class MarkdownSytleConfig | DocFX website",
    "keywords": "Class MarkdownSytleConfig Inheritance Object MarkdownSytleConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownSytleConfig Fields MarkdownStyleFileName Declaration public const string MarkdownStyleFileName = \"md.style\" Field Value Type Description String Properties MetadataRules Declaration [JsonProperty(\"metadataRules\")] public MarkdownMetadataValidationRule[] MetadataRules { get; set; } Property Value Type Description MarkdownMetadataValidationRule [] Rules Declaration [JsonProperty(\"rules\")] public MarkdownValidationRule[] Rules { get; set; } Property Value Type Description MarkdownValidationRule [] Settings Declaration [JsonProperty(\"settings\")] public MarkdownValidationSetting[] Settings { get; set; } Property Value Type Description MarkdownValidationSetting [] TagRules Declaration [JsonProperty(\"tagRules\")] public MarkdownTagValidationRule[] TagRules { get; set; } Property Value Type Description MarkdownTagValidationRule [] Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownSytleDefinition.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownSytleDefinition.html",
    "title": "Class MarkdownSytleDefinition | DocFX website",
    "keywords": "Class MarkdownSytleDefinition Inheritance Object MarkdownSytleDefinition Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownSytleDefinition Fields MarkdownStyleDefinitionFilePostfix Declaration public const string MarkdownStyleDefinitionFilePostfix = \".md.style\" Field Value Type Description String MarkdownStyleDefinitionFolderName Declaration public const string MarkdownStyleDefinitionFolderName = \"md.styles\" Field Value Type Description String Properties MetadataRules Declaration [JsonProperty(\"metadataRules\")] public Dictionary<string, MarkdownMetadataValidationRule> MetadataRules { get; set; } Property Value Type Description Dictionary < String , MarkdownMetadataValidationRule > Rules Declaration [JsonProperty(\"rules\")] public Dictionary<string, MarkdownValidationRule> Rules { get; set; } Property Value Type Description Dictionary < String , MarkdownValidationRule > TagRules Declaration [JsonProperty(\"tagRules\")] public Dictionary<string, MarkdownTagValidationRule> TagRules { get; set; } Property Value Type Description Dictionary < String , MarkdownTagValidationRule > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.ListWithStringFallback.html": {
    "href": "api/Microsoft.DocAsCode.ListWithStringFallback.html",
    "title": "Class ListWithStringFallback | DocFX website",
    "keywords": "Class ListWithStringFallback Inheritance Object List < String > ListWithStringFallback Inherited Members System.Collections.Generic.List<System.String>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.String>.System.Collections.IList.set_Item(System.Int32, System.Object) List<String>.Add(String) List<String>.IList.Add(Object) List<String>.AddRange(IEnumerable<String>) List<String>.AsReadOnly() List<String>.BinarySearch(Int32, Int32, String, IComparer<String>) List<String>.BinarySearch(String) List<String>.BinarySearch(String, IComparer<String>) List<String>.Clear() List<String>.Contains(String) List<String>.IList.Contains(Object) List<String>.ConvertAll<TOutput>(Converter<String, TOutput>) List<String>.CopyTo(String[]) List<String>.ICollection.CopyTo(Array, Int32) List<String>.CopyTo(Int32, String[], Int32, Int32) List<String>.CopyTo(String[], Int32) List<String>.Exists(Predicate<String>) List<String>.Find(Predicate<String>) List<String>.FindAll(Predicate<String>) List<String>.FindIndex(Predicate<String>) List<String>.FindIndex(Int32, Predicate<String>) List<String>.FindIndex(Int32, Int32, Predicate<String>) List<String>.FindLast(Predicate<String>) List<String>.FindLastIndex(Predicate<String>) List<String>.FindLastIndex(Int32, Predicate<String>) List<String>.FindLastIndex(Int32, Int32, Predicate<String>) List<String>.ForEach(Action<String>) List<String>.GetEnumerator() List<String>.IEnumerable<String>.GetEnumerator() List<String>.IEnumerable.GetEnumerator() List<String>.GetRange(Int32, Int32) List<String>.IndexOf(String) List<String>.IList.IndexOf(Object) List<String>.IndexOf(String, Int32) List<String>.IndexOf(String, Int32, Int32) List<String>.Insert(Int32, String) List<String>.IList.Insert(Int32, Object) List<String>.InsertRange(Int32, IEnumerable<String>) List<String>.LastIndexOf(String) List<String>.LastIndexOf(String, Int32) List<String>.LastIndexOf(String, Int32, Int32) List<String>.Remove(String) List<String>.IList.Remove(Object) List<String>.RemoveAll(Predicate<String>) List<String>.RemoveAt(Int32) List<String>.RemoveRange(Int32, Int32) List<String>.Reverse() List<String>.Reverse(Int32, Int32) List<String>.Sort() List<String>.Sort(IComparer<String>) List<String>.Sort(Int32, Int32, IComparer<String>) List<String>.Sort(Comparison<String>) List<String>.ToArray() List<String>.TrimExcess() List<String>.TrueForAll(Predicate<String>) List<String>.Capacity List<String>.Count List<String>.IList.IsFixedSize List<String>.ICollection<String>.IsReadOnly List<String>.IList.IsReadOnly List<String>.ICollection.IsSynchronized List<String>.ICollection.SyncRoot List<String>.Item[Int32] List<String>.IList.Item[Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [JsonConverter(typeof (ListWithStringFallbackConverter))] [Serializable] public class ListWithStringFallback : List<string>, IList<string>, ICollection<string>, IList, ICollection, IReadOnlyList<string>, IReadOnlyCollection<string>, IEnumerable<string>, IEnumerable Constructors ListWithStringFallback() Declaration public ListWithStringFallback() ListWithStringFallback(IEnumerable<String>) Declaration public ListWithStringFallback(IEnumerable<string> list) Parameters Type Name Description IEnumerable < String > list Extension Methods CollectionExtensions.Merge<TItem, TResult>(IReadOnlyList<IEnumerable<TItem>>, IComparer<TItem>, Func<List<TItem>, TResult>) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) PathUtility.CopyFilesToFolder(IEnumerable<String>, String, String, Boolean, Action<String>, Func<String, Boolean>) StringExtension.ToDelimitedString(IEnumerable<String>, String) StringExtension.GetNormalizedFullPathKey(IEnumerable<String>) StringExtension.GetNormalizedFullPathList(IEnumerable<String>) StringExtension.GetNormalizedPathList(IEnumerable<String>) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>) DocumentExceptionExtensions.RunAll<TElement, TResult>(IReadOnlyList<TElement>, Func<TElement, TResult>) DocumentExceptionExtensions.RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>) DocumentExceptionExtensions.RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>, Int32)"
  },
  "api/Microsoft.DocAsCode.ListWithStringFallbackConverter.html": {
    "href": "api/Microsoft.DocAsCode.ListWithStringFallbackConverter.html",
    "title": "Class ListWithStringFallbackConverter | DocFX website",
    "keywords": "Class ListWithStringFallbackConverter Inheritance Object Newtonsoft.Json.JsonConverter ListWithStringFallbackConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class ListWithStringFallbackConverter : JsonConverter Methods CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Align.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Align.html",
    "title": "Enum Align | DocFX website",
    "keywords": "Enum Align Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public enum Align Fields Name Description Center Left NotSpec Right Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmDelInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmDelInlineRule.html",
    "title": "Class GfmDelInlineRule | DocFX website",
    "keywords": "Class GfmDelInlineRule Inheritance Object GfmDelInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmDelInlineRule : IMarkdownRule Properties Del Declaration public virtual Regex Del { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkInlineRule.html",
    "title": "Class MarkdownLinkInlineRule | DocFX website",
    "keywords": "Class MarkdownLinkInlineRule Inheritance Object MarkdownLinkBaseInlineRule MarkdownLinkInlineRule Inherited Members MarkdownLinkBaseInlineRule.GenerateToken(IMarkdownParser, String, String, String, Boolean, SourceInfo, MarkdownLinkType, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownLinkInlineRule : MarkdownLinkBaseInlineRule, IMarkdownRule Properties Link Declaration public virtual Regex Link { get; } Property Value Type Description Regex Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownLinkBaseInlineRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides MarkdownLinkBaseInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkInlineToken.html",
    "title": "Class MarkdownLinkInlineToken | DocFX website",
    "keywords": "Class MarkdownLinkInlineToken Inheritance Object MarkdownLinkInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownLinkInlineToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownLinkInlineToken> Constructors MarkdownLinkInlineToken(IMarkdownRule, IMarkdownContext, String, String, ImmutableArray<IMarkdownToken>, SourceInfo, MarkdownLinkType, String) Declaration public MarkdownLinkInlineToken(IMarkdownRule rule, IMarkdownContext context, string href, string title, ImmutableArray<IMarkdownToken> content, SourceInfo sourceInfo, MarkdownLinkType linkType, string refId) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String href String title System.Collections.Immutable.ImmutableArray < IMarkdownToken > content SourceInfo sourceInfo MarkdownLinkType linkType String refId Properties Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Href Declaration public string Href { get; } Property Value Type Description String LinkType Declaration public MarkdownLinkType LinkType { get; } Property Value Type Description MarkdownLinkType RefId Declaration public string RefId { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Title Declaration public string Title { get; } Property Value Type Description String Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownLinkInlineToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownLinkInlineToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkType.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkType.html",
    "title": "Enum MarkdownLinkType | DocFX website",
    "keywords": "Enum MarkdownLinkType Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public enum MarkdownLinkType Fields Name Description AutoLink NormalLink NumberLink RefLink UrlLink Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListBlockRule.html",
    "title": "Class MarkdownListBlockRule | DocFX website",
    "keywords": "Class MarkdownListBlockRule Inheritance Object MarkdownListBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownListBlockRule : IMarkdownRule Properties Bullet Declaration public virtual Regex Bullet { get; } Property Value Type Description Regex Item Declaration public virtual Regex Item { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name OrderList Declaration [Obsolete(\"Please use OrderListMatcher.\")] public virtual Regex OrderList { get; } Property Value Type Description Regex OrderListMatcher Declaration public virtual Matcher OrderListMatcher { get; } Property Value Type Description Matcher UnorderList Declaration [Obsolete(\"Please use ListMatcher.\")] public virtual Regex UnorderList { get; } Property Value Type Description Regex UnorderListMatcher Declaration public virtual Matcher UnorderListMatcher { get; } Property Value Type Description Matcher Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParagraphBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParagraphBlockToken.html",
    "title": "Class MarkdownParagraphBlockToken | DocFX website",
    "keywords": "Class MarkdownParagraphBlockToken Inheritance Object MarkdownParagraphBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownParagraphBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownParagraphBlockToken> Constructors MarkdownParagraphBlockToken(IMarkdownRule, IMarkdownContext, InlineContent, SourceInfo) Declaration public MarkdownParagraphBlockToken(IMarkdownRule rule, IMarkdownContext context, InlineContent inlineTokens, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context InlineContent inlineTokens SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context InlineTokens Declaration public InlineContent InlineTokens { get; } Property Value Type Description InlineContent Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods Create(IMarkdownRule, MarkdownParser, String, SourceInfo) Declaration public static MarkdownParagraphBlockToken Create(IMarkdownRule rule, MarkdownParser engine, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule MarkdownParser engine String content SourceInfo sourceInfo Returns Type Description MarkdownParagraphBlockToken GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownParagraphBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownParagraphBlockToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.ExpandedDependencyMap.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.ExpandedDependencyMap.html",
    "title": "Class ExpandedDependencyMap | DocFX website",
    "keywords": "Class ExpandedDependencyMap Inheritance Object ExpandedDependencyMap Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class ExpandedDependencyMap Methods ConstructFromDependencyGraph(DependencyGraph) Declaration public static ExpandedDependencyMap ConstructFromDependencyGraph(DependencyGraph dg) Parameters Type Name Description DependencyGraph dg Returns Type Description ExpandedDependencyMap GetDependencyFrom(String) Declaration public IEnumerable<ExpandedDependencyItem> GetDependencyFrom(string from) Parameters Type Name Description String from Returns Type Description IEnumerable < ExpandedDependencyItem > GetDependencyTo(String) Declaration public IEnumerable<ExpandedDependencyItem> GetDependencyTo(string to) Parameters Type Name Description String to Returns Type Description IEnumerable < ExpandedDependencyItem > Load(TextReader) Declaration public static ExpandedDependencyMap Load(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description ExpandedDependencyMap Save(TextWriter) Declaration public void Save(TextWriter writer) Parameters Type Name Description TextWriter writer Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.html",
    "title": "Namespace Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs Classes ExpandedDependencyItem ExpandedDependencyMap"
  },
  "api/Microsoft.DocAsCode.Build.Engine.RemoveDebugInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.RemoveDebugInfo.html",
    "title": "Class RemoveDebugInfo | DocFX website",
    "keywords": "Class RemoveDebugInfo Inheritance Object HtmlDocumentHandler RemoveDebugInfo Inherited Members HtmlDocumentHandler.Context HtmlDocumentHandler.LoadContext(HtmlPostProcessContext) HtmlDocumentHandler.PostHandleCore(Manifest) HtmlDocumentHandler.PreHandleCore(Manifest) HtmlDocumentHandler.SaveContext(HtmlPostProcessContext) HtmlDocumentHandler.SetContext(HtmlPostProcessContext) HtmlDocumentHandler.Handle(HtmlDocument, ManifestItem, String, String) HtmlDocumentHandler.PostHandle(Manifest) HtmlDocumentHandler.PreHandle(Manifest) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class RemoveDebugInfo : HtmlDocumentHandler, IHtmlDocumentHandler Methods HandleCore(HtmlDocument, ManifestItem, String, String) Declaration protected override void HandleCore(HtmlDocument document, ManifestItem manifestItem, string inputFile, string outputFile) Parameters Type Name Description HtmlAgilityPack.HtmlDocument document ManifestItem manifestItem String inputFile String outputFile Overrides HtmlDocumentHandler.HandleCore(HtmlDocument, ManifestItem, String, String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ResourceCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ResourceCollection.html",
    "title": "Class ResourceCollection | DocFX website",
    "keywords": "Class ResourceCollection Inheritance Object ResourceCollection ArchiveResourceCollection CompositeResourceCollectionWithOverridden EmptyResourceCollection FileResourceCollection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public abstract class ResourceCollection : IDisposable Properties IsEmpty Declaration public abstract bool IsEmpty { get; } Property Value Type Description Boolean Name Declaration public abstract string Name { get; } Property Value Type Description String Names Declaration public abstract IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Finalize() Override Object.Finalize by defining a destructor Declaration protected void Finalize() GetResource(String) Declaration public virtual string GetResource(string name) Parameters Type Name Description String name Returns Type Description String GetResources(String) Declaration public IEnumerable<KeyValuePair<string, string>> GetResources(string selector = null) Parameters Type Name Description String selector Returns Type Description IEnumerable < KeyValuePair < String , String >> GetResourceStream(String) Declaration public abstract Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream GetResourceStreams(String) Declaration public IEnumerable<KeyValuePair<string, Stream>> GetResourceStreams(string selector = null) Parameters Type Name Description String selector Returns Type Description IEnumerable < KeyValuePair < String , Stream >> GetString(Stream) Declaration protected static string GetString(Stream stream) Parameters Type Name Description Stream stream Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateRendererResource.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateRendererResource.html",
    "title": "Class TemplateRendererResource | DocFX website",
    "keywords": "Class TemplateRendererResource Inheritance Object TemplateRendererResource Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateRendererResource Constructors TemplateRendererResource(String, String, String) Declaration public TemplateRendererResource(string resourceName, string content, string templateName) Parameters Type Name Description String resourceName String content String templateName Fields TemplateRenderTypeMapping Declaration public static readonly Dictionary<string, TemplateRendererType> TemplateRenderTypeMapping Field Value Type Description Dictionary < String , TemplateRendererType > Properties Content Declaration public string Content { get; } Property Value Type Description String ResourceName Declaration public string ResourceName { get; } Property Value Type Description String TemplateName Declaration public string TemplateName { get; } Property Value Type Description String Type Declaration public TemplateRendererType Type { get; } Property Value Type Description TemplateRendererType Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateRendererType.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateRendererType.html",
    "title": "Enum TemplateRendererType | DocFX website",
    "keywords": "Enum TemplateRendererType Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public enum TemplateRendererType Fields Name Description Liquid Mustache Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyOverwriteDocumentForMref.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyOverwriteDocumentForMref.html",
    "title": "Class ApplyOverwriteDocumentForMref | DocFX website",
    "keywords": "Class ApplyOverwriteDocumentForMref Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument ApplyOverwriteDocumentForMref Inherited Members ApplyOverwriteDocument.GetMerger() ApplyOverwriteDocument.Postbuild(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrites(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrite<T>(IHostService, List<FileModel>, String, List<FileModel>, Func<FileModel, String, IHostService, IEnumerable<T>>, Func<FileModel, String, IHostService, IEnumerable<T>>) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof (IDocumentBuildStep))] public class ApplyOverwriteDocumentForMref : ApplyOverwriteDocument, ISupportIncrementalBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Implements IDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Implements IDocumentBuildStep.Name Methods ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) Declaration protected override void ApplyOverwrite(IHostService host, List<FileModel> overwrites, string uid, List<FileModel> articles) Parameters Type Name Description IHostService host List < FileModel > overwrites String uid List < FileModel > articles Overrides ApplyOverwriteDocument.ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > Implements ISupportIncrementalBuildStep.GetDependencyTypesToRegister() GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep.GetIncrementalContextHash() GetItemsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<ItemViewModel> GetItemsFromOverwriteDocument(FileModel fileModel, string uid, IHostService host) Parameters Type Name Description FileModel fileModel String uid IHostService host Returns Type Description IEnumerable < ItemViewModel > GetItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<ItemViewModel> GetItemsToOverwrite(FileModel fileModel, string uid, IHostService host) Parameters Type Name Description FileModel fileModel String uid IHostService host Returns Type Description IEnumerable < ItemViewModel > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyPlatformVersion.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyPlatformVersion.html",
    "title": "Class ApplyPlatformVersion | DocFX website",
    "keywords": "Class ApplyPlatformVersion Inheritance Object BaseDocumentBuildStep ApplyPlatformVersion Inherited Members BaseDocumentBuildStep.Build(FileModel, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax public class ApplyPlatformVersion : BaseDocumentBuildStep, ISupportIncrementalBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Implements IDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Implements IDocumentBuildStep.Name Methods CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > Implements ISupportIncrementalBuildStep.GetDependencyTypesToRegister() GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep.GetIncrementalContextHash() Prebuild(ImmutableList<FileModel>, IHostService) Declaration public override IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Overrides BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Implements IDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ValidateManagedReferenceDocumentMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ValidateManagedReferenceDocumentMetadata.html",
    "title": "Class ValidateManagedReferenceDocumentMetadata | DocFX website",
    "keywords": "Class ValidateManagedReferenceDocumentMetadata Inheritance Object BaseDocumentBuildStep ValidateManagedReferenceDocumentMetadata Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof (IDocumentBuildStep))] public class ValidateManagedReferenceDocumentMetadata : BaseDocumentBuildStep, ISupportIncrementalBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Implements IDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Implements IDocumentBuildStep.Name Methods Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) Implements IDocumentBuildStep.Build(FileModel, IHostService) CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > Implements ISupportIncrementalBuildStep.GetDependencyTypesToRegister() GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep.GetIncrementalContextHash() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ManagedReference | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ManagedReference Classes ApplyOverwriteDocumentForMref ApplyPlatformVersion BuildManagedReferenceDocument FillReferenceInformation ManagedReferenceDocumentProcessor MergeManagedReferenceDocument ValidateManagedReferenceDocumentMetadata"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.SwaggerModelConverter.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.SwaggerModelConverter.html",
    "title": "Class SwaggerModelConverter | DocFX website",
    "keywords": "Class SwaggerModelConverter Inheritance Object SwaggerModelConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax public static class SwaggerModelConverter Methods FromSwaggerModel(SwaggerModel) Declaration public static RestApiRootItemViewModel FromSwaggerModel(SwaggerModel swagger) Parameters Type Name Description SwaggerModel swagger Returns Type Description RestApiRootItemViewModel"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.ValidateRestApiDocumentMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.ValidateRestApiDocumentMetadata.html",
    "title": "Class ValidateRestApiDocumentMetadata | DocFX website",
    "keywords": "Class ValidateRestApiDocumentMetadata Inheritance Object BaseDocumentBuildStep ValidateRestApiDocumentMetadata Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(\"RestApiDocumentProcessor\", typeof (IDocumentBuildStep))] public class ValidateRestApiDocumentMetadata : BaseDocumentBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.html",
    "title": "Namespace Microsoft.DocAsCode.Build.RestApi | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.RestApi Classes ApplyOverwriteDocumentForRestApi BuildRestApiDocument RestApiDocumentProcessor SwaggerModelConverter ValidateRestApiDocumentMetadata"
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.BuildTocDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.BuildTocDocument.html",
    "title": "Class BuildTocDocument | DocFX website",
    "keywords": "Class BuildTocDocument Inheritance Object BaseDocumentBuildStep BuildTocDocument Inherited Members BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.TableOfContents Assembly :Microsoft.DocAsCode.Build.TableOfContents.dll Syntax [Export(\"TocDocumentProcessor\", typeof (IDocumentBuildStep))] public class BuildTocDocument : BaseDocumentBuildStep, ISupportIncrementalBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Implements IDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Implements IDocumentBuildStep.Name Methods Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) Implements IDocumentBuildStep.Build(FileModel, IHostService) CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > Implements ISupportIncrementalBuildStep.GetDependencyTypesToRegister() GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep.GetIncrementalContextHash() Prebuild(ImmutableList<FileModel>, IHostService) Expand the TOC reference Resolve homepage Declaration public override IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Overrides BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Implements IDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.IMerger.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.IMerger.html",
    "title": "Interface IMerger | DocFX website",
    "keywords": "Interface IMerger Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax public interface IMerger Methods Merge(ref Object, Object, Type, IMergeContext) Declaration void Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context TestKey(Object, Object, Type, IMergeContext) Declaration bool TestKey(object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.JArrayMerger.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.JArrayMerger.html",
    "title": "Class JArrayMerger | DocFX website",
    "keywords": "Class JArrayMerger Inheritance Object MergerDecorator JArrayMerger Inherited Members MergerDecorator.TestKey(Object, Object, Type, IMergeContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax public class JArrayMerger : MergerDecorator, IMerger Constructors JArrayMerger(IMerger) Declaration public JArrayMerger(IMerger inner) Parameters Type Name Description IMerger inner Methods Merge(ref Object, Object, Type, IMergeContext) Declaration public override void Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Overrides MergerDecorator.Merge(ref Object, Object, Type, IMergeContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.JObjectMerger.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.JObjectMerger.html",
    "title": "Class JObjectMerger | DocFX website",
    "keywords": "Class JObjectMerger Inheritance Object MergerDecorator JObjectMerger Inherited Members MergerDecorator.TestKey(Object, Object, Type, IMergeContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax public class JObjectMerger : MergerDecorator, IMerger Constructors JObjectMerger(IMerger) Declaration public JObjectMerger(IMerger inner) Parameters Type Name Description IMerger inner Methods Merge(ref Object, Object, Type, IMergeContext) Declaration public override void Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Overrides MergerDecorator.Merge(ref Object, Object, Type, IMergeContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.KeyedListMerger.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.KeyedListMerger.html",
    "title": "Class KeyedListMerger | DocFX website",
    "keywords": "Class KeyedListMerger Inheritance Object MergerDecorator KeyedListMerger Inherited Members MergerDecorator.TestKey(Object, Object, Type, IMergeContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax public class KeyedListMerger : MergerDecorator, IMerger Constructors KeyedListMerger(IMerger) Declaration public KeyedListMerger(IMerger inner) Parameters Type Name Description IMerger inner Methods Merge(ref Object, Object, Type, IMergeContext) Declaration public override void Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Overrides MergerDecorator.Merge(ref Object, Object, Type, IMergeContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.LinkFileWriter.html": {
    "href": "api/Microsoft.DocAsCode.Common.LinkFileWriter.html",
    "title": "Class LinkFileWriter | DocFX website",
    "keywords": "Class LinkFileWriter Inheritance Object FileWriterBase LinkFileWriter Inherited Members FileWriterBase.OutputFolder FileWriterBase.ExpandedOutputFolder FileWriterBase.EnsureFolder(String) FileWriterBase.GetRandomEntry() FileWriterBase.CreateRandomFileStream() FileWriterBase.RetryIO<T>(Func<T>) FileWriterBase.RetryIO(Action) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class LinkFileWriter : FileWriterBase, IFileWriter Constructors LinkFileWriter(String) Declaration public LinkFileWriter(string outputFolder) Parameters Type Name Description String outputFolder Methods Copy(PathMapping, RelativePath) Declaration public override void Copy(PathMapping sourceFilePath, RelativePath destFilePath) Parameters Type Name Description PathMapping sourceFilePath RelativePath destFilePath Overrides FileWriterBase.Copy(PathMapping, RelativePath) Create(RelativePath) Declaration public override Stream Create(RelativePath file) Parameters Type Name Description RelativePath file Returns Type Description Stream Overrides FileWriterBase.Create(RelativePath) CreateReader() Declaration public override IFileReader CreateReader() Returns Type Description IFileReader Overrides FileWriterBase.CreateReader() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.Logger.html": {
    "href": "api/Microsoft.DocAsCode.Common.Logger.html",
    "title": "Class Logger | DocFX website",
    "keywords": "Class Logger Inheritance Object Logger Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class Logger Fields LogLevelThreshold Declaration public static volatile LogLevel LogLevelThreshold Field Value Type Description LogLevel Properties HasError Declaration public static bool HasError { get; } Property Value Type Description Boolean Methods FindAsyncListener(Predicate<ILoggerListener>) Declaration public static ILoggerListener FindAsyncListener(Predicate<ILoggerListener> predicate) Parameters Type Name Description Predicate < ILoggerListener > predicate Returns Type Description ILoggerListener FindListener(Predicate<ILoggerListener>) Declaration public static ILoggerListener FindListener(Predicate<ILoggerListener> predicate) Parameters Type Name Description Predicate < ILoggerListener > predicate Returns Type Description ILoggerListener Flush() Declaration public static void Flush() Log(ILogItem) Declaration public static void Log(ILogItem item) Parameters Type Name Description ILogItem item Log(LogLevel, String, String, String, String) Declaration public static void Log(LogLevel level, string message, string phase = null, string file = null, string line = null) Parameters Type Name Description LogLevel level String message String phase String file String line Log(LogLevel, String, String, String, String, String) Declaration public static void Log(LogLevel level, string message, string phase, string file, string line, string code) Parameters Type Name Description LogLevel level String message String phase String file String line String code Log(Object) Declaration public static void Log(object result) Parameters Type Name Description Object result LogDiagnostic(String, String, String, String) Declaration public static void LogDiagnostic(string message, string phase = null, string file = null, string line = null) Parameters Type Name Description String message String phase String file String line LogDiagnostic(String, String, String, String, String) Declaration public static void LogDiagnostic(string message, string phase, string file, string line, string code) Parameters Type Name Description String message String phase String file String line String code LogError(String, String, String, String) Declaration public static void LogError(string message, string phase = null, string file = null, string line = null) Parameters Type Name Description String message String phase String file String line LogError(String, String, String, String, String) Declaration public static void LogError(string message, string phase, string file, string line, string code) Parameters Type Name Description String message String phase String file String line String code LogInfo(String, String, String, String) Declaration public static void LogInfo(string message, string phase = null, string file = null, string line = null) Parameters Type Name Description String message String phase String file String line LogInfo(String, String, String, String, String) Declaration public static void LogInfo(string message, string phase, string file, string line, string code) Parameters Type Name Description String message String phase String file String line String code LogVerbose(String, String, String, String) Declaration public static void LogVerbose(string message, string phase = null, string file = null, string line = null) Parameters Type Name Description String message String phase String file String line LogVerbose(String, String, String, String, String) Declaration public static void LogVerbose(string message, string phase, string file, string line, string code) Parameters Type Name Description String message String phase String file String line String code LogWarning(String, String, String, String) Declaration public static void LogWarning(string message, string phase = null, string file = null, string line = null) Parameters Type Name Description String message String phase String file String line LogWarning(String, String, String, String, String) Declaration public static void LogWarning(string message, string phase, string file, string line, string code) Parameters Type Name Description String message String phase String file String line String code RegisterAsyncListener(ILoggerListener) Declaration public static void RegisterAsyncListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener RegisterListener(ILoggerListener) Declaration public static void RegisterListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener UnregisterAllListeners() Declaration public static void UnregisterAllListeners() UnregisterAsyncListener(ILoggerListener) Declaration public static void UnregisterAsyncListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener UnregisterListener(ILoggerListener) Declaration public static void UnregisterListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener"
  },
  "api/Microsoft.DocAsCode.Common.LoggerFileScope.html": {
    "href": "api/Microsoft.DocAsCode.Common.LoggerFileScope.html",
    "title": "Class LoggerFileScope | DocFX website",
    "keywords": "Class LoggerFileScope Inheritance Object LoggerFileScope Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class LoggerFileScope : IDisposable Constructors LoggerFileScope(String) Declaration public LoggerFileScope(string fileName) Parameters Type Name Description String fileName Methods Capture() Declaration public static object Capture() Returns Type Description Object Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Restore(Object) Declaration public static LoggerFileScope Restore(object captured) Parameters Type Name Description Object captured Returns Type Description LoggerFileScope Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.LoggerPhaseScope.html": {
    "href": "api/Microsoft.DocAsCode.Common.LoggerPhaseScope.html",
    "title": "Class LoggerPhaseScope | DocFX website",
    "keywords": "Class LoggerPhaseScope Inheritance Object LoggerPhaseScope Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class LoggerPhaseScope : IDisposable Constructors LoggerPhaseScope(String) Declaration public LoggerPhaseScope(string phaseName) Parameters Type Name Description String phaseName LoggerPhaseScope(String, LogLevel) Declaration public LoggerPhaseScope(string phaseName, LogLevel perfLogLevel) Parameters Type Name Description String phaseName LogLevel perfLogLevel Methods Capture() Declaration public static object Capture() Returns Type Description Object Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Restore(Object) Declaration public static LoggerPhaseScope Restore(object captured) Parameters Type Name Description Object captured Returns Type Description LoggerPhaseScope Restore(Object, LogLevel) Declaration public static LoggerPhaseScope Restore(object captured, LogLevel perfLogLevel) Parameters Type Name Description Object captured LogLevel perfLogLevel Returns Type Description LoggerPhaseScope WithScope<T>(String, LogLevel, Func<T>) Declaration public static T WithScope<T>(string phaseName, LogLevel perfLogLevel, Func<T> func) Parameters Type Name Description String phaseName LogLevel perfLogLevel Func <T> func Returns Type Description T Type Parameters Name Description T WithScope<T>(String, Func<T>) Declaration public static T WithScope<T>(string phaseName, Func<T> func) Parameters Type Name Description String phaseName Func <T> func Returns Type Description T Type Parameters Name Description T Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.TreeIterator.html": {
    "href": "api/Microsoft.DocAsCode.Common.TreeIterator.html",
    "title": "Class TreeIterator | DocFX website",
    "keywords": "Class TreeIterator Inheritance Object TreeIterator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class TreeIterator Methods Preorder<T>(T, T, Func<T, IEnumerable<T>>, Func<T, T, Boolean>) Declaration public static void Preorder<T>(T current, T parent, Func<T, IEnumerable<T>> childrenGetter, Func<T, T, bool> action) Parameters Type Name Description T current T parent Func <T, IEnumerable <T>> childrenGetter Func <T, T, Boolean > action Type Parameters Name Description T PreorderAsync<T>(T, T, Func<T, IEnumerable<T>>, Func<T, T, Task<Boolean>>) Declaration public static Task PreorderAsync<T>(T current, T parent, Func<T, IEnumerable<T>> childrenGetter, Func<T, T, Task<bool>> action) Parameters Type Name Description T current T parent Func <T, IEnumerable <T>> childrenGetter Func <T, T, Task < Boolean >> action Returns Type Description Task Type Parameters Name Description T PreorderFirstOrDefault<T>(T, Func<T, IEnumerable<T>>, Func<T, Boolean>) Declaration public static T PreorderFirstOrDefault<T>(T current, Func<T, IEnumerable<T>> childrenGetter, Func<T, bool> predicate) Parameters Type Name Description T current Func <T, IEnumerable <T>> childrenGetter Func <T, Boolean > predicate Returns Type Description T Type Parameters Name Description T"
  },
  "api/Microsoft.DocAsCode.Common.UriUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.UriUtility.html",
    "title": "Class UriUtility | DocFX website",
    "keywords": "Class UriUtility Inheritance Object UriUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class UriUtility Methods GetFragment(String) Declaration public static string GetFragment(string uriString) Parameters Type Name Description String uriString Returns Type Description String GetNonFragment(String) Declaration public static string GetNonFragment(string uriString) Parameters Type Name Description String uriString Returns Type Description String GetPath(String) Declaration public static string GetPath(string uriString) Parameters Type Name Description String uriString Returns Type Description String GetQueryString(String) Declaration public static string GetQueryString(string uriString) Parameters Type Name Description String uriString Returns Type Description String GetQueryStringAndFragment(String) Declaration public static string GetQueryStringAndFragment(string uriString) Parameters Type Name Description String uriString Returns Type Description String HasFragment(String) Declaration public static bool HasFragment(string uriString) Parameters Type Name Description String uriString Returns Type Description Boolean HasQueryString(String) Declaration public static bool HasQueryString(string uriString) Parameters Type Name Description String uriString Returns Type Description Boolean"
  },
  "api/Microsoft.DocAsCode.Common.XHtmlWriter.html": {
    "href": "api/Microsoft.DocAsCode.Common.XHtmlWriter.html",
    "title": "Class XHtmlWriter | DocFX website",
    "keywords": "Class XHtmlWriter Inheritance Object XmlWriter XHtmlWriter Inherited Members XmlWriter.WriteStartElement(String, String) XmlWriter.WriteStartElement(String) XmlWriter.WriteAttributeString(String, String, String) XmlWriter.WriteAttributeString(String, String) XmlWriter.WriteAttributeString(String, String, String, String) XmlWriter.WriteStartAttribute(String, String) XmlWriter.WriteStartAttribute(String) XmlWriter.WriteBinHex(Byte[], Int32, Int32) XmlWriter.Close() XmlWriter.WriteNmToken(String) XmlWriter.WriteName(String) XmlWriter.WriteQualifiedName(String, String) XmlWriter.WriteValue(Object) XmlWriter.WriteValue(String) XmlWriter.WriteValue(Boolean) XmlWriter.WriteValue(DateTime) XmlWriter.WriteValue(DateTimeOffset) XmlWriter.WriteValue(Double) XmlWriter.WriteValue(Single) XmlWriter.WriteValue(Decimal) XmlWriter.WriteValue(Int32) XmlWriter.WriteValue(Int64) XmlWriter.WriteAttributes(XmlReader, Boolean) XmlWriter.WriteNode(XmlReader, Boolean) XmlWriter.WriteNode(XPathNavigator, Boolean) XmlWriter.WriteElementString(String, String) XmlWriter.WriteElementString(String, String, String) XmlWriter.WriteElementString(String, String, String, String) XmlWriter.Dispose() XmlWriter.Dispose(Boolean) XmlWriter.Create(String) XmlWriter.Create(String, XmlWriterSettings) XmlWriter.Create(Stream) XmlWriter.Create(Stream, XmlWriterSettings) XmlWriter.Create(TextWriter) XmlWriter.Create(TextWriter, XmlWriterSettings) XmlWriter.Create(StringBuilder) XmlWriter.Create(StringBuilder, XmlWriterSettings) XmlWriter.Create(XmlWriter) XmlWriter.Create(XmlWriter, XmlWriterSettings) XmlWriter.WriteStartDocumentAsync() XmlWriter.WriteStartDocumentAsync(Boolean) XmlWriter.WriteEndDocumentAsync() XmlWriter.WriteDocTypeAsync(String, String, String, String) XmlWriter.WriteStartElementAsync(String, String, String) XmlWriter.WriteEndElementAsync() XmlWriter.WriteFullEndElementAsync() XmlWriter.WriteAttributeStringAsync(String, String, String, String) XmlWriter.WriteStartAttributeAsync(String, String, String) XmlWriter.WriteEndAttributeAsync() XmlWriter.WriteCDataAsync(String) XmlWriter.WriteCommentAsync(String) XmlWriter.WriteProcessingInstructionAsync(String, String) XmlWriter.WriteEntityRefAsync(String) XmlWriter.WriteCharEntityAsync(Char) XmlWriter.WriteWhitespaceAsync(String) XmlWriter.WriteStringAsync(String) XmlWriter.WriteSurrogateCharEntityAsync(Char, Char) XmlWriter.WriteCharsAsync(Char[], Int32, Int32) XmlWriter.WriteRawAsync(Char[], Int32, Int32) XmlWriter.WriteRawAsync(String) XmlWriter.WriteBase64Async(Byte[], Int32, Int32) XmlWriter.WriteBinHexAsync(Byte[], Int32, Int32) XmlWriter.FlushAsync() XmlWriter.WriteNmTokenAsync(String) XmlWriter.WriteNameAsync(String) XmlWriter.WriteQualifiedNameAsync(String, String) XmlWriter.WriteAttributesAsync(XmlReader, Boolean) XmlWriter.WriteNodeAsync(XmlReader, Boolean) XmlWriter.WriteNodeAsync(XPathNavigator, Boolean) XmlWriter.WriteElementStringAsync(String, String, String, String) XmlWriter.Settings XmlWriter.XmlSpace XmlWriter.XmlLang Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class XHtmlWriter : XmlWriter, IDisposable Constructors XHtmlWriter(TextWriter) Declaration public XHtmlWriter(TextWriter writer) Parameters Type Name Description TextWriter writer Properties WriteState Declaration public override WriteState WriteState { get; } Property Value Type Description WriteState Overrides XmlWriter.WriteState Methods Flush() Declaration public override void Flush() Overrides XmlWriter.Flush() LookupPrefix(String) Declaration public override string LookupPrefix(string ns) Parameters Type Name Description String ns Returns Type Description String Overrides XmlWriter.LookupPrefix(String) WriteBase64(Byte[], Int32, Int32) Declaration public override void WriteBase64(byte[] buffer, int index, int count) Parameters Type Name Description Byte [] buffer Int32 index Int32 count Overrides XmlWriter.WriteBase64(Byte[], Int32, Int32) WriteCData(String) Declaration public override void WriteCData(string text) Parameters Type Name Description String text Overrides XmlWriter.WriteCData(String) WriteCharEntity(Char) Declaration public override void WriteCharEntity(char ch) Parameters Type Name Description Char ch Overrides XmlWriter.WriteCharEntity(Char) WriteChars(Char[], Int32, Int32) Declaration public override void WriteChars(char[] buffer, int index, int count) Parameters Type Name Description Char [] buffer Int32 index Int32 count Overrides XmlWriter.WriteChars(Char[], Int32, Int32) WriteComment(String) Declaration public override void WriteComment(string text) Parameters Type Name Description String text Overrides XmlWriter.WriteComment(String) WriteDocType(String, String, String, String) Declaration public override void WriteDocType(string name, string pubid, string sysid, string subset) Parameters Type Name Description String name String pubid String sysid String subset Overrides XmlWriter.WriteDocType(String, String, String, String) WriteEndAttribute() Declaration public override void WriteEndAttribute() Overrides XmlWriter.WriteEndAttribute() WriteEndDocument() Declaration public override void WriteEndDocument() Overrides XmlWriter.WriteEndDocument() WriteEndElement() Declaration public override void WriteEndElement() Overrides XmlWriter.WriteEndElement() WriteEntityRef(String) Declaration public override void WriteEntityRef(string name) Parameters Type Name Description String name Overrides XmlWriter.WriteEntityRef(String) WriteFullEndElement() Declaration public override void WriteFullEndElement() Overrides XmlWriter.WriteFullEndElement() WriteProcessingInstruction(String, String) Declaration public override void WriteProcessingInstruction(string name, string text) Parameters Type Name Description String name String text Overrides XmlWriter.WriteProcessingInstruction(String, String) WriteRaw(Char[], Int32, Int32) Declaration public override void WriteRaw(char[] buffer, int index, int count) Parameters Type Name Description Char [] buffer Int32 index Int32 count Overrides XmlWriter.WriteRaw(Char[], Int32, Int32) WriteRaw(String) Declaration public override void WriteRaw(string data) Parameters Type Name Description String data Overrides XmlWriter.WriteRaw(String) WriteStartAttribute(String, String, String) Declaration public override void WriteStartAttribute(string prefix, string localName, string ns) Parameters Type Name Description String prefix String localName String ns Overrides XmlWriter.WriteStartAttribute(String, String, String) WriteStartDocument() Declaration public override void WriteStartDocument() Overrides XmlWriter.WriteStartDocument() WriteStartDocument(Boolean) Declaration public override void WriteStartDocument(bool standalone) Parameters Type Name Description Boolean standalone Overrides XmlWriter.WriteStartDocument(Boolean) WriteStartElement(String, String, String) Declaration public override void WriteStartElement(string prefix, string localName, string ns) Parameters Type Name Description String prefix String localName String ns Overrides XmlWriter.WriteStartElement(String, String, String) WriteString(String) Declaration public override void WriteString(string text) Parameters Type Name Description String text Overrides XmlWriter.WriteString(String) WriteSurrogateCharEntity(Char, Char) Declaration public override void WriteSurrogateCharEntity(char lowChar, char highChar) Parameters Type Name Description Char lowChar Char highChar Overrides XmlWriter.WriteSurrogateCharEntity(Char, Char) WriteWhitespace(String) Declaration public override void WriteWhitespace(string ws) Parameters Type Name Description String ws Overrides XmlWriter.WriteWhitespace(String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.YamlMime.html": {
    "href": "api/Microsoft.DocAsCode.Common.YamlMime.html",
    "title": "Class YamlMime | DocFX website",
    "keywords": "Class YamlMime Inheritance Object YamlMime Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class YamlMime Fields ManagedReference Declaration public const string ManagedReference = \"YamlMime:ManagedReference\" Field Value Type Description String TableOfContent Declaration public const string TableOfContent = \"YamlMime:TableOfContent\" Field Value Type Description String XRefMap Declaration public const string XRefMap = \"YamlMime:XRefMap\" Field Value Type Description String YamlMimePrefix Declaration public const string YamlMimePrefix = \"YamlMime:\" Field Value Type Description String Methods ReadMime(TextReader) Declaration public static string ReadMime(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description String ReadMime(String) Declaration public static string ReadMime(string file) Parameters Type Name Description String file Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiReferenceViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiReferenceViewModel.html",
    "title": "Class ApiReferenceViewModel | DocFX website",
    "keywords": "Class ApiReferenceViewModel Inheritance Object Dictionary < String , String > ApiReferenceViewModel Inherited Members Dictionary<String, String>.Add(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) Dictionary<String, String>.Clear() Dictionary<String, String>.ContainsKey(String) Dictionary<String, String>.ContainsValue(String) Dictionary<String, String>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() Dictionary<String, String>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, String>.OnDeserialization(Object) Dictionary<String, String>.Remove(String) Dictionary<String, String>.TryGetValue(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32) Dictionary<String, String>.ICollection.CopyTo(Array, Int32) Dictionary<String, String>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, String>.IDictionary.Add(Object, Object) Dictionary<String, String>.IDictionary.Contains(Object) Dictionary<String, String>.IDictionary.GetEnumerator() Dictionary<String, String>.IDictionary.Remove(Object) Dictionary<String, String>.Comparer Dictionary<String, String>.Count Dictionary<String, String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys Dictionary<String, String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values Dictionary<String, String>.Item[String] System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly Dictionary<String, String>.ICollection.IsSynchronized Dictionary<String, String>.ICollection.SyncRoot Dictionary<String, String>.IDictionary.IsFixedSize Dictionary<String, String>.IDictionary.IsReadOnly Dictionary<String, String>.IDictionary.Keys Dictionary<String, String>.IDictionary.Values Dictionary<String, String>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax public class ApiReferenceViewModel : Dictionary<string, string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ArgumentInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ArgumentInfo.html",
    "title": "Class ArgumentInfo | DocFX website",
    "keywords": "Class ArgumentInfo Inheritance Object ArgumentInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class ArgumentInfo Properties Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public object Value { get; set; } Property Value Type Description Object Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.AttributeInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.AttributeInfo.html",
    "title": "Class AttributeInfo | DocFX website",
    "keywords": "Class AttributeInfo Inheritance Object AttributeInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class AttributeInfo Properties Arguments Declaration [YamlMember(Alias = \"arguments\")] [JsonProperty(\"arguments\")] public List<ArgumentInfo> Arguments { get; set; } Property Value Type Description List < ArgumentInfo > Constructor Declaration [YamlMember(Alias = \"ctor\")] [JsonProperty(\"ctor\")] public string Constructor { get; set; } Property Value Type Description String NamedArguments Declaration [YamlMember(Alias = \"namedArguments\")] [JsonProperty(\"namedArguments\")] public List<NamedArgumentInfo> NamedArguments { get; set; } Property Value Type Description List < NamedArgumentInfo > Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ExceptionInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ExceptionInfo.html",
    "title": "Class ExceptionInfo | DocFX website",
    "keywords": "Class ExceptionInfo Inheritance Object ExceptionInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class ExceptionInfo Properties CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] [MergeOption(MergeOption.Ignore)] public string CommentId { get; set; } Property Value Type Description String Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Type Declaration [YamlMember(Alias = \"type\")] [MergeOption(MergeOption.MergeKey)] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String Methods Clone() Declaration public ExceptionInfo Clone() Returns Type Description ExceptionInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockRule.html",
    "title": "Class DfmFencesBlockRule | DocFX website",
    "keywords": "Class DfmFencesBlockRule Inheritance Object DfmFencesRule DfmFencesBlockRule Inherited Members DfmFencesRule.ParsePathQueryString(String, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmFencesBlockRule : DfmFencesRule, IMarkdownRule Properties DfmFencesMatcher Declaration public virtual Matcher DfmFencesMatcher { get; } Property Value Type Description Matcher Name Declaration public override string Name { get; } Property Value Type Description String Overrides DfmFencesRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides DfmFencesRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureFileInfo.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureFileInfo.html",
    "title": "Class AzureFileInfo | DocFX website",
    "keywords": "Class AzureFileInfo Inheritance Object AzureFileInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureFileInfo Properties FileName Indicate the azure file name. It's global unique in azure content Declaration public string FileName { get; set; } Property Value Type Description String FilePath Indicate currently absolute path of azure file Declaration public string FilePath { get; set; } Property Value Type Description String NeedTransformToAzureExternalLink Indicate whether the current relative path need to be changed to external link. If the current file is in docset, then false. Otherwise true. Declaration public bool NeedTransformToAzureExternalLink { get; set; } Property Value Type Description Boolean UriPrefix Indicate the uri prefix except the asset id Declaration public string UriPrefix { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineRule.html",
    "title": "Class AzureIncludeInlineRule | DocFX website",
    "keywords": "Class AzureIncludeInlineRule Inheritance Object AzureIncludeInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeInlineRule : IMarkdownRule Properties AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationVideoBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationVideoBlockRule.html",
    "title": "Class AzureMigrationVideoBlockRule | DocFX website",
    "keywords": "Class AzureMigrationVideoBlockRule Inheritance Object AzureMigrationVideoBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationVideoBlockRule : IMarkdownRule Properties AzureMigrationVideoRegex Declaration public virtual Regex AzureMigrationVideoRegex { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.BuildReferenceDocumentBase.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.BuildReferenceDocumentBase.html",
    "title": "Class BuildReferenceDocumentBase | DocFX website",
    "keywords": "Class BuildReferenceDocumentBase Base document build step for reference. Inheritance Object BaseDocumentBuildStep BuildReferenceDocumentBase BuildManagedReferenceDocument BuildRestApiDocument Inherited Members BaseDocumentBuildStep.Name BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class BuildReferenceDocumentBase : BaseDocumentBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Methods Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) BuildArticle(IHostService, FileModel) Declaration protected abstract void BuildArticle(IHostService host, FileModel model) Parameters Type Name Description IHostService host FileModel model BuildOverwrite(IHostService, FileModel) Declaration protected virtual void BuildOverwrite(IHostService host, FileModel model) Parameters Type Name Description IHostService host FileModel model Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.HandleIListItems-1.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.HandleIListItems-1.html",
    "title": "Class HandleGenericItemsHelper.HandleIListItems<T> | DocFX website",
    "keywords": "Class HandleGenericItemsHelper.HandleIListItems<T> Inheritance Object HandleGenericItemsHelper.HandleIListItems<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public sealed class HandleIListItems<T> : HandleGenericItemsHelper.IHandleItems Type Parameters Name Description T Constructors HandleIListItems(IList<T>) Declaration public HandleIListItems(IList<T> list) Parameters Type Name Description IList <T> list Methods Handle(Func<Object, Object>) Declaration public void Handle(Func<object, object> handler) Parameters Type Name Description Func < Object , Object > handler Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentReader.html",
    "title": "Class OverwriteDocumentReader | DocFX website",
    "keywords": "Class OverwriteDocumentReader Inheritance Object OverwriteDocumentReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class OverwriteDocumentReader Methods Read(FileAndType) Declaration public static FileModel Read(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description FileModel Transform<T>(FileModel, String, Func<T, T>) TODO: use Attributes to automatically markup and handle uid inside the model instead of pass in the itemBuilder action Declaration public static IEnumerable<T> Transform<T>(FileModel model, string uid, Func<T, T> itemBuilder)where T : class, IOverwriteDocumentViewModel Parameters Type Name Description FileModel model String uid Func <T, T> itemBuilder Returns Type Description IEnumerable <T> Type Parameters Name Description T Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.CountWord.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.CountWord.html",
    "title": "Class CountWord | DocFX website",
    "keywords": "Class CountWord Inheritance Object BaseDocumentBuildStep CountWord Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ConceptualDocuments Assembly :Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(\"ConceptualDocumentProcessor\", typeof (IDocumentBuildStep))] public class CountWord : BaseDocumentBuildStep, ISupportIncrementalBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Implements IDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Implements IDocumentBuildStep.Name Methods CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > Implements ISupportIncrementalBuildStep.GetDependencyTypesToRegister() GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep.GetIncrementalContextHash() Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Overrides BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Implements IDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.CrossReferenceNotResolvedException.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.CrossReferenceNotResolvedException.html",
    "title": "Class CrossReferenceNotResolvedException | DocFX website",
    "keywords": "Class CrossReferenceNotResolvedException Inheritance Object Exception DocumentException CrossReferenceNotResolvedException Inherited Members DocumentException.File DocumentException.Line DocumentException.Column DocumentException.RunAll(Action[]) Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class CrossReferenceNotResolvedException : DocumentException, ISerializable, _Exception Constructors CrossReferenceNotResolvedException(SerializationInfo, StreamingContext) Declaration protected CrossReferenceNotResolvedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context CrossReferenceNotResolvedException(String, String, String) Declaration public CrossReferenceNotResolvedException(string uid, string uidRawText, string file) Parameters Type Name Description String uid String uidRawText String file Properties Uid Declaration public string Uid { get; } Property Value Type Description String UidRawText Declaration public string UidRawText { get; } Property Value Type Description String Methods GetObjectData(SerializationInfo, StreamingContext) Declaration [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)] public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Overrides DocumentException.GetObjectData(SerializationInfo, StreamingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.EmptyResourceCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.EmptyResourceCollection.html",
    "title": "Class EmptyResourceCollection | DocFX website",
    "keywords": "Class EmptyResourceCollection Inheritance Object ResourceCollection EmptyResourceCollection Inherited Members ResourceCollection.GetResource(String) ResourceCollection.GetResources(String) ResourceCollection.GetResourceStreams(String) ResourceCollection.Dispose() ResourceCollection.Dispose(Boolean) ResourceCollection.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class EmptyResourceCollection : ResourceCollection, IDisposable Properties IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceCollection.IsEmpty Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceCollection.Name Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceCollection.Names Methods GetResourceStream(String) Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceCollection.GetResourceStream(String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ExportSettings.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ExportSettings.html",
    "title": "Class ExportSettings | DocFX website",
    "keywords": "Class ExportSettings Inheritance Object ExportSettings Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class ExportSettings Constructors ExportSettings() Declaration public ExportSettings() ExportSettings(ExportSettings) Declaration public ExportSettings(ExportSettings settings) Parameters Type Name Description ExportSettings settings Properties Export Declaration public bool Export { get; set; } Property Value Type Description Boolean Extension Declaration public string Extension { get; set; } Property Value Type Description String OutputFolder Declaration public string OutputFolder { get; set; } Property Value Type Description String PathRewriter Declaration public Func<string, string> PathRewriter { get; set; } Property Value Type Description Func < String , String > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildOutputItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildOutputItem.html",
    "title": "Class BuildOutputItem | DocFX website",
    "keywords": "Class BuildOutputItem Inheritance Object BuildOutputItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class BuildOutputItem Properties DestinationFile The destination file without extension Declaration public string DestinationFile { get; set; } Property Value Type Description String Files The output files, key is extension name (e.g. \".html\"), the value is file path (can be random name). Declaration public Dictionary<string, string> Files { get; set; } Property Value Type Description Dictionary < String , String > ManifestMetadata The metadata in manifest for this item. Declaration public Dictionary<string, object> ManifestMetadata { get; set; } Property Value Type Description Dictionary < String , Object > SourceFile The source file, always from working folder, i.e. start with \"~/\" Declaration public string SourceFile { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildOutputs.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildOutputs.html",
    "title": "Class BuildOutputs | DocFX website",
    "keywords": "Class BuildOutputs Inheritance Object Dictionary < String , String > OSPlatformSensitiveDictionary < String > BuildOutputs Inherited Members Dictionary<String, String>.Add(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) Dictionary<String, String>.Clear() Dictionary<String, String>.ContainsKey(String) Dictionary<String, String>.ContainsValue(String) Dictionary<String, String>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() Dictionary<String, String>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, String>.OnDeserialization(Object) Dictionary<String, String>.Remove(String) Dictionary<String, String>.TryGetValue(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32) Dictionary<String, String>.ICollection.CopyTo(Array, Int32) Dictionary<String, String>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, String>.IDictionary.Add(Object, Object) Dictionary<String, String>.IDictionary.Contains(Object) Dictionary<String, String>.IDictionary.GetEnumerator() Dictionary<String, String>.IDictionary.Remove(Object) Dictionary<String, String>.Comparer Dictionary<String, String>.Count Dictionary<String, String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys Dictionary<String, String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values Dictionary<String, String>.Item[String] System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly Dictionary<String, String>.ICollection.IsSynchronized Dictionary<String, String>.ICollection.SyncRoot Dictionary<String, String>.IDictionary.IsFixedSize Dictionary<String, String>.IDictionary.IsReadOnly Dictionary<String, String>.IDictionary.Keys Dictionary<String, String>.IDictionary.Values Dictionary<String, String>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class BuildOutputs : OSPlatformSensitiveDictionary<string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.OSPlatformSensitiveDictionary-1.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.OSPlatformSensitiveDictionary-1.html",
    "title": "Class OSPlatformSensitiveDictionary<V> | DocFX website",
    "keywords": "Class OSPlatformSensitiveDictionary<V> Inheritance Object Dictionary < String , V> OSPlatformSensitiveDictionary<V> BuildOutputs FileMapItem PostProcessOutputs Inherited Members Dictionary<String, V>.Add(String, V) System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, V>>.Add(System.Collections.Generic.KeyValuePair<System.String, V>) System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, V>>.Contains(System.Collections.Generic.KeyValuePair<System.String, V>) System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, V>>.Remove(System.Collections.Generic.KeyValuePair<System.String, V>) Dictionary<String, V>.Clear() Dictionary<String, V>.ContainsKey(String) Dictionary<String, V>.ContainsValue(V) Dictionary<String, V>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, V>>.GetEnumerator() Dictionary<String, V>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, V>.OnDeserialization(Object) Dictionary<String, V>.Remove(String) Dictionary<String, V>.TryGetValue(String, V) System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, V>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, V>[], System.Int32) Dictionary<String, V>.ICollection.CopyTo(Array, Int32) Dictionary<String, V>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, V>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, V>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, V>.IDictionary.Add(Object, Object) Dictionary<String, V>.IDictionary.Contains(Object) Dictionary<String, V>.IDictionary.GetEnumerator() Dictionary<String, V>.IDictionary.Remove(Object) Dictionary<String, V>.Comparer Dictionary<String, V>.Count Dictionary<String, V>.Keys System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.IDictionary<System.String, V>.Keys System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.IReadOnlyDictionary<System.String, V>.Keys Dictionary<String, V>.Values System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.IDictionary<System.String, V>.Values System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.IReadOnlyDictionary<System.String, V>.Values Dictionary<String, V>.Item[String] System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, V>>.IsReadOnly Dictionary<String, V>.ICollection.IsSynchronized Dictionary<String, V>.ICollection.SyncRoot Dictionary<String, V>.IDictionary.IsFixedSize Dictionary<String, V>.IDictionary.IsReadOnly Dictionary<String, V>.IDictionary.Keys Dictionary<String, V>.IDictionary.Values Dictionary<String, V>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class OSPlatformSensitiveDictionary<V> : Dictionary<string, V>, IDictionary<string, V>, ICollection<KeyValuePair<string, V>>, IDictionary, ICollection, IReadOnlyDictionary<string, V>, IReadOnlyCollection<KeyValuePair<string, V>>, IEnumerable<KeyValuePair<string, V>>, IEnumerable, ISerializable, IDeserializationCallback Type Parameters Name Description V Constructors OSPlatformSensitiveDictionary() Declaration public OSPlatformSensitiveDictionary() OSPlatformSensitiveDictionary(IDictionary<String, V>) Declaration public OSPlatformSensitiveDictionary(IDictionary<string, V> dictionary) Parameters Type Name Description IDictionary < String , V> dictionary OSPlatformSensitiveDictionary(IEnumerable<KeyValuePair<String, V>>) Declaration public OSPlatformSensitiveDictionary(IEnumerable<KeyValuePair<string, V>> list) Parameters Type Name Description IEnumerable < KeyValuePair < String , V>> list Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.ExpandedDependencyItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.ExpandedDependencyItem.html",
    "title": "Class ExpandedDependencyItem | DocFX website",
    "keywords": "Class ExpandedDependencyItem Inheritance Object ExpandedDependencyItem Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ExpandedDependencyItem : IEquatable<ExpandedDependencyItem> Constructors ExpandedDependencyItem(String, String, String) Declaration [JsonConstructor] public ExpandedDependencyItem(string from, string to, string type) Parameters Type Name Description String from String to String type Properties From Declaration [JsonProperty(\"from\")] public string From { get; } Property Value Type Description String To Declaration [JsonProperty(\"to\")] public string To { get; } Property Value Type Description String Type Declaration [JsonProperty(\"type\")] public string Type { get; } Property Value Type Description String Methods ChangeFrom(String) Declaration public ExpandedDependencyItem ChangeFrom(string from) Parameters Type Name Description String from Returns Type Description ExpandedDependencyItem ChangeTo(String) Declaration public ExpandedDependencyItem ChangeTo(string to) Parameters Type Name Description String to Returns Type Description ExpandedDependencyItem ChangeType(String) Declaration public ExpandedDependencyItem ChangeType(string type) Parameters Type Name Description String type Returns Type Description ExpandedDependencyItem ConvertFrom(DependencyItem) Declaration public static ExpandedDependencyItem ConvertFrom(DependencyItem item) Parameters Type Name Description DependencyItem item Returns Type Description ExpandedDependencyItem Equals(ExpandedDependencyItem) Declaration public bool Equals(ExpandedDependencyItem dp) Parameters Type Name Description ExpandedDependencyItem dp Returns Type Description Boolean Implements IEquatable<T>.Equals(T) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.IXRefContainer.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.IXRefContainer.html",
    "title": "Interface IXRefContainer | DocFX website",
    "keywords": "Interface IXRefContainer Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public interface IXRefContainer Properties IsEmbeddedRedirections Declaration bool IsEmbeddedRedirections { get; } Property Value Type Description Boolean Methods GetReader() Declaration IXRefContainerReader GetReader() Returns Type Description IXRefContainerReader GetRedirections() Declaration IEnumerable<XRefMapRedirection> GetRedirections() Returns Type Description IEnumerable < XRefMapRedirection > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.IXRefContainerReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.IXRefContainerReader.html",
    "title": "Interface IXRefContainerReader | DocFX website",
    "keywords": "Interface IXRefContainerReader Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public interface IXRefContainerReader Methods Find(String) Declaration XRefSpec Find(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateManager.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateManager.html",
    "title": "Class TemplateManager | DocFX website",
    "keywords": "Class TemplateManager Inheritance Object TemplateManager Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class TemplateManager Constructors TemplateManager(Assembly, String, List<String>, List<String>, String) Declaration public TemplateManager(Assembly assembly, string rootNamespace, List<string> templates, List<string> themes, string baseDirectory) Parameters Type Name Description Assembly assembly String rootNamespace List < String > templates List < String > themes String baseDirectory Methods GetTemplateProcessor(DocumentBuildContext, Int32) Declaration public TemplateProcessor GetTemplateProcessor(DocumentBuildContext context, int maxParallelism) Parameters Type Name Description DocumentBuildContext context Int32 maxParallelism Returns Type Description TemplateProcessor GetTemplatesHash() Declaration public string GetTemplatesHash() Returns Type Description String ProcessTheme(String, Boolean) Declaration public void ProcessTheme(string outputDirectory, bool overwrite) Parameters Type Name Description String outputDirectory Boolean overwrite TryExportTemplateFiles(String, String) Declaration public bool TryExportTemplateFiles(string outputDirectory, string regexFilter = null) Parameters Type Name Description String outputDirectory String regexFilter Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateModelTransformer.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateModelTransformer.html",
    "title": "Class TemplateModelTransformer | DocFX website",
    "keywords": "Class TemplateModelTransformer Inheritance Object TemplateModelTransformer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateModelTransformer Constructors TemplateModelTransformer(DocumentBuildContext, TemplateCollection, ApplyTemplateSettings, IDictionary<String, Object>) Declaration public TemplateModelTransformer(DocumentBuildContext context, TemplateCollection templateCollection, ApplyTemplateSettings settings, IDictionary<string, object> globals) Parameters Type Name Description DocumentBuildContext context TemplateCollection templateCollection ApplyTemplateSettings settings IDictionary < String , Object > globals Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveReader.html",
    "title": "Class XRefArchiveReader | DocFX website",
    "keywords": "Class XRefArchiveReader Inheritance Object XRefRedirectionReader XRefArchiveReader Inherited Members XRefRedirectionReader.Find(String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefArchiveReader : XRefRedirectionReader, IXRefContainerReader, IDisposable Constructors XRefArchiveReader(XRefArchive) Declaration public XRefArchiveReader(XRefArchive archive) Parameters Type Name Description XRefArchive archive Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() GetMap(String) Declaration protected override IXRefContainer GetMap(string name) Parameters Type Name Description String name Returns Type Description IXRefContainer Overrides XRefRedirectionReader.GetMap(String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMap.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMap.html",
    "title": "Class XRefMap | DocFX website",
    "keywords": "Class XRefMap Inheritance Object XRefMap Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefMap : IXRefContainer Properties BaseUrl Declaration [YamlMember(Alias = \"baseUrl\")] public string BaseUrl { get; set; } Property Value Type Description String HrefUpdated Declaration [YamlMember(Alias = \"hrefUpdated\")] public bool ? HrefUpdated { get; set; } Property Value Type Description Nullable < Boolean > IsEmbeddedRedirections Declaration public bool IsEmbeddedRedirections { get; } Property Value Type Description Boolean Implements IXRefContainer.IsEmbeddedRedirections Others Declaration [ExtensibleMember] public Dictionary<string, object> Others { get; set; } Property Value Type Description Dictionary < String , Object > Redirections Declaration [YamlMember(Alias = \"redirections\")] public List<XRefMapRedirection> Redirections { get; set; } Property Value Type Description List < XRefMapRedirection > References Declaration [YamlMember(Alias = \"references\")] public List<XRefSpec> References { get; set; } Property Value Type Description List < XRefSpec > Sorted Declaration [YamlMember(Alias = \"sorted\")] public bool ? Sorted { get; set; } Property Value Type Description Nullable < Boolean > Methods GetReader() Declaration public IXRefContainerReader GetReader() Returns Type Description IXRefContainerReader Implements IXRefContainer.GetReader() GetRedirections() Declaration public IEnumerable<XRefMapRedirection> GetRedirections() Returns Type Description IEnumerable < XRefMapRedirection > Implements IXRefContainer.GetRedirections() Sort() Declaration public void Sort() UpdateHref(Uri) Declaration public void UpdateHref(Uri baseUri) Parameters Type Name Description Uri baseUri Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiNames.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiNames.html",
    "title": "Class ApiNames | DocFX website",
    "keywords": "Class ApiNames Inheritance Object ApiNames Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiNames Properties Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public List<ApiLanguageValuePair> FullName { get; set; } Property Value Type Description List < ApiLanguageValuePair > Id Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Id { get; set; } Property Value Type Description String Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public List<ApiLanguageValuePair> Name { get; set; } Property Value Type Description List < ApiLanguageValuePair > NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public List<ApiLanguageValuePair> NameWithType { get; set; } Property Value Type Description List < ApiLanguageValuePair > Spec Declaration [YamlMember(Alias = \"specName\")] [JsonProperty(\"specName\")] public List<ApiLanguageValuePair> Spec { get; set; } Property Value Type Description List < ApiLanguageValuePair > Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods FromUid(String) Declaration public static ApiNames FromUid(string uid) Parameters Type Name Description String uid Returns Type Description ApiNames Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiParameterBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiParameterBuildOutput.html",
    "title": "Class ApiParameterBuildOutput | DocFX website",
    "keywords": "Class ApiParameterBuildOutput Inheritance Object ApiParameterBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiParameterBuildOutput Properties Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames Methods Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages FromModel(ApiParameter) Declaration public static ApiParameterBuildOutput FromModel(ApiParameter model) Parameters Type Name Description ApiParameter model Returns Type Description ApiParameterBuildOutput FromModel(ApiParameter, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiParameterBuildOutput FromModel(ApiParameter model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description ApiParameter model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiParameterBuildOutput Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.RestApiDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.RestApiDocumentProcessor.html",
    "title": "Class RestApiDocumentProcessor | DocFX website",
    "keywords": "Class RestApiDocumentProcessor Inheritance Object DisposableDocumentProcessor ReferenceDocumentProcessorBase RestApiDocumentProcessor Inherited Members ReferenceDocumentProcessorBase.Load(FileAndType, ImmutableDictionary<String, Object>) ReferenceDocumentProcessorBase.LoadOverwrite(FileAndType, ImmutableDictionary<String, Object>) DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(typeof (IDocumentProcessor))] public class RestApiDocumentProcessor : ReferenceDocumentProcessorBase, IDocumentProcessor, IDisposable Fields SystemKeys Declaration protected static readonly string[] SystemKeys Field Value Type Description String [] Properties BuildSteps Declaration [ImportMany(\"RestApiDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name ProcessedDocumentType Declaration protected override string ProcessedDocumentType { get; } Property Value Type Description String Overrides ReferenceDocumentProcessorBase.ProcessedDocumentType Methods GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Overrides DisposableDocumentProcessor.GetProcessingPriority(FileAndType) LoadArticle(FileAndType, ImmutableDictionary<String, Object>) Declaration protected override FileModel LoadArticle(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides ReferenceDocumentProcessorBase.LoadArticle(FileAndType, ImmutableDictionary<String, Object>) Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides ReferenceDocumentProcessorBase.Save(FileModel) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.InfoObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.InfoObject.html",
    "title": "Class InfoObject | DocFX website",
    "keywords": "Class InfoObject Info object Inheritance Object InfoObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class InfoObject Properties PatternedObjects Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> PatternedObjects { get; set; } Property Value Type Description Dictionary < String , Object > Title Required. The title of the application. Declaration [YamlMember(Alias = \"title\")] [JsonProperty(\"title\")] public string Title { get; set; } Property Value Type Description String Version Required. Provides the version of the application API Declaration [YamlMember(Alias = \"version\")] [JsonProperty(\"version\")] public string Version { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.CommandUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.CommandUtility.html",
    "title": "Class CommandUtility | DocFX website",
    "keywords": "Class CommandUtility Inheritance Object CommandUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class CommandUtility Methods ExistCommand(String) Declaration public static bool ExistCommand(string commandName) Parameters Type Name Description String commandName Returns Type Description Boolean RunCommand(CommandInfo, StreamWriter, StreamWriter, Int32) Declaration public static int RunCommand(CommandInfo commandInfo, StreamWriter stdoutWriter = null, StreamWriter stderrWriter = null, int timeoutInMilliseconds = -1) Parameters Type Name Description CommandInfo commandInfo StreamWriter stdoutWriter StreamWriter stderrWriter Int32 timeoutInMilliseconds Returns Type Description Int32"
  },
  "api/Microsoft.DocAsCode.Common.CompositeDictionary.Builder.html": {
    "href": "api/Microsoft.DocAsCode.Common.CompositeDictionary.Builder.html",
    "title": "Class CompositeDictionary.Builder | DocFX website",
    "keywords": "Class CompositeDictionary.Builder Inheritance Object CompositeDictionary.Builder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class Builder Methods Add<TValue>(String, IDictionary<String, TValue>, Func<Object, TValue>) Declaration public CompositeDictionary.Builder Add<TValue>(string prefix, IDictionary<string, TValue> dict, Func<object, TValue> valueConverter = null) Parameters Type Name Description String prefix IDictionary < String , TValue> dict Func < Object , TValue> valueConverter Returns Type Description CompositeDictionary.Builder Type Parameters Name Description TValue Create() Declaration public CompositeDictionary Create() Returns Type Description CompositeDictionary Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.CompositeDictionary.html": {
    "href": "api/Microsoft.DocAsCode.Common.CompositeDictionary.html",
    "title": "Class CompositeDictionary | DocFX website",
    "keywords": "Class CompositeDictionary Inheritance Object CompositeDictionary Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class CompositeDictionary : IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable Constructors CompositeDictionary() Declaration public CompositeDictionary() Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Implements ICollection<T>.Count IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Implements ICollection<T>.IsReadOnly Item[String] Declaration public object this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description Object Implements IDictionary<TKey, TValue>.Item[TKey] Keys Declaration public ICollection<string> Keys { get; } Property Value Type Description ICollection < String > Implements IDictionary<TKey, TValue>.Keys Values Declaration public ICollection<object> Values { get; } Property Value Type Description ICollection < Object > Implements IDictionary<TKey, TValue>.Values Methods Add(String, Object) Declaration public void Add(string key, object value) Parameters Type Name Description String key Object value Implements IDictionary<TKey, TValue>.Add(TKey, TValue) Clear() Declaration public void Clear() Implements ICollection<T>.Clear() ContainsKey(String) Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean Implements IDictionary<TKey, TValue>.ContainsKey(TKey) CreateBuilder() Declaration public static CompositeDictionary.Builder CreateBuilder() Returns Type Description CompositeDictionary.Builder GetEnumerator() Declaration public IEnumerator<KeyValuePair<string, object>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < String , Object >> Implements IEnumerable<T>.GetEnumerator() Remove(String) Declaration public bool Remove(string key) Parameters Type Name Description String key Returns Type Description Boolean Implements IDictionary<TKey, TValue>.Remove(TKey) TryGetValue(String, out Object) Declaration public bool TryGetValue(string key, out object value) Parameters Type Name Description String key Object value Returns Type Description Boolean Implements IDictionary<TKey, TValue>.TryGetValue(TKey, TValue) Explicit Interface Implementations ICollection<KeyValuePair<String, Object>>.Add(KeyValuePair<String, Object>) Declaration void ICollection<KeyValuePair<string, object>>.Add(KeyValuePair<string, object> item) Parameters Type Name Description KeyValuePair < String , Object > item Implements ICollection<T>.Add(T) ICollection<KeyValuePair<String, Object>>.Contains(KeyValuePair<String, Object>) Declaration bool ICollection<KeyValuePair<string, object>>.Contains(KeyValuePair<string, object> item) Parameters Type Name Description KeyValuePair < String , Object > item Returns Type Description Boolean Implements ICollection<T>.Contains(T) ICollection<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[], Int32) Declaration void ICollection<KeyValuePair<string, object>>.CopyTo(KeyValuePair<string, object>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair < String , Object >[] array Int32 arrayIndex Implements ICollection<T>.CopyTo(T[], Int32) ICollection<KeyValuePair<String, Object>>.Remove(KeyValuePair<String, Object>) Declaration bool ICollection<KeyValuePair<string, object>>.Remove(KeyValuePair<string, object> item) Parameters Type Name Description KeyValuePair < String , Object > item Returns Type Description Boolean Implements ICollection<T>.Remove(T) IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements IEnumerable.GetEnumerator() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Common.CompositeLogListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.CompositeLogListener.html",
    "title": "Class CompositeLogListener | DocFX website",
    "keywords": "Class CompositeLogListener Inheritance Object CompositeLogListener Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class CompositeLogListener : ILoggerListener, IDisposable Constructors CompositeLogListener() Declaration public CompositeLogListener() CompositeLogListener(IEnumerable<ILoggerListener>) Declaration public CompositeLogListener(IEnumerable<ILoggerListener> listeners) Parameters Type Name Description IEnumerable < ILoggerListener > listeners Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Methods AddListener(ILoggerListener) Declaration public void AddListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener AddListeners(IEnumerable<ILoggerListener>) Declaration public void AddListeners(IEnumerable<ILoggerListener> listeners) Parameters Type Name Description IEnumerable < ILoggerListener > listeners Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() FindListener(Predicate<ILoggerListener>) Declaration public ILoggerListener FindListener(Predicate<ILoggerListener> predicate) Parameters Type Name Description Predicate < ILoggerListener > predicate Returns Type Description ILoggerListener Flush() Declaration public void Flush() Implements ILoggerListener.Flush() RemoveAllListeners() Declaration public void RemoveAllListeners() RemoveListener(ILoggerListener) Declaration public void RemoveListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.ReflectionEntityMerger.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.ReflectionEntityMerger.html",
    "title": "Class ReflectionEntityMerger | DocFX website",
    "keywords": "Class ReflectionEntityMerger Inheritance Object ReflectionEntityMerger Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ReflectionEntityMerger : IMerger Explicit Interface Implementations IMerger.Merge(ref Object, Object, Type, IMergeContext) Declaration void IMerger.Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Implements IMerger.Merge(ref Object, Object, Type, IMergeContext) IMerger.TestKey(Object, Object, Type, IMergeContext) Declaration bool IMerger.TestKey(object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Returns Type Description Boolean Implements IMerger.TestKey(Object, Object, Type, IMergeContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.html",
    "title": "Namespace Microsoft.DocAsCode.Common.EntityMergers | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Common.EntityMergers Classes DictionaryMerger JArrayMerger JObjectMerger KeyedListMerger MergeOptionAttribute MergerDecorator MergerFacade ReflectionEntityMerger Interfaces IMergeContext IMergeHandler IMerger Enums MergeOption"
  },
  "api/Microsoft.DocAsCode.Common.FileAbstractLayer.html": {
    "href": "api/Microsoft.DocAsCode.Common.FileAbstractLayer.html",
    "title": "Class FileAbstractLayer | DocFX website",
    "keywords": "Class FileAbstractLayer Inheritance Object FileAbstractLayer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class FileAbstractLayer : IFileAbstractLayer, IDisposable Properties CanRead Declaration public bool CanRead { get; } Property Value Type Description Boolean Implements IFileAbstractLayer.CanRead CanWrite Declaration public bool CanWrite { get; } Property Value Type Description Boolean Implements IFileAbstractLayer.CanWrite Reader Declaration public IFileReader Reader { get; } Property Value Type Description IFileReader Writer Declaration public IFileWriter Writer { get; } Property Value Type Description IFileWriter Methods Copy(RelativePath, RelativePath) Declaration public void Copy(RelativePath sourceFileName, RelativePath destFileName) Parameters Type Name Description RelativePath sourceFileName RelativePath destFileName Copy(String, String) Declaration public void Copy(string sourceFileName, string destFileName) Parameters Type Name Description String sourceFileName String destFileName Implements IFileAbstractLayer.Copy(String, String) Create(RelativePath) Declaration public Stream Create(RelativePath file) Parameters Type Name Description RelativePath file Returns Type Description Stream Create(String) Declaration public Stream Create(string file) Parameters Type Name Description String file Returns Type Description Stream Implements IFileAbstractLayer.Create(String) CreateRandomFile() Declaration public Tuple<string, Stream> CreateRandomFile() Returns Type Description Tuple < String , Stream > CreateRandomFileName() Declaration public string CreateRandomFileName() Returns Type Description String Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Exists(RelativePath) Declaration public bool Exists(RelativePath file) Parameters Type Name Description RelativePath file Returns Type Description Boolean Exists(String) Declaration public bool Exists(string file) Parameters Type Name Description String file Returns Type Description Boolean Implements IFileAbstractLayer.Exists(String) GetAllInputFiles() Declaration public IEnumerable<RelativePath> GetAllInputFiles() Returns Type Description IEnumerable < RelativePath > GetPhysicalPath(RelativePath) Declaration public string GetPhysicalPath(RelativePath file) Parameters Type Name Description RelativePath file Returns Type Description String GetPhysicalPath(String) Declaration public string GetPhysicalPath(string file) Parameters Type Name Description String file Returns Type Description String Implements IFileAbstractLayer.GetPhysicalPath(String) GetProperties(RelativePath) Declaration public ImmutableDictionary<string, string> GetProperties(RelativePath file) Parameters Type Name Description RelativePath file Returns Type Description System.Collections.Immutable.ImmutableDictionary < String , String > GetProperties(String) Declaration public ImmutableDictionary<string, string> GetProperties(string file) Parameters Type Name Description String file Returns Type Description System.Collections.Immutable.ImmutableDictionary < String , String > Implements IFileAbstractLayer.GetProperties(String) OpenRead(RelativePath) Declaration public Stream OpenRead(RelativePath file) Parameters Type Name Description RelativePath file Returns Type Description Stream OpenRead(String) Declaration public Stream OpenRead(string file) Parameters Type Name Description String file Returns Type Description Stream Implements IFileAbstractLayer.OpenRead(String) Explicit Interface Implementations IFileAbstractLayer.GetAllInputFiles() Declaration IEnumerable<string> IFileAbstractLayer.GetAllInputFiles() Returns Type Description IEnumerable < String > Implements IFileAbstractLayer.GetAllInputFiles() Extension Methods FileAbstractLayerExtensions.Exists(FileAbstractLayer, String) FileAbstractLayerExtensions.OpenReadText(FileAbstractLayer, RelativePath) FileAbstractLayerExtensions.OpenReadText(FileAbstractLayer, String) FileAbstractLayerExtensions.ReadAllText(FileAbstractLayer, RelativePath) FileAbstractLayerExtensions.ReadAllText(FileAbstractLayer, String) FileAbstractLayerExtensions.CreateText(FileAbstractLayer, RelativePath) FileAbstractLayerExtensions.CreateText(FileAbstractLayer, String) FileAbstractLayerExtensions.WriteAllText(FileAbstractLayer, RelativePath, String) FileAbstractLayerExtensions.WriteAllText(FileAbstractLayer, String, String) FileAbstractLayerExtensions.HasProperty(FileAbstractLayer, RelativePath, String) FileAbstractLayerExtensions.HasProperty(FileAbstractLayer, String, String) FileAbstractLayerExtensions.GetProperty(FileAbstractLayer, RelativePath, String) FileAbstractLayerExtensions.GetProperty(FileAbstractLayer, String, String) FileAbstractLayerExtensions.GetAllPhysicalPaths(FileAbstractLayer) FileAbstractLayerExtensions.GetOutputPhysicalPath(FileAbstractLayer, String) FileAbstractLayerExtensions.GetOutputPhysicalPath(FileAbstractLayer, RelativePath) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.FileAbstractLayerBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Common.FileAbstractLayerBuilder.html",
    "title": "Class FileAbstractLayerBuilder | DocFX website",
    "keywords": "Class FileAbstractLayerBuilder Inheritance Object FileAbstractLayerBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class FileAbstractLayerBuilder Fields Default Declaration public static readonly FileAbstractLayerBuilder Default Field Value Type Description FileAbstractLayerBuilder Methods Create() Declaration public FileAbstractLayer Create() Returns Type Description FileAbstractLayer CreateBuilder(FileAbstractLayer) Declaration public static FileAbstractLayerBuilder CreateBuilder(FileAbstractLayer fal) Parameters Type Name Description FileAbstractLayer fal Returns Type Description FileAbstractLayerBuilder FallbackReadFromInput(FileAbstractLayer) Declaration public FileAbstractLayerBuilder FallbackReadFromInput(FileAbstractLayer fal) Parameters Type Name Description FileAbstractLayer fal Returns Type Description FileAbstractLayerBuilder FallbackReadFromOutput(FileAbstractLayer) Declaration public FileAbstractLayerBuilder FallbackReadFromOutput(FileAbstractLayer fal) Parameters Type Name Description FileAbstractLayer fal Returns Type Description FileAbstractLayerBuilder ReadFromLink(PathMapping[]) Declaration public FileAbstractLayerBuilder ReadFromLink(params PathMapping[] mappings) Parameters Type Name Description PathMapping [] mappings Returns Type Description FileAbstractLayerBuilder ReadFromManifest(Manifest, String) Declaration public FileAbstractLayerBuilder ReadFromManifest(Manifest manifest, string manifestFolder) Parameters Type Name Description Manifest manifest String manifestFolder Returns Type Description FileAbstractLayerBuilder ReadFromOutput(FileAbstractLayer) Declaration public FileAbstractLayerBuilder ReadFromOutput(FileAbstractLayer fal) Parameters Type Name Description FileAbstractLayer fal Returns Type Description FileAbstractLayerBuilder ReadFromRealFileSystem(String) Declaration public FileAbstractLayerBuilder ReadFromRealFileSystem(string folder) Parameters Type Name Description String folder Returns Type Description FileAbstractLayerBuilder ReadFromRealFileSystem(String, ImmutableDictionary<String, String>) Declaration public FileAbstractLayerBuilder ReadFromRealFileSystem(string folder, ImmutableDictionary<string, string> properties) Parameters Type Name Description String folder System.Collections.Immutable.ImmutableDictionary < String , String > properties Returns Type Description FileAbstractLayerBuilder WriteToLink(String) Declaration public FileAbstractLayerBuilder WriteToLink(string folder) Parameters Type Name Description String folder Returns Type Description FileAbstractLayerBuilder WriteToManifest(Manifest, String, String) Declaration public FileAbstractLayerBuilder WriteToManifest(Manifest manifest, string manifestFolder, string outputFolder = null) Parameters Type Name Description Manifest manifest String manifestFolder String outputFolder Returns Type Description FileAbstractLayerBuilder WriteToRealFileSystem(String) Declaration public FileAbstractLayerBuilder WriteToRealFileSystem(string folder) Parameters Type Name Description String folder Returns Type Description FileAbstractLayerBuilder Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.PerformanceScope.html": {
    "href": "api/Microsoft.DocAsCode.Common.PerformanceScope.html",
    "title": "Class PerformanceScope | DocFX website",
    "keywords": "Class PerformanceScope Inheritance Object PerformanceScope Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class PerformanceScope : IDisposable Constructors PerformanceScope(Action<TimeSpan>) Declaration public PerformanceScope(Action<TimeSpan> logger = null) Parameters Type Name Description Action < System.TimeSpan > logger PerformanceScope(String) Declaration public PerformanceScope(string content) Parameters Type Name Description String content PerformanceScope(String, LogLevel) Declaration public PerformanceScope(string content, LogLevel level) Parameters Type Name Description String content LogLevel level Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ProcessDetail.html": {
    "href": "api/Microsoft.DocAsCode.Common.ProcessDetail.html",
    "title": "Class ProcessDetail | DocFX website",
    "keywords": "Class ProcessDetail Inheritance Object ProcessDetail Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ProcessDetail Properties Arguments Declaration public string Arguments { get; set; } Property Value Type Description String ExecutorPath Declaration public string ExecutorPath { get; set; } Property Value Type Description String ExitCode Declaration public int ExitCode { get; set; } Property Value Type Description Int32 ProcessId Declaration public int ProcessId { get; set; } Property Value Type Description Int32 StandardError Declaration public string StandardError { get; set; } Property Value Type Description String StandardOutput Declaration public string StandardOutput { get; set; } Property Value Type Description String WorkingDirectory Declaration public string WorkingDirectory { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.RealFileReader.html": {
    "href": "api/Microsoft.DocAsCode.Common.RealFileReader.html",
    "title": "Class RealFileReader | DocFX website",
    "keywords": "Class RealFileReader Inheritance Object RealFileReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class RealFileReader : IFileReader Constructors RealFileReader(String, ImmutableDictionary<String, String>) Declaration public RealFileReader(string inputFolder, ImmutableDictionary<string, string> properties) Parameters Type Name Description String inputFolder System.Collections.Immutable.ImmutableDictionary < String , String > properties Properties InputFolder Declaration public string InputFolder { get; } Property Value Type Description String Properties Declaration public ImmutableDictionary<string, string> Properties { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , String > Methods EnumerateFiles() Declaration public IEnumerable<RelativePath> EnumerateFiles() Returns Type Description IEnumerable < RelativePath > Implements IFileReader.EnumerateFiles() FindFile(RelativePath) Declaration public PathMapping? FindFile(RelativePath file) Parameters Type Name Description RelativePath file Returns Type Description Nullable < PathMapping > Implements IFileReader.FindFile(RelativePath) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.RealFileWriter.html": {
    "href": "api/Microsoft.DocAsCode.Common.RealFileWriter.html",
    "title": "Class RealFileWriter | DocFX website",
    "keywords": "Class RealFileWriter Inheritance Object FileWriterBase RealFileWriter Inherited Members FileWriterBase.OutputFolder FileWriterBase.ExpandedOutputFolder FileWriterBase.EnsureFolder(String) FileWriterBase.GetRandomEntry() FileWriterBase.CreateRandomFileStream() FileWriterBase.RetryIO<T>(Func<T>) FileWriterBase.RetryIO(Action) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class RealFileWriter : FileWriterBase, IFileWriter, ISupportRandomFileWriter Constructors RealFileWriter(String) Declaration public RealFileWriter(string outputFolder) Parameters Type Name Description String outputFolder Methods Copy(PathMapping, RelativePath) Declaration public override void Copy(PathMapping sourceFileName, RelativePath destFileName) Parameters Type Name Description PathMapping sourceFileName RelativePath destFileName Overrides FileWriterBase.Copy(PathMapping, RelativePath) Create(RelativePath) Declaration public override Stream Create(RelativePath file) Parameters Type Name Description RelativePath file Returns Type Description Stream Overrides FileWriterBase.Create(RelativePath) CreateRandomFile() Declaration public Tuple<string, Stream> CreateRandomFile() Returns Type Description Tuple < String , Stream > Implements ISupportRandomFileWriter.CreateRandomFile() CreateRandomFileName() Declaration public string CreateRandomFileName() Returns Type Description String Implements ISupportRandomFileWriter.CreateRandomFileName() CreateReader() Declaration public override IFileReader CreateReader() Returns Type Description IFileReader Overrides FileWriterBase.CreateReader() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageCollection.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageCollection.html",
    "title": "Class ExternalReferencePackageCollection | DocFX website",
    "keywords": "Class ExternalReferencePackageCollection Inheritance Object ExternalReferencePackageCollection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public class ExternalReferencePackageCollection : IDisposable Constructors ExternalReferencePackageCollection(IEnumerable<String>, Int32) Declaration public ExternalReferencePackageCollection(IEnumerable<string> packageFiles, int maxParallelism) Parameters Type Name Description IEnumerable < String > packageFiles Int32 maxParallelism Properties Readers Declaration public ImmutableList<ExternalReferencePackageReader> Readers { get; } Property Value Type Description System.Collections.Immutable.ImmutableList < ExternalReferencePackageReader > Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Finalize() Declaration protected void Finalize() TryGetReference(String, out ReferenceViewModel) Declaration public bool TryGetReference(string uid, out ReferenceViewModel vm) Parameters Type Name Description String uid ReferenceViewModel vm Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageReader.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageReader.html",
    "title": "Class ExternalReferencePackageReader | DocFX website",
    "keywords": "Class ExternalReferencePackageReader Inheritance Object ExternalReferencePackageReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public class ExternalReferencePackageReader : IDisposable Constructors ExternalReferencePackageReader(String) Declaration public ExternalReferencePackageReader(string packageFile) Parameters Type Name Description String packageFile Methods CreateNoThrow(String) Declaration public static ExternalReferencePackageReader CreateNoThrow(string packageFile) Parameters Type Name Description String packageFile Returns Type Description ExternalReferencePackageReader Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Finalize() Declaration protected void Finalize() SeekUidIndex(String) Declaration protected virtual int SeekUidIndex(string uid) Parameters Type Name Description String uid Returns Type Description Int32 TryGetReference(String, out ReferenceViewModel) Declaration public bool TryGetReference(string uid, out ReferenceViewModel vm) Parameters Type Name Description String uid ReferenceViewModel vm Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageWriter.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageWriter.html",
    "title": "Class ExternalReferencePackageWriter | DocFX website",
    "keywords": "Class ExternalReferencePackageWriter Inheritance Object ExternalReferencePackageWriter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public class ExternalReferencePackageWriter : IDisposable Methods AddOrUpdateEntry(String, List<ReferenceViewModel>) Declaration public void AddOrUpdateEntry(string entryName, List<ReferenceViewModel> vm) Parameters Type Name Description String entryName List < ReferenceViewModel > vm Append(String, Uri) Declaration public static ExternalReferencePackageWriter Append(string packageFile, Uri baseUri) Parameters Type Name Description String packageFile Uri baseUri Returns Type Description ExternalReferencePackageWriter Create(String, Uri) Declaration public static ExternalReferencePackageWriter Create(string packageFile, Uri baseUri) Parameters Type Name Description String packageFile Uri baseUri Returns Type Description ExternalReferencePackageWriter Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.IOverwriteDocumentViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.IOverwriteDocumentViewModel.html",
    "title": "Interface IOverwriteDocumentViewModel | DocFX website",
    "keywords": "Interface IOverwriteDocumentViewModel Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public interface IOverwriteDocumentViewModel Properties Conceptual The markdown content from the overwrite document Declaration string Conceptual { get; set; } Property Value Type Description String Documentation The details for current overwrite document, containing the start/end line numbers, file path, and git info. Declaration SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail Uid The uid for this overwrite document, as defined in YAML header Declaration string Uid { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseExampleViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseExampleViewModel.html",
    "title": "Class RestApiResponseExampleViewModel | DocFX website",
    "keywords": "Class RestApiResponseExampleViewModel Inheritance Object RestApiResponseExampleViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiResponseExampleViewModel Properties Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public string Content { get; set; } Property Value Type Description String MimeType Declaration [YamlMember(Alias = \"mimeType\")] [JsonProperty(\"mimeType\")] public string MimeType { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseViewModel.html",
    "title": "Class RestApiResponseViewModel | DocFX website",
    "keywords": "Class RestApiResponseViewModel Inheritance Object RestApiResponseViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiResponseViewModel Properties Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Examples Declaration [YamlMember(Alias = \"examples\")] [JsonProperty(\"examples\")] public List<RestApiResponseExampleViewModel> Examples { get; set; } Property Value Type Description List < RestApiResponseExampleViewModel > HttpStatusCode Declaration [YamlMember(Alias = \"statusCode\")] [JsonProperty(\"statusCode\")] [MergeOption(MergeOption.MergeKey)] public string HttpStatusCode { get; set; } Property Value Type Description String Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiRootItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiRootItemViewModel.html",
    "title": "Class RestApiRootItemViewModel | DocFX website",
    "keywords": "Class RestApiRootItemViewModel Inheritance Object RestApiItemViewModelBase RestApiRootItemViewModel Inherited Members RestApiItemViewModelBase.Uid RestApiItemViewModelBase.HtmlId RestApiItemViewModelBase.Name RestApiItemViewModelBase.Conceptual RestApiItemViewModelBase.Description RestApiItemViewModelBase.Remarks RestApiItemViewModelBase.Summary RestApiItemViewModelBase.Documentation RestApiItemViewModelBase.Metadata Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiRootItemViewModel : RestApiItemViewModelBase, IOverwriteDocumentViewModel Properties Children Declaration [YamlMember(Alias = \"children\")] [JsonProperty(\"children\")] public List<RestApiChildItemViewModel> Children { get; set; } Property Value Type Description List < RestApiChildItemViewModel > Raw The original swagger.json content _ prefix indicates that this metadata is generated Declaration [YamlMember(Alias = \"_raw\")] [JsonProperty(\"_raw\")] [MergeOption(MergeOption.Ignore)] public string Raw { get; set; } Property Value Type Description String Tags Declaration [YamlMember(Alias = \"tags\")] [JsonProperty(\"tags\")] public List<RestApiTagViewModel> Tags { get; set; } Property Value Type Description List < RestApiTagViewModel > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiTagViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiTagViewModel.html",
    "title": "Class RestApiTagViewModel | DocFX website",
    "keywords": "Class RestApiTagViewModel Inheritance Object RestApiTagViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiTagViewModel : IOverwriteDocumentViewModel Properties Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Conceptual Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] [MergeOption(MergeOption.Ignore)] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail Implements IOverwriteDocumentViewModel.Documentation HtmlId Declaration [YamlMember(Alias = \"htmlId\")] [JsonProperty(\"htmlId\")] [MergeOption(MergeOption.Ignore)] public string HtmlId { get; set; } Property Value Type Description String Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] [MergeOption(MergeOption.MergeKey)] public string Uid { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Uid Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockRule.html",
    "title": "Class DfmNoteBlockRule | DocFX website",
    "keywords": "Class DfmNoteBlockRule Inheritance Object DfmNoteBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmNoteBlockRule : IMarkdownRule Properties DfmNoteRegex Declaration [Obsolete] public virtual Regex DfmNoteRegex { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name NoteMatcher Declaration public virtual Matcher NoteMatcher { get; } Property Value Type Description Matcher Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockToken.html",
    "title": "Class DfmNoteBlockToken | DocFX website",
    "keywords": "Class DfmNoteBlockToken Inheritance Object DfmNoteBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmNoteBlockToken : IMarkdownToken, IDfmBlockSpecialSplitToken Constructors DfmNoteBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public DfmNoteBlockToken(IMarkdownRule rule, IMarkdownContext context, string noteType, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String noteType String content SourceInfo sourceInfo Properties Content Declaration public string Content { get; } Property Value Type Description String Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context NoteType Declaration public string NoteType { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmRenderer.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmRenderer.html",
    "title": "Class DfmRenderer | DocFX website",
    "keywords": "Class DfmRenderer Inheritance Object HtmlRenderer DfmRenderer Inherited Members HtmlRenderer.Render(IMarkdownRenderer, MarkdownNewLineBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownCodeBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownListItemBlockToken) HtmlRenderer.Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownTextToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownEscapeInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownCodeInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownTagInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownBrInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, GfmEmojiInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownTextToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownIgnoreToken, IMarkdownContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownRawToken, IMarkdownContext) HtmlRenderer.AppendSourceInfo(StringBuffer, IMarkdownRenderer, IMarkdownToken) HtmlRenderer.AppendAttribute(StringBuffer, String, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmRenderer : HtmlRenderer, IDisposable Properties Tokens Declaration public ImmutableDictionary<string, string> Tokens { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , String > Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Render(IMarkdownRenderer, DfmFencesBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmFencesBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmFencesToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmFencesToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesToken token IMarkdownContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmIncludeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmIncludeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmIncludeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmIncludeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmNoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmNoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmVideoBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmVideoBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmXrefInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmXrefInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmXrefInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmYamlHeaderBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmYamlHeaderBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public override StringBuffer Render(IMarkdownRenderer renderer, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Overrides HtmlRenderer.Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockRule.html",
    "title": "Class DfmSectionBlockRule | DocFX website",
    "keywords": "Class DfmSectionBlockRule Inheritance Object DfmSectionBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmSectionBlockRule : IMarkdownRule Properties Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownTagValidationRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownTagValidationRule.html",
    "title": "Class MarkdownTagValidationRule | DocFX website",
    "keywords": "Class MarkdownTagValidationRule Inheritance Object MarkdownTagValidationRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownTagValidationRule Properties Behavior Define tag's behavior. Declaration [JsonProperty(\"behavior\", Required = Required.Always)] public TagValidationBehavior Behavior { get; set; } Property Value Type Description TagValidationBehavior CustomValidatorContractName The contract name for custom validator ICustomMarkdownTagValidator . Declaration [JsonProperty(\"customValidatorContractName\")] public string CustomValidatorContractName { get; set; } Property Value Type Description String Disable Whether to disable this rule by default. Declaration [JsonProperty(\"disable\")] public bool Disable { get; set; } Property Value Type Description Boolean MessageFormatter The message formatter for warning and error. '{0}' is name of tag, '{1}' is the full tag. Declaration [JsonProperty(\"messageFormatter\", Required = Required.Always)] public string MessageFormatter { get; set; } Property Value Type Description String OpeningTagOnly Only validate opening tag. Declaration [JsonProperty(\"openingTagOnly\")] public bool OpeningTagOnly { get; set; } Property Value Type Description Boolean Relation The relation for tags. Declaration [JsonProperty(\"relation\")] public TagRelation Relation { get; set; } Property Value Type Description TagRelation TagNames The names of tag. Declaration [JsonProperty(\"tagNames\", Required = Required.Always)] public List<string> TagNames { get; set; } Property Value Type Description List < String > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidationRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidationRule.html",
    "title": "Class MarkdownValidationRule | DocFX website",
    "keywords": "Class MarkdownValidationRule Inheritance Object MarkdownValidationRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownValidationRule Properties ContractName The contract name of rule. Declaration [JsonProperty(\"contractName\")] public string ContractName { get; set; } Property Value Type Description String Disable Whether to disable this rule by default. Declaration [JsonProperty(\"disable\")] public bool Disable { get; set; } Property Value Type Description Boolean RuleName The contract name of rule. Declaration [Obsolete(\"Please use ContractName.\")] [JsonProperty(\"name\")] public string RuleName { get; set; } Property Value Type Description String Operators Explicit(String to MarkdownValidationRule) Declaration public static explicit operator MarkdownValidationRule(string contractName) Parameters Type Name Description String contractName Returns Type Description MarkdownValidationRule Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidationSetting.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidationSetting.html",
    "title": "Class MarkdownValidationSetting | DocFX website",
    "keywords": "Class MarkdownValidationSetting Inheritance Object MarkdownValidationSetting Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownValidationSetting Properties Category The category of rule Declaration [JsonProperty(\"category\", Required = Required.Always)] public string Category { get; set; } Property Value Type Description String Disable Whether to disable this rule by default. Declaration [JsonProperty(\"disable\")] public bool Disable { get; set; } Property Value Type Description Boolean Id The id of rule. Declaration [JsonProperty(\"id\")] public string Id { get; set; } Property Value Type Description String Operators Explicit(String to MarkdownValidationSetting) Declaration public static explicit operator MarkdownValidationSetting(string category) Parameters Type Name Description String category Returns Type Description MarkdownValidationSetting Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidatorBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidatorBuilder.html",
    "title": "Class MarkdownValidatorBuilder | DocFX website",
    "keywords": "Class MarkdownValidatorBuilder Inheritance Object MarkdownValidatorBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownValidatorBuilder Constructors MarkdownValidatorBuilder(CompositionHost) Declaration public MarkdownValidatorBuilder(CompositionHost host) Parameters Type Name Description System.Composition.Hosting.CompositionHost host Fields DefaultValidatorName Declaration public const string DefaultValidatorName = \"default\" Field Value Type Description String MarkdownValidatePhaseName Declaration public const string MarkdownValidatePhaseName = \"Markdown style\" Field Value Type Description String Properties CompositionHost Declaration public CompositionHost CompositionHost { get; } Property Value Type Description System.Composition.Hosting.CompositionHost Methods AddMetadataValidators(MarkdownMetadataValidationRule[]) Declaration public void AddMetadataValidators(MarkdownMetadataValidationRule[] rules) Parameters Type Name Description MarkdownMetadataValidationRule [] rules AddMetadataValidators(String, Dictionary<String, MarkdownMetadataValidationRule>) Declaration public void AddMetadataValidators(string category, Dictionary<string, MarkdownMetadataValidationRule> validators) Parameters Type Name Description String category Dictionary < String , MarkdownMetadataValidationRule > validators AddSettings(MarkdownValidationSetting[]) Declaration public void AddSettings(MarkdownValidationSetting[] settings) Parameters Type Name Description MarkdownValidationSetting [] settings AddTagValidators(MarkdownTagValidationRule[]) Declaration public void AddTagValidators(MarkdownTagValidationRule[] validators) Parameters Type Name Description MarkdownTagValidationRule [] validators AddTagValidators(String, Dictionary<String, MarkdownTagValidationRule>) Declaration public void AddTagValidators(string category, Dictionary<string, MarkdownTagValidationRule> validators) Parameters Type Name Description String category Dictionary < String , MarkdownTagValidationRule > validators AddValidators(MarkdownValidationRule[]) Declaration public void AddValidators(MarkdownValidationRule[] rules) Parameters Type Name Description MarkdownValidationRule [] rules AddValidators(String, Dictionary<String, MarkdownValidationRule>) Declaration public void AddValidators(string category, Dictionary<string, MarkdownValidationRule> validators) Parameters Type Name Description String category Dictionary < String , MarkdownValidationRule > validators Create(CompositionHost, String, String) Declaration public static MarkdownValidatorBuilder Create(CompositionHost host, string baseDir, string templateDir) Parameters Type Name Description System.Composition.Hosting.CompositionHost host String baseDir String templateDir Returns Type Description MarkdownValidatorBuilder CreateRewriter() Declaration public IMarkdownTokenRewriter CreateRewriter() Returns Type Description IMarkdownTokenRewriter EnsureDefaultValidator() Declaration public void EnsureDefaultValidator() GetEnabledMetadataRules() Declaration public IEnumerable<IInputMetadataValidator> GetEnabledMetadataRules() Returns Type Description IEnumerable < IInputMetadataValidator > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Glob.FileGlob.html": {
    "href": "api/Microsoft.DocAsCode.Glob.FileGlob.html",
    "title": "Class FileGlob | DocFX website",
    "keywords": "Class FileGlob Inheritance Object FileGlob Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Glob Assembly :Microsoft.DocAsCode.Glob.dll Syntax public class FileGlob Methods GetFiles(String, IEnumerable<String>, IEnumerable<String>, GlobMatcherOptions) Declaration public static IEnumerable<string> GetFiles(string cwd, IEnumerable<string> patterns, IEnumerable<string> excludePatterns, GlobMatcherOptions options = GlobMatcherOptions.IgnoreCase | GlobMatcherOptions.AllowNegate | GlobMatcherOptions.AllowExpand | GlobMatcherOptions.AllowEscape | GlobMatcherOptions.AllowGlobStar) Parameters Type Name Description String cwd IEnumerable < String > patterns IEnumerable < String > excludePatterns GlobMatcherOptions options Returns Type Description IEnumerable < String > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Glob.GlobMatcher.html": {
    "href": "api/Microsoft.DocAsCode.Glob.GlobMatcher.html",
    "title": "Class GlobMatcher | DocFX website",
    "keywords": "Class GlobMatcher Inheritance Object GlobMatcher Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Glob Assembly :Microsoft.DocAsCode.Glob.dll Syntax [Serializable] public class GlobMatcher Constructors GlobMatcher(String, GlobMatcherOptions) Declaration public GlobMatcher(string pattern, GlobMatcherOptions options = GlobMatcherOptions.IgnoreCase | GlobMatcherOptions.AllowNegate | GlobMatcherOptions.AllowExpand | GlobMatcherOptions.AllowEscape | GlobMatcherOptions.AllowGlobStar) Parameters Type Name Description String pattern GlobMatcherOptions options Fields DefaultOptions Declaration public const GlobMatcherOptions DefaultOptions = GlobMatcherOptions.IgnoreCase | GlobMatcherOptions.AllowNegate | GlobMatcherOptions.AllowExpand | GlobMatcherOptions.AllowEscape | GlobMatcherOptions.AllowGlobStar Field Value Type Description GlobMatcherOptions Properties Options Declaration public GlobMatcherOptions Options { get; } Property Value Type Description GlobMatcherOptions Raw Declaration public string Raw { get; } Property Value Type Description String Methods GetRegex() Currently not used TODO: add test case Declaration public Regex GetRegex() Returns Type Description Regex Match(String, Boolean) Declaration public bool Match(string file, bool partial = false) Parameters Type Name Description String file Boolean partial Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Glob.GlobMatcherOptions.html": {
    "href": "api/Microsoft.DocAsCode.Glob.GlobMatcherOptions.html",
    "title": "Enum GlobMatcherOptions | DocFX website",
    "keywords": "Enum GlobMatcherOptions Namespace :Microsoft.DocAsCode.Glob Assembly :Microsoft.DocAsCode.Glob.dll Syntax [Flags] public enum GlobMatcherOptions Fields Name Description AllowDotMatch Allow patterns to match filenames starting with a period even if the pattern does not explicitly have a period. By default disabled: a/ /b will **not match a/.c/d, unless AllowDotMatch is set AllowEscape AllowExpand AllowGlobStar AllowNegate IgnoreCase None Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Glob.html": {
    "href": "api/Microsoft.DocAsCode.Glob.html",
    "title": "Namespace Microsoft.DocAsCode.Glob | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Glob Classes FileGlob GlobMatcher Enums GlobMatcherOptions"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownAutoLinkInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownAutoLinkInlineRule.html",
    "title": "Class MarkdownAutoLinkInlineRule | DocFX website",
    "keywords": "Class MarkdownAutoLinkInlineRule Inheritance Object MarkdownAutoLinkInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownAutoLinkInlineRule : IMarkdownRule Properties AutoLink Declaration public virtual Regex AutoLink { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods Mangle(String) Declaration protected virtual StringBuffer Mangle(string text) Parameters Type Name Description String text Returns Type Description StringBuffer TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockContext.html",
    "title": "Class MarkdownBlockContext | DocFX website",
    "keywords": "Class MarkdownBlockContext Inheritance Object MarkdownBlockContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownBlockContext : IMarkdownContext Constructors MarkdownBlockContext(ImmutableList<IMarkdownRule>, IMarkdownContext) Declaration public MarkdownBlockContext(ImmutableList<IMarkdownRule> rules, IMarkdownContext inlineContext) Parameters Type Name Description System.Collections.Immutable.ImmutableList < IMarkdownRule > rules IMarkdownContext inlineContext MarkdownBlockContext(ImmutableList<IMarkdownRule>, IMarkdownContext, ImmutableDictionary<String, Object>) Declaration protected MarkdownBlockContext(ImmutableList<IMarkdownRule> rules, IMarkdownContext inlineContext, ImmutableDictionary<string, object> variables) Parameters Type Name Description System.Collections.Immutable.ImmutableList < IMarkdownRule > rules IMarkdownContext inlineContext System.Collections.Immutable.ImmutableDictionary < String , Object > variables Fields IsBlockQuote Declaration public const string IsBlockQuote = \"IsBlockQuote\" Field Value Type Description String IsTop Declaration public const string IsTop = \"IsTop\" Field Value Type Description String Properties Rules Declaration public ImmutableList<IMarkdownRule> Rules { get; } Property Value Type Description System.Collections.Immutable.ImmutableList < IMarkdownRule > Implements IMarkdownContext.Rules Variables Declaration public ImmutableDictionary<string, object> Variables { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Implements IMarkdownContext.Variables Methods CreateContext(ImmutableDictionary<String, Object>) Declaration public virtual IMarkdownContext CreateContext(ImmutableDictionary<string, object> variables) Parameters Type Name Description System.Collections.Immutable.ImmutableDictionary < String , Object > variables Returns Type Description IMarkdownContext Implements IMarkdownContext.CreateContext(ImmutableDictionary<String, Object>) GetInlineContext() Declaration public IMarkdownContext GetInlineContext() Returns Type Description IMarkdownContext SetRules(ImmutableList<IMarkdownRule>) Declaration public virtual IMarkdownContext SetRules(ImmutableList<IMarkdownRule> rules) Parameters Type Name Description System.Collections.Immutable.ImmutableList < IMarkdownRule > rules Returns Type Description IMarkdownContext Extension Methods DfmContextExtensions.GetFilePathStack(IMarkdownContext) DfmContextExtensions.SetFilePathStack(IMarkdownContext, ImmutableStack<String>) DfmContextExtensions.GetBaseFolder(IMarkdownContext) DfmContextExtensions.SetBaseFolder(IMarkdownContext, String) DfmContextExtensions.GetFallbackFolders(IMarkdownContext) DfmContextExtensions.SetFallbackFolders(IMarkdownContext, IReadOnlyList<String>) DfmContextExtensions.SetDependency(IMarkdownContext, HashSet<String>) DfmContextExtensions.ReportDependency(IMarkdownContext, String) DfmContextExtensions.ReportDependency(IMarkdownContext, IEnumerable<String>) DfmContextExtensions.GetIsInclude(IMarkdownContext) DfmContextExtensions.SetIsInclude(IMarkdownContext) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockquoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockquoteBlockRule.html",
    "title": "Class MarkdownBlockquoteBlockRule | DocFX website",
    "keywords": "Class MarkdownBlockquoteBlockRule Inheritance Object MarkdownBlockquoteBlockRule AzureBlockquoteBlockRule DfmBlockquoteBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownBlockquoteBlockRule : IMarkdownRule Properties Blockquote Declaration [Obsolete(\"Please use BlockquoteMatcher.\")] public virtual Regex Blockquote { get; } Property Value Type Description Regex BlockquoteMatcher Declaration public virtual Matcher BlockquoteMatcher { get; } Property Value Type Description Matcher LeadingBlockquote Declaration public virtual Regex LeadingBlockquote { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockquoteBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockquoteBlockToken.html",
    "title": "Class MarkdownBlockquoteBlockToken | DocFX website",
    "keywords": "Class MarkdownBlockquoteBlockToken Inheritance Object MarkdownBlockquoteBlockToken AzureBlockquoteBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownBlockquoteBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownBlockquoteBlockToken> Constructors MarkdownBlockquoteBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public MarkdownBlockquoteBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> tokens, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Tokens Declaration public ImmutableArray<IMarkdownToken> Tokens { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownBlockquoteBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownBlockquoteBlockToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBrInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBrInlineRule.html",
    "title": "Class MarkdownBrInlineRule | DocFX website",
    "keywords": "Class MarkdownBrInlineRule Inheritance Object MarkdownBrInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownBrInlineRule : IMarkdownRule Properties Br Declaration public virtual Regex Br { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBrInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBrInlineToken.html",
    "title": "Class MarkdownBrInlineToken | DocFX website",
    "keywords": "Class MarkdownBrInlineToken Inheritance Object MarkdownBrInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownBrInlineToken : IMarkdownToken Constructors MarkdownBrInlineToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownBrInlineToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeBlockRule.html",
    "title": "Class MarkdownCodeBlockRule | DocFX website",
    "keywords": "Class MarkdownCodeBlockRule Inheritance Object MarkdownCodeBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownCodeBlockRule : IMarkdownRule Properties Code Declaration [Obsolete(\"Please use CodeMatcher.\")] public virtual Regex Code { get; } Property Value Type Description Regex CodeMatcher Declaration public virtual Matcher CodeMatcher { get; } Property Value Type Description Matcher Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeBlockToken.html",
    "title": "Class MarkdownCodeBlockToken | DocFX website",
    "keywords": "Class MarkdownCodeBlockToken Inheritance Object MarkdownCodeBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownCodeBlockToken : IMarkdownToken Constructors MarkdownCodeBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public MarkdownCodeBlockToken(IMarkdownRule rule, IMarkdownContext context, string code, string lang, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String code String lang SourceInfo sourceInfo Properties Code Declaration public string Code { get; } Property Value Type Description String Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Lang Declaration public string Lang { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTagInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTagInlineRule.html",
    "title": "Class MarkdownTagInlineRule | DocFX website",
    "keywords": "Class MarkdownTagInlineRule Inheritance Object MarkdownTagInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTagInlineRule : IMarkdownRule Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Tag Declaration public virtual Regex Tag { get; } Property Value Type Description Regex Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTagInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTagInlineToken.html",
    "title": "Class MarkdownTagInlineToken | DocFX website",
    "keywords": "Class MarkdownTagInlineToken Inheritance Object MarkdownTagInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTagInlineToken : IMarkdownToken Constructors MarkdownTagInlineToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownTagInlineToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextBlockRule.html",
    "title": "Class MarkdownTextBlockRule | DocFX website",
    "keywords": "Class MarkdownTextBlockRule Inheritance Object MarkdownTextBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTextBlockRule : IMarkdownRule Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Text Declaration [Obsolete(\"Please use LHeadingMatcher.\")] public virtual Regex Text { get; } Property Value Type Description Regex TextMatcher Declaration public virtual Matcher TextMatcher { get; } Property Value Type Description Matcher Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) TryMatchOld(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatchOld(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextInlineRule.html",
    "title": "Class MarkdownTextInlineRule | DocFX website",
    "keywords": "Class MarkdownTextInlineRule Inheritance Object MarkdownTextInlineRule DfmTextInlineRule GfmTextInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTextInlineRule : IMarkdownRule Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Text Declaration public virtual Regex Text { get; } Property Value Type Description Regex Methods Smartypants(Options, String) Smartypants Transformations Declaration protected virtual string Smartypants(Options options, string text) Parameters Type Name Description Options options String text Returns Type Description String TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextToken.html",
    "title": "Class MarkdownTextToken | DocFX website",
    "keywords": "Class MarkdownTextToken Inheritance Object MarkdownTextToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTextToken : IMarkdownToken Constructors MarkdownTextToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public MarkdownTextToken(IMarkdownRule rule, IMarkdownContext context, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String content SourceInfo sourceInfo Properties Content Declaration public string Content { get; } Property Value Type Description String Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenExtensions.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenExtensions.html",
    "title": "Class MarkdownTokenExtensions | DocFX website",
    "keywords": "Class MarkdownTokenExtensions Inheritance Object MarkdownTokenExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class MarkdownTokenExtensions Methods BlockTokens(IEnumerable<IMarkdownToken>) Declaration public static IEnumerable<IMarkdownToken> BlockTokens(this IEnumerable<IMarkdownToken> tokens) Parameters Type Name Description IEnumerable < IMarkdownToken > tokens Returns Type Description IEnumerable < IMarkdownToken > Children(IMarkdownToken) Declaration public static IEnumerable<IMarkdownToken> Children(this IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Returns Type Description IEnumerable < IMarkdownToken > Children<T>(IMarkdownToken) Declaration public static IEnumerable<T> Children<T>(this IMarkdownToken token)where T : IMarkdownToken Parameters Type Name Description IMarkdownToken token Returns Type Description IEnumerable <T> Type Parameters Name Description T Descendants(IMarkdownToken) Declaration public static IEnumerable<IMarkdownToken> Descendants(this IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Returns Type Description IEnumerable < IMarkdownToken > Descendants<T>(IMarkdownToken) Declaration public static IEnumerable<T> Descendants<T>(this IMarkdownToken token)where T : IMarkdownToken Parameters Type Name Description IMarkdownToken token Returns Type Description IEnumerable <T> Type Parameters Name Description T InlineTokens(IEnumerable<IMarkdownToken>) Declaration public static IEnumerable<IMarkdownToken> InlineTokens(this IEnumerable<IMarkdownToken> tokens) Parameters Type Name Description IEnumerable < IMarkdownToken > tokens Returns Type Description IEnumerable < IMarkdownToken >"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenRewriterFactory.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenRewriterFactory.html",
    "title": "Class MarkdownTokenRewriterFactory | DocFX website",
    "keywords": "Class MarkdownTokenRewriterFactory Inheritance Object MarkdownTokenRewriterFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class MarkdownTokenRewriterFactory Fields Null Declaration public static readonly IMarkdownTokenRewriter Null Field Value Type Description IMarkdownTokenRewriter Methods Composite(IMarkdownTokenRewriter[]) Declaration public static IMarkdownTokenRewriter Composite(params IMarkdownTokenRewriter[] rewriters) Parameters Type Name Description IMarkdownTokenRewriter [] rewriters Returns Type Description IMarkdownTokenRewriter Composite(IEnumerable<IMarkdownTokenRewriter>) Declaration public static IMarkdownTokenRewriter Composite(IEnumerable<IMarkdownTokenRewriter> rewriters) Parameters Type Name Description IEnumerable < IMarkdownTokenRewriter > rewriters Returns Type Description IMarkdownTokenRewriter FromLambda<TEngine, TToken>(Func<TEngine, TToken, IMarkdownToken>) Declaration public static IMarkdownTokenRewriter FromLambda<TEngine, TToken>(Func<TEngine, TToken, IMarkdownToken> rewriteFunc)where TEngine : class, IMarkdownRewriteEngine where TToken : class, IMarkdownToken Parameters Type Name Description Func <TEngine, TToken, IMarkdownToken > rewriteFunc Returns Type Description IMarkdownTokenRewriter Type Parameters Name Description TEngine TToken FromLambda<TEngine, TToken>(Func<TEngine, TToken, IMarkdownToken>, Action<TEngine>) Declaration public static IMarkdownTokenRewriter FromLambda<TEngine, TToken>(Func<TEngine, TToken, IMarkdownToken> rewriteFunc, Action<TEngine> initializer)where TEngine : class, IMarkdownRewriteEngine where TToken : class, IMarkdownToken Parameters Type Name Description Func <TEngine, TToken, IMarkdownToken > rewriteFunc Action <TEngine> initializer Returns Type Description IMarkdownTokenRewriter Type Parameters Name Description TEngine TToken FromValidators(IMarkdownTokenValidator[]) Declaration public static IMarkdownTokenRewriter FromValidators(params IMarkdownTokenValidator[] validators) Parameters Type Name Description IMarkdownTokenValidator [] validators Returns Type Description IMarkdownTokenRewriter FromValidators(IEnumerable<IMarkdownTokenValidator>) Declaration public static IMarkdownTokenRewriter FromValidators(IEnumerable<IMarkdownTokenValidator> validators) Parameters Type Name Description IEnumerable < IMarkdownTokenValidator > validators Returns Type Description IMarkdownTokenRewriter FromValidators(String, IEnumerable<IMarkdownTokenValidator>) Declaration public static IMarkdownTokenRewriter FromValidators(string scopeName, IEnumerable<IMarkdownTokenValidator> validators) Parameters Type Name Description String scopeName IEnumerable < IMarkdownTokenValidator > validators Returns Type Description IMarkdownTokenRewriter Loop(IMarkdownTokenRewriter, Int32) Declaration public static IMarkdownTokenRewriter Loop(IMarkdownTokenRewriter rewriter, int maxLoopCount) Parameters Type Name Description IMarkdownTokenRewriter rewriter Int32 maxLoopCount Returns Type Description IMarkdownTokenRewriter Sequence(IMarkdownTokenRewriter[]) Declaration public static IMarkdownTokenRewriter Sequence(params IMarkdownTokenRewriter[] rewriters) Parameters Type Name Description IMarkdownTokenRewriter [] rewriters Returns Type Description IMarkdownTokenRewriter"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenTreeValidatorFactory.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenTreeValidatorFactory.html",
    "title": "Class MarkdownTokenTreeValidatorFactory | DocFX website",
    "keywords": "Class MarkdownTokenTreeValidatorFactory Inheritance Object MarkdownTokenTreeValidatorFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class MarkdownTokenTreeValidatorFactory Fields Null Declaration public static readonly IMarkdownTokenTreeValidator Null Field Value Type Description IMarkdownTokenTreeValidator Methods Combine(IMarkdownTokenTreeValidator[]) Declaration public static IMarkdownTokenTreeValidator Combine(params IMarkdownTokenTreeValidator[] validators) Parameters Type Name Description IMarkdownTokenTreeValidator [] validators Returns Type Description IMarkdownTokenTreeValidator Combine(IEnumerable<IMarkdownTokenTreeValidator>) Declaration public static IMarkdownTokenTreeValidator Combine(IEnumerable<IMarkdownTokenTreeValidator> validators) Parameters Type Name Description IEnumerable < IMarkdownTokenTreeValidator > validators Returns Type Description IMarkdownTokenTreeValidator"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolveReference.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolveReference.html",
    "title": "Class ResolveReference | DocFX website",
    "keywords": "Class ResolveReference Inheritance Object ResolveReference Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ResolveReference : IResolverPipeline Methods Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SetDerivedClass.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SetDerivedClass.html",
    "title": "Class SetDerivedClass | DocFX website",
    "keywords": "Class SetDerivedClass Inheritance Object SetDerivedClass Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class SetDerivedClass : IResolverPipeline Methods Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SetParent.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SetParent.html",
    "title": "Class SetParent | DocFX website",
    "keywords": "Class SetParent Inheritance Object SetParent Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class SetParent : IResolverPipeline Methods Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SimpleYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SimpleYamlModelGenerator.html",
    "title": "Class SimpleYamlModelGenerator | DocFX website",
    "keywords": "Class SimpleYamlModelGenerator Inheritance Object YamlModelGenerator SimpleYamlModelGenerator CSYamlModelGenerator VBYamlModelGenerator Inherited Members YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class SimpleYamlModelGenerator : YamlModelGenerator Constructors SimpleYamlModelGenerator(SyntaxLanguage) Declaration protected SimpleYamlModelGenerator(SyntaxLanguage language) Parameters Type Name Description SyntaxLanguage language Fields QualifiedFormat Declaration public static readonly SymbolDisplayFormat QualifiedFormat Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat ShortFormat Declaration public static readonly SymbolDisplayFormat ShortFormat Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat Properties Language Declaration public SyntaxLanguage Language { get; } Property Value Type Description SyntaxLanguage Methods GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter, Boolean) Declaration protected abstract void GenerateReference(ISymbol symbol, ReferenceItem reference, SymbolVisitorAdapter adapter, bool asOverload) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol ReferenceItem reference SymbolVisitorAdapter adapter Boolean asOverload GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Declaration protected abstract string GetSyntaxContent(MemberType typeKind, ISymbol symbol, SymbolVisitorAdapter adapter) Parameters Type Name Description MemberType typeKind Microsoft.CodeAnalysis.ISymbol symbol SymbolVisitorAdapter adapter Returns Type Description String Operators Addition(SimpleYamlModelGenerator, SimpleYamlModelGenerator) Declaration public static CompositeYamlModelGenerator operator +(SimpleYamlModelGenerator left, SimpleYamlModelGenerator right) Parameters Type Name Description SimpleYamlModelGenerator left SimpleYamlModelGenerator right Returns Type Description CompositeYamlModelGenerator Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SymbolVisitorAdapter.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SymbolVisitorAdapter.html",
    "title": "Class SymbolVisitorAdapter | DocFX website",
    "keywords": "Class SymbolVisitorAdapter Inheritance Object Microsoft.CodeAnalysis.SymbolVisitor < MetadataItem > SymbolVisitorAdapter Inherited Members Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.Visit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitDiscard(Microsoft.CodeAnalysis.IDiscardSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class SymbolVisitorAdapter : SymbolVisitor<MetadataItem> Constructors SymbolVisitorAdapter(YamlModelGenerator, SyntaxLanguage, Compilation, Boolean, String, IReadOnlyDictionary<Compilation, IEnumerable<IMethodSymbol>>) Declaration public SymbolVisitorAdapter(YamlModelGenerator generator, SyntaxLanguage language, Compilation compilation, bool preserveRawInlineComments = false, string filterConfigFile = null, IReadOnlyDictionary<Compilation, IEnumerable<IMethodSymbol>> extensionMethods = null) Parameters Type Name Description YamlModelGenerator generator SyntaxLanguage language Microsoft.CodeAnalysis.Compilation compilation Boolean preserveRawInlineComments String filterConfigFile IReadOnlyDictionary < Microsoft.CodeAnalysis.Compilation , IEnumerable < Microsoft.CodeAnalysis.IMethodSymbol >> extensionMethods Properties FilterVisitor Declaration public IFilterVisitor FilterVisitor { get; } Property Value Type Description IFilterVisitor Language Declaration public SyntaxLanguage Language { get; } Property Value Type Description SyntaxLanguage Methods AddOverloadReference(ISymbol) Declaration public string AddOverloadReference(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description String AddReference(ISymbol) Declaration public string AddReference(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description String AddReference(String, String) Declaration public string AddReference(string id, string commentId) Parameters Type Name Description String id String commentId Returns Type Description String AddSpecReference(ISymbol, IReadOnlyList<String>, IReadOnlyList<String>) Declaration public string AddSpecReference(ISymbol symbol, IReadOnlyList<string> typeGenericParameters = null, IReadOnlyList<string> methodGenericParameters = null) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol IReadOnlyList < String > typeGenericParameters IReadOnlyList < String > methodGenericParameters Returns Type Description String DefaultVisit(ISymbol) Declaration public override MetadataItem DefaultVisit(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.DefaultVisit(Microsoft.CodeAnalysis.ISymbol) VisitAssembly(IAssemblySymbol) Declaration public override MetadataItem VisitAssembly(IAssemblySymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IAssemblySymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol) VisitEvent(IEventSymbol) Declaration public override MetadataItem VisitEvent(IEventSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol) VisitField(IFieldSymbol) Declaration public override MetadataItem VisitField(IFieldSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitField(Microsoft.CodeAnalysis.IFieldSymbol) VisitMethod(IMethodSymbol) Declaration public override MetadataItem VisitMethod(IMethodSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol) VisitNamedType(INamedTypeSymbol) Declaration public override MetadataItem VisitNamedType(INamedTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitNamedType(Microsoft.CodeAnalysis.INamedTypeSymbol) VisitNamespace(INamespaceSymbol) Declaration public override MetadataItem VisitNamespace(INamespaceSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.INamespaceSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol) VisitProperty(IPropertySymbol) Declaration public override MetadataItem VisitProperty(IPropertySymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SyntaxDetail.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SyntaxDetail.html",
    "title": "Class SyntaxDetail | DocFX website",
    "keywords": "Class SyntaxDetail Inheritance Object SyntaxDetail Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class SyntaxDetail Properties Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public SortedList<SyntaxLanguage, string> Content { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ApiParameter> Parameters { get; set; } Property Value Type Description List < ApiParameter > Return Declaration [YamlMember(Alias = \"return\")] [JsonProperty(\"return\")] public ApiParameter Return { get; set; } Property Value Type Description ApiParameter TypeParameters Declaration [YamlMember(Alias = \"typeParameters\")] [JsonProperty(\"typeParameters\")] public List<ApiParameter> TypeParameters { get; set; } Property Value Type Description List < ApiParameter > Methods CopyInheritedData(SyntaxDetail) Declaration public void CopyInheritedData(SyntaxDetail src) Parameters Type Name Description SyntaxDetail src Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) YamlViewModelExtensions.ToSyntaxDetailViewModel(SyntaxDetail)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentModel.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentModel.html",
    "title": "Class TripleSlashCommentModel | DocFX website",
    "keywords": "Class TripleSlashCommentModel Inheritance Object TripleSlashCommentModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class TripleSlashCommentModel Properties Examples Declaration public List<string> Examples { get; } Property Value Type Description List < String > Exceptions Declaration public List<ExceptionInfo> Exceptions { get; } Property Value Type Description List < ExceptionInfo > IsInheritDoc Declaration public bool IsInheritDoc { get; } Property Value Type Description Boolean Parameters Declaration public Dictionary<string, string> Parameters { get; } Property Value Type Description Dictionary < String , String > Remarks Declaration public string Remarks { get; } Property Value Type Description String Returns Declaration public string Returns { get; } Property Value Type Description String SeeAlsos Declaration public List<LinkInfo> SeeAlsos { get; } Property Value Type Description List < LinkInfo > Sees Declaration public List<LinkInfo> Sees { get; } Property Value Type Description List < LinkInfo > Summary Declaration public string Summary { get; } Property Value Type Description String TypeParameters Declaration public Dictionary<string, string> TypeParameters { get; } Property Value Type Description Dictionary < String , String > Methods CopyInheritedData(TripleSlashCommentModel) Declaration public void CopyInheritedData(TripleSlashCommentModel src) Parameters Type Name Description TripleSlashCommentModel src CreateModel(String, SyntaxLanguage, ITripleSlashCommentParserContext) Declaration public static TripleSlashCommentModel CreateModel(string xml, SyntaxLanguage language, ITripleSlashCommentParserContext context) Parameters Type Name Description String xml SyntaxLanguage language ITripleSlashCommentParserContext context Returns Type Description TripleSlashCommentModel GetParameter(String) Declaration public string GetParameter(string name) Parameters Type Name Description String name Returns Type Description String GetTypeParameter(String) Declaration public string GetTypeParameter(string name) Parameters Type Name Description String name Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.DocumentBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DocumentBuilder.html",
    "title": "Class DocumentBuilder | DocFX website",
    "keywords": "Class DocumentBuilder Inheritance Object DocumentBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class DocumentBuilder : IDisposable Constructors DocumentBuilder(IEnumerable<Assembly>, ImmutableArray<String>, String, String, String, String) Declaration public DocumentBuilder(IEnumerable<Assembly> assemblies, ImmutableArray<string> postProcessorNames, string templateHash, string intermediateFolder = null, string commitFromSHA = null, string commitToSHA = null) Parameters Type Name Description IEnumerable < Assembly > assemblies System.Collections.Immutable.ImmutableArray < String > postProcessorNames String templateHash String intermediateFolder String commitFromSHA String commitToSHA Methods Build(DocumentBuildParameters) Declaration public void Build(DocumentBuildParameters parameter) Parameters Type Name Description DocumentBuildParameters parameter Build(IList<DocumentBuildParameters>, String) Declaration public void Build(IList<DocumentBuildParameters> parameters, string outputDirectory) Parameters Type Name Description IList < DocumentBuildParameters > parameters String outputDirectory Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildParameters.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildParameters.html",
    "title": "Class DocumentBuildParameters | DocFX website",
    "keywords": "Class DocumentBuildParameters Inheritance Object MarshalByRefObject DocumentBuildParameters Inherited Members MarshalByRefObject.MemberwiseClone(Boolean) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class DocumentBuildParameters : MarshalByRefObject Properties ApplyTemplateSettings Declaration public ApplyTemplateSettings ApplyTemplateSettings { get; set; } Property Value Type Description ApplyTemplateSettings Changes Declaration public ImmutableDictionary<string, ChangeKindWithDependency> Changes { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , ChangeKindWithDependency > CustomLinkResolver Declaration public string CustomLinkResolver { get; set; } Property Value Type Description String ExternalReferencePackages Declaration public ImmutableArray<string> ExternalReferencePackages { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > FileMetadata Declaration public FileMetadata FileMetadata { get; set; } Property Value Type Description FileMetadata Files Declaration public FileCollection Files { get; set; } Property Value Type Description FileCollection ForcePostProcess Declaration public bool ForcePostProcess { get; set; } Property Value Type Description Boolean ForceRebuild Declaration public bool ForceRebuild { get; set; } Property Value Type Description Boolean LruSize Declaration public int LruSize { get; set; } Property Value Type Description Int32 MarkdownEngineName Declaration public string MarkdownEngineName { get; set; } Property Value Type Description String MarkdownEngineParameters Declaration public ImmutableDictionary<string, object> MarkdownEngineParameters { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > MaxParallelism Declaration public int MaxParallelism { get; set; } Property Value Type Description Int32 Metadata Declaration public ImmutableDictionary<string, object> Metadata { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > OutputBaseDir Declaration public string OutputBaseDir { get; set; } Property Value Type Description String PostProcessors Declaration public ImmutableArray<string> PostProcessors { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > RootTocPath Declaration public string RootTocPath { get; set; } Property Value Type Description String TemplateDir Declaration public string TemplateDir { get; set; } Property Value Type Description String TemplateManager Declaration public TemplateManager TemplateManager { get; set; } Property Value Type Description TemplateManager VersionDir Declaration public string VersionDir { get; set; } Property Value Type Description String VersionName Declaration public string VersionName { get; set; } Property Value Type Description String XRefMaps Declaration public ImmutableArray<string> XRefMaps { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > Methods Clone() Declaration public DocumentBuildParameters Clone() Returns Type Description DocumentBuildParameters Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessage.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessage.html",
    "title": "Class BuildMessage | DocFX website",
    "keywords": "Class BuildMessage Inheritance Object Dictionary < BuildPhase , BuildMessageInfo > BuildMessage Inherited Members Dictionary<BuildPhase, BuildMessageInfo>.Add(BuildPhase, BuildMessageInfo) System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.Add(System.Collections.Generic.KeyValuePair<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>) System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.Contains(System.Collections.Generic.KeyValuePair<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>) System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.Remove(System.Collections.Generic.KeyValuePair<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>) Dictionary<BuildPhase, BuildMessageInfo>.Clear() Dictionary<BuildPhase, BuildMessageInfo>.ContainsKey(BuildPhase) Dictionary<BuildPhase, BuildMessageInfo>.ContainsValue(BuildMessageInfo) Dictionary<BuildPhase, BuildMessageInfo>.GetEnumerator() System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.GetEnumerator() Dictionary<BuildPhase, BuildMessageInfo>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<BuildPhase, BuildMessageInfo>.OnDeserialization(Object) Dictionary<BuildPhase, BuildMessageInfo>.Remove(BuildPhase) Dictionary<BuildPhase, BuildMessageInfo>.TryGetValue(BuildPhase, BuildMessageInfo) System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.CopyTo(System.Collections.Generic.KeyValuePair<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>[], System.Int32) Dictionary<BuildPhase, BuildMessageInfo>.ICollection.CopyTo(Array, Int32) Dictionary<BuildPhase, BuildMessageInfo>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Add(Object, Object) Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Contains(Object) Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.GetEnumerator() Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Remove(Object) Dictionary<BuildPhase, BuildMessageInfo>.Comparer Dictionary<BuildPhase, BuildMessageInfo>.Count Dictionary<BuildPhase, BuildMessageInfo>.Keys System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.IDictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.Keys System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.IReadOnlyDictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.Keys Dictionary<BuildPhase, BuildMessageInfo>.Values System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.IDictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.Values System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.IReadOnlyDictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.Values Dictionary<BuildPhase, BuildMessageInfo>.Item[BuildPhase] System.Collections.Generic.Dictionary<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Microsoft.DocAsCode.Plugins.BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.IsReadOnly Dictionary<BuildPhase, BuildMessageInfo>.ICollection.IsSynchronized Dictionary<BuildPhase, BuildMessageInfo>.ICollection.SyncRoot Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.IsFixedSize Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.IsReadOnly Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Keys Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Values Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class BuildMessage : Dictionary<BuildPhase, BuildMessageInfo>, IDictionary<BuildPhase, BuildMessageInfo>, ICollection<KeyValuePair<BuildPhase, BuildMessageInfo>>, IDictionary, ICollection, IReadOnlyDictionary<BuildPhase, BuildMessageInfo>, IReadOnlyCollection<KeyValuePair<BuildPhase, BuildMessageInfo>>, IEnumerable<KeyValuePair<BuildPhase, BuildMessageInfo>>, IEnumerable, ISerializable, IDeserializationCallback Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo.html",
    "title": "Class BuildMessageInfo | DocFX website",
    "keywords": "Class BuildMessageInfo Inheritance Object BuildMessageInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class BuildMessageInfo Constructors BuildMessageInfo() Declaration public BuildMessageInfo() Methods GetListener() Declaration public ILoggerListener GetListener() Returns Type Description ILoggerListener GetMessages(String) Get messages logged for file Declaration public IEnumerable<ILogItem> GetMessages(string file) Parameters Type Name Description String file file path from working directory Returns Type Description IEnumerable < ILogItem > logged messages Load(TextReader) Declaration public static BuildMessageInfo Load(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description BuildMessageInfo Replay(String) relay messages for file Declaration public void Replay(string file) Parameters Type Name Description String file file path from working directory Save(TextWriter) Declaration public void Save(TextWriter writer) Parameters Type Name Description TextWriter writer Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalIgnorePropertiesResolver.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalIgnorePropertiesResolver.html",
    "title": "Class IncrementalIgnorePropertiesResolver | DocFX website",
    "keywords": "Class IncrementalIgnorePropertiesResolver Inheritance Object Newtonsoft.Json.Serialization.DefaultContractResolver IncrementalIgnorePropertiesResolver Inherited Members Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection) Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo) Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo) Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String) Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String) Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String) Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute Newtonsoft.Json.Serialization.DefaultContractResolver.NamingStrategy Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class IncrementalIgnorePropertiesResolver : DefaultContractResolver, IContractResolver Methods CreateProperty(MemberInfo, MemberSerialization) Declaration protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization) Parameters Type Name Description MemberInfo member Newtonsoft.Json.MemberSerialization memberSerialization Returns Type Description Newtonsoft.Json.Serialization.JsonProperty Overrides Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalUtility.html",
    "title": "Class IncrementalUtility | DocFX website",
    "keywords": "Class IncrementalUtility Inheritance Object IncrementalUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public static class IncrementalUtility Methods CreateRandomDirectory(String) Declaration public static string CreateRandomDirectory(string baseDir) Parameters Type Name Description String baseDir Returns Type Description String CreateRandomFileName(String) Declaration public static string CreateRandomFileName(string baseDir) Parameters Type Name Description String baseDir Returns Type Description String CreateRandomFileStream(String) Declaration public static FileStream CreateRandomFileStream(string baseDir) Parameters Type Name Description String baseDir Returns Type Description FileStream GetDependencyKey(FileAndType) Declaration public static string GetDependencyKey(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description String GetRandomEntry(String) Declaration public static string GetRandomEntry(string baseDir) Parameters Type Name Description String baseDir Returns Type Description String LoadBuildMessage(String) Declaration public static BuildMessage LoadBuildMessage(string file) Parameters Type Name Description String file Returns Type Description BuildMessage LoadDependency(String) Declaration public static DependencyGraph LoadDependency(string dependencyFile) Parameters Type Name Description String dependencyFile Returns Type Description DependencyGraph LoadIntermediateFile<T>(String) Declaration public static T LoadIntermediateFile<T>(string fileName) Parameters Type Name Description String fileName Returns Type Description T Type Parameters Name Description T RetryIO(Action) Declaration public static void RetryIO(Action action) Parameters Type Name Description Action action RetryIO<T>(Func<T>) Declaration public static T RetryIO<T>(Func<T> func) Parameters Type Name Description Func <T> func Returns Type Description T Type Parameters Name Description T SaveBuildMessage(String, BuildMessage) Declaration public static void SaveBuildMessage(string fileName, BuildMessage bm) Parameters Type Name Description String fileName BuildMessage bm SaveDependency(String, DependencyGraph) Declaration public static void SaveDependency(string fileName, DependencyGraph dg) Parameters Type Name Description String fileName DependencyGraph dg SaveIntermediateFile<T>(String, T) Declaration public static void SaveIntermediateFile<T>(string fileName, T content) Parameters Type Name Description String fileName T content Type Parameters Name Description T"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ReferenceItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ReferenceItem.html",
    "title": "Class ReferenceItem | DocFX website",
    "keywords": "Class ReferenceItem Inheritance Object ReferenceItem Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class ReferenceItem : IEquatable<ReferenceItem> Constructors ReferenceItem(DependencyItemSourceInfo, String, String) Declaration [JsonConstructor] public ReferenceItem(DependencyItemSourceInfo reference, string file, string reportedBy) Parameters Type Name Description DependencyItemSourceInfo reference String file String reportedBy Properties File Declaration [JsonProperty(\"file\")] public string File { get; } Property Value Type Description String Reference Declaration [JsonProperty(\"reference\")] public DependencyItemSourceInfo Reference { get; } Property Value Type Description DependencyItemSourceInfo ReportedBy Declaration [JsonProperty(\"reportedBy\")] public string ReportedBy { get; } Property Value Type Description String Methods Equals(ReferenceItem) Declaration public bool Equals(ReferenceItem other) Parameters Type Name Description ReferenceItem other Returns Type Description Boolean Implements IEquatable<T>.Equals(T) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.html",
    "title": "Namespace Microsoft.DocAsCode.Build.Engine.Incrementals | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.Engine.Incrementals Classes BuildCacheException BuildInfo BuildMessage BuildMessageInfo BuildOutputItem BuildOutputs BuildVersionInfo ChangeItem ChangeList DependencyGraph DependencyItem DependencyItemSourceInfo FileAttributeItem FileAttributes FileMapItem IncrementalIgnoreAttribute IncrementalIgnorePropertiesResolver IncrementalUtility ModelManifest ModelManifestItem OSPlatformSensitiveDictionary<V> PostProcessInfo PostProcessorInfo PostProcessOutputs ProcessorInfo ProcessorInfoBase ProcessorStepInfo ReferenceItem Enums ChangeKind ChangeKindWithDependency"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateCollection.html",
    "title": "Class TemplateCollection | DocFX website",
    "keywords": "Class TemplateCollection Inheritance Object Dictionary < String , TemplateBundle > TemplateCollection Inherited Members Dictionary<String, TemplateBundle>.Add(String, TemplateBundle) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>) Dictionary<String, TemplateBundle>.Clear() Dictionary<String, TemplateBundle>.ContainsKey(String) Dictionary<String, TemplateBundle>.ContainsValue(TemplateBundle) Dictionary<String, TemplateBundle>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.GetEnumerator() Dictionary<String, TemplateBundle>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, TemplateBundle>.OnDeserialization(Object) Dictionary<String, TemplateBundle>.Remove(String) Dictionary<String, TemplateBundle>.TryGetValue(String, TemplateBundle) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>[], System.Int32) Dictionary<String, TemplateBundle>.ICollection.CopyTo(Array, Int32) Dictionary<String, TemplateBundle>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, TemplateBundle>.IDictionary.Add(Object, Object) Dictionary<String, TemplateBundle>.IDictionary.Contains(Object) Dictionary<String, TemplateBundle>.IDictionary.GetEnumerator() Dictionary<String, TemplateBundle>.IDictionary.Remove(Object) Dictionary<String, TemplateBundle>.Comparer Dictionary<String, TemplateBundle>.Count Dictionary<String, TemplateBundle>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Keys Dictionary<String, TemplateBundle>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Values Dictionary<String, TemplateBundle>.Item[String] System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.IsReadOnly Dictionary<String, TemplateBundle>.ICollection.IsSynchronized Dictionary<String, TemplateBundle>.ICollection.SyncRoot Dictionary<String, TemplateBundle>.IDictionary.IsFixedSize Dictionary<String, TemplateBundle>.IDictionary.IsReadOnly Dictionary<String, TemplateBundle>.IDictionary.Keys Dictionary<String, TemplateBundle>.IDictionary.Values Dictionary<String, TemplateBundle>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateCollection : Dictionary<string, TemplateBundle>, IDictionary<string, TemplateBundle>, ICollection<KeyValuePair<string, TemplateBundle>>, IDictionary, ICollection, IReadOnlyDictionary<string, TemplateBundle>, IReadOnlyCollection<KeyValuePair<string, TemplateBundle>>, IEnumerable<KeyValuePair<string, TemplateBundle>>, IEnumerable, ISerializable, IDeserializationCallback Constructors TemplateCollection(ResourceCollection, DocumentBuildContext, Int32) Declaration public TemplateCollection(ResourceCollection provider, DocumentBuildContext context, int maxParallelism) Parameters Type Name Description ResourceCollection provider DocumentBuildContext context Int32 maxParallelism Properties Item[String] Declaration public TemplateBundle this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description TemplateBundle Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateJintPreprocessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateJintPreprocessor.html",
    "title": "Class TemplateJintPreprocessor | DocFX website",
    "keywords": "Class TemplateJintPreprocessor Inheritance Object TemplateJintPreprocessor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateJintPreprocessor : ITemplatePreprocessor Constructors TemplateJintPreprocessor(ResourceCollection, TemplatePreprocessorResource, DocumentBuildContext) Declaration public TemplateJintPreprocessor(ResourceCollection resourceCollection, TemplatePreprocessorResource scriptResource, DocumentBuildContext context) Parameters Type Name Description ResourceCollection resourceCollection TemplatePreprocessorResource scriptResource DocumentBuildContext context Properties GetOptionsFunc Declaration public Func<object, object> GetOptionsFunc { get; } Property Value Type Description Func < Object , Object > Implements ITemplatePreprocessor.GetOptionsFunc TransformModelFunc Declaration public Func<object, object> TransformModelFunc { get; } Property Value Type Description Func < Object , Object > Implements ITemplatePreprocessor.TransformModelFunc Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveBuilder.html",
    "title": "Class XRefArchiveBuilder | DocFX website",
    "keywords": "Class XRefArchiveBuilder Inheritance Object XRefArchiveBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefArchiveBuilder Methods DownloadAsync(Uri, String) Declaration public Task<bool> DownloadAsync(Uri uri, string outputFile) Parameters Type Name Description Uri uri String outputFile Returns Type Description Task < Boolean > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveMode.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveMode.html",
    "title": "Enum XRefArchiveMode | DocFX website",
    "keywords": "Enum XRefArchiveMode Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public enum XRefArchiveMode Fields Name Description Create Read Update Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLanguageValuePair.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLanguageValuePair.html",
    "title": "Class ApiLanguageValuePair | DocFX website",
    "keywords": "Class ApiLanguageValuePair Inheritance Object ApiLanguageValuePair Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiLanguageValuePair Properties Language Declaration [YamlMember(Alias = \"lang\")] [JsonProperty(\"lang\")] public string Language { get; set; } Property Value Type Description String Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public string Value { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLinkInfoBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLinkInfoBuildOutput.html",
    "title": "Class ApiLinkInfoBuildOutput | DocFX website",
    "keywords": "Class ApiLinkInfoBuildOutput Inheritance Object ApiLinkInfoBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiLinkInfoBuildOutput Properties LinkType Declaration [YamlMember(Alias = \"linkType\")] [JsonProperty(\"linkType\")] public LinkType LinkType { get; set; } Property Value Type Description LinkType Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames Url Declaration [YamlMember(Alias = \"url\")] [JsonProperty(\"url\")] public string Url { get; set; } Property Value Type Description String Methods Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages FromModel(LinkInfo) Declaration public static ApiLinkInfoBuildOutput FromModel(LinkInfo model) Parameters Type Name Description LinkInfo model Returns Type Description ApiLinkInfoBuildOutput FromModel(LinkInfo, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiLinkInfoBuildOutput FromModel(LinkInfo model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description LinkInfo model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiLinkInfoBuildOutput Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.ApplyOverwriteDocumentForRestApi.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.ApplyOverwriteDocumentForRestApi.html",
    "title": "Class ApplyOverwriteDocumentForRestApi | DocFX website",
    "keywords": "Class ApplyOverwriteDocumentForRestApi Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument ApplyOverwriteDocumentForRestApi Inherited Members ApplyOverwriteDocument.Postbuild(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrites(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrite<T>(IHostService, List<FileModel>, String, List<FileModel>, Func<FileModel, String, IHostService, IEnumerable<T>>, Func<FileModel, String, IHostService, IEnumerable<T>>) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(\"RestApiDocumentProcessor\", typeof (IDocumentBuildStep))] public class ApplyOverwriteDocumentForRestApi : ApplyOverwriteDocument, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) Declaration protected override void ApplyOverwrite(IHostService host, List<FileModel> overwrites, string uid, List<FileModel> articles) Parameters Type Name Description IHostService host List < FileModel > overwrites String uid List < FileModel > articles Overrides ApplyOverwriteDocument.ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) GetChildItemsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<RestApiChildItemViewModel> GetChildItemsFromOverwriteDocument(FileModel overwriteModel, string uid, IHostService host) Parameters Type Name Description FileModel overwriteModel String uid IHostService host Returns Type Description IEnumerable < RestApiChildItemViewModel > GetChildItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<RestApiChildItemViewModel> GetChildItemsToOverwrite(FileModel articleModel, string uid, IHostService host) Parameters Type Name Description FileModel articleModel String uid IHostService host Returns Type Description IEnumerable < RestApiChildItemViewModel > GetMerger() Declaration protected override IMerger GetMerger() Returns Type Description IMerger Overrides ApplyOverwriteDocument.GetMerger() GetRootItemsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<RestApiRootItemViewModel> GetRootItemsFromOverwriteDocument(FileModel overwriteModel, string uid, IHostService host) Parameters Type Name Description FileModel overwriteModel String uid IHostService host Returns Type Description IEnumerable < RestApiRootItemViewModel > GetRootItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<RestApiRootItemViewModel> GetRootItemsToOverwrite(FileModel articleModel, string uid, IHostService host) Parameters Type Name Description FileModel articleModel String uid IHostService host Returns Type Description IEnumerable < RestApiRootItemViewModel > GetTagItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<RestApiTagViewModel> GetTagItemsToOverwrite(FileModel articleModel, string uid, IHostService host) Parameters Type Name Description FileModel articleModel String uid IHostService host Returns Type Description IEnumerable < RestApiTagViewModel > GetTagsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<RestApiTagViewModel> GetTagsFromOverwriteDocument(FileModel overwriteModel, string uid, IHostService host) Parameters Type Name Description FileModel overwriteModel String uid IHostService host Returns Type Description IEnumerable < RestApiTagViewModel > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.BuildRestApiDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.BuildRestApiDocument.html",
    "title": "Class BuildRestApiDocument | DocFX website",
    "keywords": "Class BuildRestApiDocument Inheritance Object BaseDocumentBuildStep BuildReferenceDocumentBase BuildRestApiDocument Inherited Members BuildReferenceDocumentBase.BuildOrder BuildReferenceDocumentBase.Build(FileModel, IHostService) BuildReferenceDocumentBase.BuildOverwrite(IHostService, FileModel) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(\"RestApiDocumentProcessor\", typeof (IDocumentBuildStep))] public class BuildRestApiDocument : BuildReferenceDocumentBase, IDocumentBuildStep Properties Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods BuildArticle(IHostService, FileModel) Declaration protected override void BuildArticle(IHostService host, FileModel model) Parameters Type Name Description IHostService host FileModel model Overrides BuildReferenceDocumentBase.BuildArticle(IHostService, FileModel) BuildItem(IHostService, RestApiItemViewModelBase, FileModel, Func<String, Boolean>) Declaration public static RestApiItemViewModelBase BuildItem(IHostService host, RestApiItemViewModelBase item, FileModel model, Func<string, bool> filter = null) Parameters Type Name Description IHostService host RestApiItemViewModelBase item FileModel model Func < String , Boolean > filter Returns Type Description RestApiItemViewModelBase BuildTag(IHostService, RestApiTagViewModel, FileModel, Func<String, Boolean>) Declaration public static RestApiTagViewModel BuildTag(IHostService host, RestApiTagViewModel tag, FileModel model, Func<string, bool> filter = null) Parameters Type Name Description IHostService host RestApiTagViewModel tag FileModel model Func < String , Boolean > filter Returns Type Description RestApiTagViewModel Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.CircularStream.html": {
    "href": "api/Microsoft.DocAsCode.Common.CircularStream.html",
    "title": "Class CircularStream | DocFX website",
    "keywords": "Class CircularStream Inheritance Object CircularStream Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class CircularStream Methods CreateReaderView() Declaration public Stream CreateReaderView() Returns Type Description Stream CreateWriterView() Declaration public Stream CreateWriterView() Returns Type Description Stream Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.CollectionExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Common.CollectionExtensions.html",
    "title": "Class CollectionExtensions | DocFX website",
    "keywords": "Class CollectionExtensions Inheritance Object CollectionExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class CollectionExtensions Methods Merge<TItem, TResult>(IReadOnlyList<IEnumerable<TItem>>, IComparer<TItem>, Func<List<TItem>, TResult>) Declaration public static IEnumerable<TResult> Merge<TItem, TResult>(this IReadOnlyList<IEnumerable<TItem>> sources, IComparer<TItem> comparer, Func<List<TItem>, TResult> merger) Parameters Type Name Description IReadOnlyList < IEnumerable <TItem>> sources IComparer <TItem> comparer Func < List <TItem>, TResult> merger Returns Type Description IEnumerable <TResult> Type Parameters Name Description TItem TResult"
  },
  "api/Microsoft.DocAsCode.Common.CollectionUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.CollectionUtility.html",
    "title": "Class CollectionUtility | DocFX website",
    "keywords": "Class CollectionUtility Inheritance Object CollectionUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class CollectionUtility Methods Merge<T>(IDictionary<String, List<T>>, IEnumerable<KeyValuePair<String, IEnumerable<T>>>) Declaration public static Dictionary<string, List<T>> Merge<T>(this IDictionary<string, List<T>> left, IEnumerable<KeyValuePair<string, IEnumerable<T>>> right) Parameters Type Name Description IDictionary < String , List <T>> left IEnumerable < KeyValuePair < String , IEnumerable <T>>> right Returns Type Description Dictionary < String , List <T>> Type Parameters Name Description T"
  },
  "api/Microsoft.DocAsCode.Common.CommandInfo.html": {
    "href": "api/Microsoft.DocAsCode.Common.CommandInfo.html",
    "title": "Class CommandInfo | DocFX website",
    "keywords": "Class CommandInfo Inheritance Object CommandInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class CommandInfo Properties Arguments Declaration public string Arguments { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String WorkingDirectory Declaration public string WorkingDirectory { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.FileAbstractLayerExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Common.FileAbstractLayerExtensions.html",
    "title": "Class FileAbstractLayerExtensions | DocFX website",
    "keywords": "Class FileAbstractLayerExtensions Inheritance Object FileAbstractLayerExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class FileAbstractLayerExtensions Methods CreateText(FileAbstractLayer, RelativePath) Declaration public static StreamWriter CreateText(this FileAbstractLayer fal, RelativePath file) Parameters Type Name Description FileAbstractLayer fal RelativePath file Returns Type Description StreamWriter CreateText(FileAbstractLayer, String) Declaration public static StreamWriter CreateText(this FileAbstractLayer fal, string file) Parameters Type Name Description FileAbstractLayer fal String file Returns Type Description StreamWriter Exists(FileAbstractLayer, String) Declaration public static bool Exists(this FileAbstractLayer fal, string file) Parameters Type Name Description FileAbstractLayer fal String file Returns Type Description Boolean GetAllPhysicalPaths(FileAbstractLayer) Declaration public static IEnumerable<KeyValuePair<RelativePath, string>> GetAllPhysicalPaths(this FileAbstractLayer fal) Parameters Type Name Description FileAbstractLayer fal Returns Type Description IEnumerable < KeyValuePair < RelativePath , String >> GetOutputPhysicalPath(FileAbstractLayer, RelativePath) Declaration public static string GetOutputPhysicalPath(this FileAbstractLayer fal, RelativePath file) Parameters Type Name Description FileAbstractLayer fal RelativePath file Returns Type Description String GetOutputPhysicalPath(FileAbstractLayer, String) Declaration public static string GetOutputPhysicalPath(this FileAbstractLayer fal, string file) Parameters Type Name Description FileAbstractLayer fal String file Returns Type Description String GetProperty(FileAbstractLayer, RelativePath, String) Declaration public static string GetProperty(this FileAbstractLayer fal, RelativePath file, string propertyName) Parameters Type Name Description FileAbstractLayer fal RelativePath file String propertyName Returns Type Description String GetProperty(FileAbstractLayer, String, String) Declaration public static string GetProperty(this FileAbstractLayer fal, string file, string propertyName) Parameters Type Name Description FileAbstractLayer fal String file String propertyName Returns Type Description String HasProperty(FileAbstractLayer, RelativePath, String) Declaration public static bool HasProperty(this FileAbstractLayer fal, RelativePath file, string propertyName) Parameters Type Name Description FileAbstractLayer fal RelativePath file String propertyName Returns Type Description Boolean HasProperty(FileAbstractLayer, String, String) Declaration public static bool HasProperty(this FileAbstractLayer fal, string file, string propertyName) Parameters Type Name Description FileAbstractLayer fal String file String propertyName Returns Type Description Boolean OpenReadText(FileAbstractLayer, RelativePath) Declaration public static StreamReader OpenReadText(this FileAbstractLayer fal, RelativePath file) Parameters Type Name Description FileAbstractLayer fal RelativePath file Returns Type Description StreamReader OpenReadText(FileAbstractLayer, String) Declaration public static StreamReader OpenReadText(this FileAbstractLayer fal, string file) Parameters Type Name Description FileAbstractLayer fal String file Returns Type Description StreamReader ReadAllText(FileAbstractLayer, RelativePath) Declaration public static string ReadAllText(this FileAbstractLayer fal, RelativePath file) Parameters Type Name Description FileAbstractLayer fal RelativePath file Returns Type Description String ReadAllText(FileAbstractLayer, String) Declaration public static string ReadAllText(this FileAbstractLayer fal, string file) Parameters Type Name Description FileAbstractLayer fal String file Returns Type Description String WriteAllText(FileAbstractLayer, RelativePath, String) Declaration public static void WriteAllText(this FileAbstractLayer fal, RelativePath file, string content) Parameters Type Name Description FileAbstractLayer fal RelativePath file String content WriteAllText(FileAbstractLayer, String, String) Declaration public static void WriteAllText(this FileAbstractLayer fal, string file, string content) Parameters Type Name Description FileAbstractLayer fal String file String content"
  },
  "api/Microsoft.DocAsCode.Common.FilePathComparer.html": {
    "href": "api/Microsoft.DocAsCode.Common.FilePathComparer.html",
    "title": "Class FilePathComparer | DocFX website",
    "keywords": "Class FilePathComparer Inheritance Object FilePathComparer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class FilePathComparer : IEqualityComparer<string> Fields OSPlatformSensitiveComparer Declaration public static readonly FilePathComparer OSPlatformSensitiveComparer Field Value Type Description FilePathComparer OSPlatformSensitiveStringComparer Declaration public static readonly StringComparer OSPlatformSensitiveStringComparer Field Value Type Description StringComparer Methods Equals(String, String) Declaration public bool Equals(string x, string y) Parameters Type Name Description String x String y Returns Type Description Boolean Implements IEqualityComparer<T>.Equals(T, T) GetHashCode(String) Declaration public int GetHashCode(string obj) Parameters Type Name Description String obj Returns Type Description Int32 Implements IEqualityComparer<T>.GetHashCode(T) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.FileWriterBase.html": {
    "href": "api/Microsoft.DocAsCode.Common.FileWriterBase.html",
    "title": "Class FileWriterBase | DocFX website",
    "keywords": "Class FileWriterBase Inheritance Object FileWriterBase LinkFileWriter ManifestFileWriter RealFileWriter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public abstract class FileWriterBase : IFileWriter Constructors FileWriterBase(String) Declaration public FileWriterBase(string outputFolder) Parameters Type Name Description String outputFolder Properties ExpandedOutputFolder Declaration public string ExpandedOutputFolder { get; } Property Value Type Description String OutputFolder Declaration public string OutputFolder { get; } Property Value Type Description String Methods Copy(PathMapping, RelativePath) Declaration public abstract void Copy(PathMapping sourceFileName, RelativePath destFileName) Parameters Type Name Description PathMapping sourceFileName RelativePath destFileName Implements IFileWriter.Copy(PathMapping, RelativePath) Create(RelativePath) Declaration public abstract Stream Create(RelativePath filePath) Parameters Type Name Description RelativePath filePath Returns Type Description Stream Implements IFileWriter.Create(RelativePath) CreateRandomFileStream() Declaration protected Tuple<string, FileStream> CreateRandomFileStream() Returns Type Description Tuple < String , FileStream > CreateReader() Declaration public abstract IFileReader CreateReader() Returns Type Description IFileReader Implements IFileWriter.CreateReader() EnsureFolder(String) Declaration protected static void EnsureFolder(string folder) Parameters Type Name Description String folder GetRandomEntry() Declaration protected string GetRandomEntry() Returns Type Description String RetryIO(Action) Declaration protected static void RetryIO(Action action) Parameters Type Name Description Action action RetryIO<T>(Func<T>) Declaration protected static T RetryIO<T>(Func<T> func) Parameters Type Name Description Func <T> func Returns Type Description T Type Parameters Name Description T Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.Git.GitDetail.html": {
    "href": "api/Microsoft.DocAsCode.Common.Git.GitDetail.html",
    "title": "Class GitDetail | DocFX website",
    "keywords": "Class GitDetail Inheritance Object GitDetail Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.Git Assembly :Microsoft.DocAsCode.Common.dll Syntax [Serializable] public class GitDetail Properties RelativePath Relative path of current file to the Git Root Directory Declaration [YamlMember(Alias = \"path\")] [JsonProperty(\"path\")] public string RelativePath { get; set; } Property Value Type Description String RemoteBranch Declaration [YamlMember(Alias = \"branch\")] [JsonProperty(\"branch\")] public string RemoteBranch { get; set; } Property Value Type Description String RemoteRepositoryUrl Declaration [YamlMember(Alias = \"repo\")] [JsonProperty(\"repo\")] public string RemoteRepositoryUrl { get; set; } Property Value Type Description String Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.RelativePath.html": {
    "href": "api/Microsoft.DocAsCode.Common.RelativePath.html",
    "title": "Class RelativePath | DocFX website",
    "keywords": "Class RelativePath relative path Inheritance Object RelativePath Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class RelativePath : IEquatable<RelativePath> Fields AltWorkingFolder Declaration public static readonly string AltWorkingFolder Field Value Type Description String Empty Declaration public static readonly RelativePath Empty Field Value Type Description RelativePath InvalidChars Declaration public static readonly char[] InvalidChars Field Value Type Description Char [] NormalizedWorkingFolder Declaration public static readonly string NormalizedWorkingFolder Field Value Type Description String WorkingFolder Declaration public static readonly RelativePath WorkingFolder Field Value Type Description RelativePath WorkingFolderChar Declaration public const char WorkingFolderChar = '~' Field Value Type Description Char Properties FileName Declaration public string FileName { get; } Property Value Type Description String IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean ParentDirectoryCount Declaration public int ParentDirectoryCount { get; } Property Value Type Description Int32 SubdirectoryCount Declaration public int SubdirectoryCount { get; } Property Value Type Description Int32 Methods BasedOn(RelativePath) Concat two relative path e.g.: {d/e.txt}.BasedOn({a/b/c/}) = {a/b/c/d/e.txt} {../d/e.txt}.BasedOn({a/b/c/}) = {a/b/d/e.txt} {d/e.txt}.BasedOn({a/b/c.txt}) = {a/b/d/e.txt} {../e.txt}.BasedOn({a/b/c.txt}) = {a/e.txt} {../e.txt}.BasedOn({../c.txt}) = {../../e.txt} Declaration public RelativePath BasedOn(RelativePath path) Parameters Type Name Description RelativePath path Returns Type Description RelativePath ChangeFileName(String) Declaration public RelativePath ChangeFileName(string fileName) Parameters Type Name Description String fileName Returns Type Description RelativePath Equals(RelativePath) Declaration public bool Equals(RelativePath other) Parameters Type Name Description RelativePath other Returns Type Description Boolean Implements IEquatable<T>.Equals(T) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetDirectoryPath() Declaration public RelativePath GetDirectoryPath() Returns Type Description RelativePath GetFileNameWithoutExtension() Declaration public string GetFileNameWithoutExtension() Returns Type Description String GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() GetPathFromWorkingFolder() Declaration public RelativePath GetPathFromWorkingFolder() Returns Type Description RelativePath GetPathWithoutWorkingFolderChar(String) Declaration public static string GetPathWithoutWorkingFolderChar(string path) Parameters Type Name Description String path Returns Type Description String IsFromWorkingFolder() Declaration public bool IsFromWorkingFolder() Returns Type Description Boolean IsPathFromWorkingFolder(String) Declaration public static bool IsPathFromWorkingFolder(string path) Parameters Type Name Description String path Returns Type Description Boolean IsRelativePath(String) Declaration public static bool IsRelativePath(string path) Parameters Type Name Description String path Returns Type Description Boolean MakeRelativeTo(RelativePath) Get relative path from right relative path to left relative path e.g.: {a/b/c.txt}.MakeRelativeTo({d/e.txt}) = {../a/b/c.txt} {a/b/c.txt}.MakeRelativeTo({a/d.txt}) = {b/c.txt} {../../a.txt}.MakeRelativeTo({../b.txt}) = {../a.txt} {../../a.txt}.MakeRelativeTo({../b/c.txt}) = {../../a.txt} {a.txt}.MakeRelativeTo({../b.txt}) = Oop... Declaration public RelativePath MakeRelativeTo(RelativePath relativeTo) Parameters Type Name Description RelativePath relativeTo Returns Type Description RelativePath Parse(String) Declaration public static RelativePath Parse(string path) Parameters Type Name Description String path Returns Type Description RelativePath Rebase(RelativePath, RelativePath) Rebase the relative path Declaration public RelativePath Rebase(RelativePath from, RelativePath to) Parameters Type Name Description RelativePath from original base path RelativePath to new base path Returns Type Description RelativePath rebased relative path RemoveWorkingFolder() Declaration public RelativePath RemoveWorkingFolder() Returns Type Description RelativePath ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() TryGetPathWithoutWorkingFolderChar(String, out String) Declaration public static bool TryGetPathWithoutWorkingFolderChar(string path, out string pathFromWorkingFolder) Parameters Type Name Description String path String pathFromWorkingFolder Returns Type Description Boolean TryParse(String) Declaration public static RelativePath TryParse(string path) Parameters Type Name Description String path Returns Type Description RelativePath UrlDecode() Declaration public RelativePath UrlDecode() Returns Type Description RelativePath UrlEncode() Declaration public RelativePath UrlEncode() Returns Type Description RelativePath Operators Addition(RelativePath, RelativePath) Concat two relative path e.g.: a/b/c/ + d/e.txt = a/b/c/d/e.txt a/b/c/ + ../d/e.txt = a/b/d/e.txt a/b/c.txt + d/e.txt = a/b/d/e.txt a/b/c.txt + ../e.txt = a/e.txt ../c.txt + ../e.txt = ../../e.txt Declaration public static RelativePath operator +(RelativePath left, RelativePath right) Parameters Type Name Description RelativePath left RelativePath right Returns Type Description RelativePath Equality(RelativePath, RelativePath) Declaration public static bool operator ==(RelativePath left, RelativePath right) Parameters Type Name Description RelativePath left RelativePath right Returns Type Description Boolean Explicit(String to RelativePath) Declaration public static explicit operator RelativePath(string path) Parameters Type Name Description String path Returns Type Description RelativePath Implicit(RelativePath to String) Declaration public static implicit operator string (RelativePath path) Parameters Type Name Description RelativePath path Returns Type Description String Inequality(RelativePath, RelativePath) Declaration public static bool operator !=(RelativePath left, RelativePath right) Parameters Type Name Description RelativePath left RelativePath right Returns Type Description Boolean Subtraction(RelativePath, RelativePath) Get relative path from right relative path to left relative path e.g.: a/b/c.txt - d/e.txt = ../a/b/c.txt a/b/c.txt - a/d.txt = b/c.txt ../../a.txt - ../b.txt = ../a.txt ../../a.txt - ../b/c.txt = ../../a.txt a.txt - ../b.txt = Oop... Declaration public static RelativePath operator -(RelativePath left, RelativePath right) Parameters Type Name Description RelativePath left RelativePath right Returns Type Description RelativePath Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ReplayLogListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.ReplayLogListener.html",
    "title": "Class ReplayLogListener | DocFX website",
    "keywords": "Class ReplayLogListener Replay log on flushing. Inheritance Object ReplayLogListener Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ReplayLogListener : ILoggerListener, IDisposable Constructors ReplayLogListener(LogLevel) Declaration public ReplayLogListener(LogLevel replayLevel = LogLevel.Warning) Parameters Type Name Description LogLevel replayLevel Properties Replay Declaration public bool Replay { get; set; } Property Value Type Description Boolean Methods AddListener(ILoggerListener) Declaration public void AddListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Flush() Declaration public void Flush() Implements ILoggerListener.Flush() WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ReportLogListener.MessageSeverity.html": {
    "href": "api/Microsoft.DocAsCode.Common.ReportLogListener.MessageSeverity.html",
    "title": "Enum ReportLogListener.MessageSeverity | DocFX website",
    "keywords": "Enum ReportLogListener.MessageSeverity Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public enum MessageSeverity Fields Name Description Diagnostic Error Info Verbose Warning Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ReportLogListener.ReportItem.html": {
    "href": "api/Microsoft.DocAsCode.Common.ReportLogListener.ReportItem.html",
    "title": "Class ReportLogListener.ReportItem | DocFX website",
    "keywords": "Class ReportLogListener.ReportItem Inheritance Object ReportLogListener.ReportItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ReportItem Properties Code Declaration [JsonProperty(\"code\")] public string Code { get; set; } Property Value Type Description String DateTime Declaration [JsonProperty(\"date_time\")] public DateTime DateTime { get; set; } Property Value Type Description DateTime File Declaration [JsonProperty(\"file\")] public string File { get; set; } Property Value Type Description String Line Declaration [JsonProperty(\"line\")] public string Line { get; set; } Property Value Type Description String Message Declaration [JsonProperty(\"message\")] public string Message { get; set; } Property Value Type Description String Severity Declaration [JsonProperty(\"message_severity\")] public ReportLogListener.MessageSeverity Severity { get; set; } Property Value Type Description ReportLogListener.MessageSeverity Source Declaration [JsonProperty(\"source\")] public string Source { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.JTokenConverter.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.JTokenConverter.html",
    "title": "Class JTokenConverter | DocFX website",
    "keywords": "Class JTokenConverter Inheritance Object JTokenConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class JTokenConverter Methods Convert<T>(Object) Declaration public static T Convert<T>(object obj) Parameters Type Name Description Object obj Returns Type Description T Type Parameters Name Description T"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.MarkdownContentAttribute.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.MarkdownContentAttribute.html",
    "title": "Class MarkdownContentAttribute | DocFX website",
    "keywords": "Class MarkdownContentAttribute Inheritance Object Attribute MarkdownContentAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class MarkdownContentAttribute : Attribute, _Attribute Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.MarkdownContentIgnoreAttribute.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.MarkdownContentIgnoreAttribute.html",
    "title": "Class MarkdownContentIgnoreAttribute | DocFX website",
    "keywords": "Class MarkdownContentIgnoreAttribute Inheritance Object Attribute MarkdownContentIgnoreAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class MarkdownContentIgnoreAttribute : Attribute, _Attribute Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ReferenceViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ReferenceViewModel.html",
    "title": "Class ReferenceViewModel | DocFX website",
    "keywords": "Class ReferenceViewModel Inheritance Object ReferenceViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class ReferenceViewModel Properties Additional Declaration [ExtensibleMember] [JsonIgnore] public Dictionary<string, object> Additional { get; } Property Value Type Description Dictionary < String , Object > CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public string FullName { get; set; } Property Value Type Description String FullNameInDevLangs Declaration [ExtensibleMember(\"fullName.\")] [JsonIgnore] public SortedList<string, string> FullNameInDevLangs { get; } Property Value Type Description SortedList < String , String > Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String IsExternal Declaration [JsonProperty(\"isExternal\")] [YamlMember(Alias = \"isExternal\")] public bool ? IsExternal { get; set; } Property Value Type Description Nullable < Boolean > Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String NameInDevLangs Declaration [ExtensibleMember(\"name.\")] [JsonIgnore] public SortedList<string, string> NameInDevLangs { get; } Property Value Type Description SortedList < String , String > NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string NameWithType { get; set; } Property Value Type Description String NameWithTypeInDevLangs Declaration [ExtensibleMember(\"nameWithType.\")] [JsonIgnore] public SortedList<string, string> NameWithTypeInDevLangs { get; } Property Value Type Description SortedList < String , String > Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String Specs Declaration [ExtensibleMember(\"spec.\")] [JsonIgnore] public SortedList<string, List<SpecViewModel>> Specs { get; } Property Value Type Description SortedList < String , List < SpecViewModel >> Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods Clone() Declaration public ReferenceViewModel Clone() Returns Type Description ReferenceViewModel Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.html",
    "title": "Namespace Microsoft.DocAsCode.DataContracts.RestApi | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.DataContracts.RestApi Classes RestApiChildItemViewModel RestApiItemViewModelBase RestApiParameterViewModel RestApiResponseExampleViewModel RestApiResponseViewModel RestApiRootItemViewModel RestApiTagViewModel"
  },
  "api/Microsoft.DocAsCode.Dfm.CodeSnippetRegexExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CodeSnippetRegexExtractor.html",
    "title": "Class CodeSnippetRegexExtractor | DocFX website",
    "keywords": "Class CodeSnippetRegexExtractor Inheritance Object CodeSnippetRegexExtractor FlatNameCodeSnippetExtractor RecursiveNameCodeSnippetExtractor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public abstract class CodeSnippetRegexExtractor : ICodeSnippetExtractor Methods GetAll(String[]) Declaration public Dictionary<string, DfmTagNameResolveResult> GetAll(string[] lines) Parameters Type Name Description String [] lines Returns Type Description Dictionary < String , DfmTagNameResolveResult > Implements ICodeSnippetExtractor.GetAll(String[]) ResolveCodeSnippetTags(String[]) Declaration protected abstract List<CodeSnippetTag> ResolveCodeSnippetTags(string[] lines) Parameters Type Name Description String [] lines Returns Type Description List < CodeSnippetTag > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.CodeSnippetTag.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CodeSnippetTag.html",
    "title": "Class CodeSnippetTag | DocFX website",
    "keywords": "Class CodeSnippetTag Inheritance Object CodeSnippetTag Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class CodeSnippetTag Constructors CodeSnippetTag(String, Int32, CodeSnippetTagType) Declaration public CodeSnippetTag(string name, int line, CodeSnippetTagType type) Parameters Type Name Description String name Int32 line CodeSnippetTagType type Properties Line Declaration public int Line { get; } Property Value Type Description Int32 Name Declaration public string Name { get; } Property Value Type Description String Type Declaration public CodeSnippetTagType Type { get; } Property Value Type Description CodeSnippetTagType Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.CodeSnippetTagType.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CodeSnippetTagType.html",
    "title": "Enum CodeSnippetTagType | DocFX website",
    "keywords": "Enum CodeSnippetTagType Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public enum CodeSnippetTagType Fields Name Description End Start Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockToken.html",
    "title": "Class DfmSectionBlockToken | DocFX website",
    "keywords": "Class DfmSectionBlockToken Inheritance Object DfmSectionBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmSectionBlockToken : IMarkdownToken, IDfmBlockSpecialSplitToken Constructors DfmSectionBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public DfmSectionBlockToken(IMarkdownRule rule, IMarkdownContext context, string attributes, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String attributes SourceInfo sourceInfo Properties Attributes Declaration public string Attributes { get; } Property Value Type Description String Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTagNameResolveResult.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTagNameResolveResult.html",
    "title": "Class DfmTagNameResolveResult | DocFX website",
    "keywords": "Class DfmTagNameResolveResult Inheritance Object DfmTagNameResolveResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTagNameResolveResult Properties EndLine Declaration public int EndLine { get; set; } Property Value Type Description Int32 ErrorMessage Declaration public string ErrorMessage { get; set; } Property Value Type Description String ExcludesLines Declaration public HashSet<int> ExcludesLines { get; set; } Property Value Type Description HashSet < Int32 > IsSuccessful Declaration public bool IsSuccessful { get; set; } Property Value Type Description Boolean StartLine Declaration public int StartLine { get; set; } Property Value Type Description Int32 Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTextInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTextInlineRule.html",
    "title": "Class DfmTextInlineRule | DocFX website",
    "keywords": "Class DfmTextInlineRule Inheritance Object MarkdownTextInlineRule DfmTextInlineRule Inherited Members MarkdownTextInlineRule.Name MarkdownTextInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) MarkdownTextInlineRule.Smartypants(Options, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTextInlineRule : MarkdownTextInlineRule, IMarkdownRule Properties Text Override the one in MarkdownLite, difference is: If there is a @ following . , , , ; , : , ! , ? or whitespace, exclude it as it is a xref Declaration public override Regex Text { get; } Property Value Type Description Regex Overrides MarkdownTextInlineRule.Text Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockRule.html",
    "title": "Class DfmVideoBlockRule | DocFX website",
    "keywords": "Class DfmVideoBlockRule Inheritance Object DfmVideoBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmVideoBlockRule : IMarkdownRule Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name VideoMatcher Declaration public virtual Matcher VideoMatcher { get; } Property Value Type Description Matcher VideoRegex Declaration [Obsolete(\"Please use VideoMatcher.\")] public virtual Regex VideoRegex { get; } Property Value Type Description Regex Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) TryMatchOld(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatchOld(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.TagRelation.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.TagRelation.html",
    "title": "Enum TagRelation | DocFX website",
    "keywords": "Enum TagRelation Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public enum TagRelation Fields Name Description In NotIn Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.TagValidationBehavior.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.TagValidationBehavior.html",
    "title": "Enum TagValidationBehavior | DocFX website",
    "keywords": "Enum TagValidationBehavior Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public enum TagValidationBehavior Fields Name Description Error None Warning Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.html",
    "title": "Namespace Microsoft.DocAsCode.Dfm.MarkdownValidators | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Dfm.MarkdownValidators Classes MarkdownMetadataValidationRule MarkdownSytleConfig MarkdownSytleDefinition MarkdownTagValidationRule MarkdownValidationRule MarkdownValidationSetting MarkdownValidatorBuilder Enums TagRelation TagValidationBehavior"
  },
  "api/Microsoft.DocAsCode.Dfm.MultipleLineRangeBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MultipleLineRangeBlockPathQueryOption.html",
    "title": "Class MultipleLineRangeBlockPathQueryOption | DocFX website",
    "keywords": "Class MultipleLineRangeBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption MultipleLineRangeBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MultipleLineRangeBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Properties LinePairs Declaration public List<Tuple<int ? , int ? >> LinePairs { get; set; } Property Value Type Description List < Tuple < Nullable < Int32 >, Nullable < Int32 >>> Methods GetQueryLines(String[]) Declaration public override IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[]) ValidateAndPrepare(String[], DfmFencesToken) Declaration public override bool ValidateAndPrepare(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description Boolean Overrides DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesToken) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmDelInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmDelInlineToken.html",
    "title": "Class GfmDelInlineToken | DocFX website",
    "keywords": "Class GfmDelInlineToken Inheritance Object GfmDelInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmDelInlineToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<GfmDelInlineToken> Constructors GfmDelInlineToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public GfmDelInlineToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > content SourceInfo sourceInfo Properties Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public GfmDelInlineToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description GfmDelInlineToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmEmInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmEmInlineRule.html",
    "title": "Class GfmEmInlineRule | DocFX website",
    "keywords": "Class GfmEmInlineRule Inheritance Object MarkdownEmInlineRule GfmEmInlineRule Inherited Members MarkdownEmInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmEmInlineRule : MarkdownEmInlineRule, IMarkdownRule Properties Em Declaration public override Regex Em { get; } Property Value Type Description Regex Overrides MarkdownEmInlineRule.Em Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownEmInlineRule.Name Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmEmojiInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmEmojiInlineRule.html",
    "title": "Class GfmEmojiInlineRule | DocFX website",
    "keywords": "Class GfmEmojiInlineRule Inheritance Object GfmEmojiInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmEmojiInlineRule : IMarkdownRule Properties Emoji Declaration public virtual Regex Emoji { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods GetEmoji(String) Declaration protected virtual string GetEmoji(string shortCode) Parameters Type Name Description String shortCode Returns Type Description String TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmEmojiInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmEmojiInlineToken.html",
    "title": "Class GfmEmojiInlineToken | DocFX website",
    "keywords": "Class GfmEmojiInlineToken Inheritance Object GfmEmojiInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmEmojiInlineToken : IMarkdownToken Constructors GfmEmojiInlineToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public GfmEmojiInlineToken(IMarkdownRule rule, IMarkdownContext context, string shortCode, string emoji, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String shortCode String emoji SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Emoji Declaration public string Emoji { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule ShortCode Declaration public string ShortCode { get; } Property Value Type Description String SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeInlineRule.html",
    "title": "Class MarkdownCodeInlineRule | DocFX website",
    "keywords": "Class MarkdownCodeInlineRule Inheritance Object MarkdownCodeInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownCodeInlineRule : IMarkdownRule Properties Code Declaration public virtual Regex Code { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeInlineToken.html",
    "title": "Class MarkdownCodeInlineToken | DocFX website",
    "keywords": "Class MarkdownCodeInlineToken Inheritance Object MarkdownCodeInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownCodeInlineToken : IMarkdownToken Constructors MarkdownCodeInlineToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public MarkdownCodeInlineToken(IMarkdownRule rule, IMarkdownContext context, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String content SourceInfo sourceInfo Properties Content Declaration public string Content { get; } Property Value Type Description String Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCommentInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCommentInlineRule.html",
    "title": "Class MarkdownCommentInlineRule | DocFX website",
    "keywords": "Class MarkdownCommentInlineRule Inheritance Object MarkdownCommentInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownCommentInlineRule : IMarkdownRule Properties Comment Declaration public virtual Regex Comment { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownDefBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownDefBlockRule.html",
    "title": "Class MarkdownDefBlockRule | DocFX website",
    "keywords": "Class MarkdownDefBlockRule Inheritance Object MarkdownDefBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownDefBlockRule : IMarkdownRule Properties Def Declaration [Obsolete(\"Please use DefMatcher.\")] public virtual Regex Def { get; } Property Value Type Description Regex DefMatcher Declaration public virtual Matcher DefMatcher { get; } Property Value Type Description Matcher Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) TryMatchOld(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatchOld(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEmInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEmInlineRule.html",
    "title": "Class MarkdownEmInlineRule | DocFX website",
    "keywords": "Class MarkdownEmInlineRule Inheritance Object MarkdownEmInlineRule GfmEmInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEmInlineRule : IMarkdownRule Properties Em Declaration public virtual Regex Em { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEmInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEmInlineToken.html",
    "title": "Class MarkdownEmInlineToken | DocFX website",
    "keywords": "Class MarkdownEmInlineToken Inheritance Object MarkdownEmInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEmInlineToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownEmInlineToken> Constructors MarkdownEmInlineToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public MarkdownEmInlineToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > content SourceInfo sourceInfo Properties Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownEmInlineToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownEmInlineToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngine.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngine.html",
    "title": "Class MarkdownEngine | DocFX website",
    "keywords": "Class MarkdownEngine Inheritance Object MarkdownEngine DfmEngine Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEngine : IMarkdownEngine Constructors MarkdownEngine(IMarkdownContext, IMarkdownTokenRewriter, Object, Options) Declaration public MarkdownEngine(IMarkdownContext context, IMarkdownTokenRewriter rewriter, object renderer, Options options) Parameters Type Name Description IMarkdownContext context IMarkdownTokenRewriter rewriter Object renderer Options options MarkdownEngine(IMarkdownContext, IMarkdownTokenRewriter, Object, Options, Dictionary<String, LinkObj>) Declaration protected MarkdownEngine(IMarkdownContext context, IMarkdownTokenRewriter rewriter, object renderer, Options options, Dictionary<string, LinkObj> links) Parameters Type Name Description IMarkdownContext context IMarkdownTokenRewriter rewriter Object renderer Options options Dictionary < String , LinkObj > links MarkdownEngine(IMarkdownContext, Object, Options) Declaration public MarkdownEngine(IMarkdownContext context, object renderer, Options options) Parameters Type Name Description IMarkdownContext context Object renderer Options options Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Links Declaration public Dictionary<string, LinkObj> Links { get; } Property Value Type Description Dictionary < String , LinkObj > MaxExtractCount Declaration public int MaxExtractCount { get; set; } Property Value Type Description Int32 Options Declaration public Options Options { get; } Property Value Type Description Options Parser Declaration public virtual IMarkdownParser Parser { get; } Property Value Type Description IMarkdownParser Implements IMarkdownEngine.Parser Renderer Declaration public virtual IMarkdownRenderer Renderer { get; } Property Value Type Description IMarkdownRenderer Implements IMarkdownEngine.Renderer RendererImpl Declaration public object RendererImpl { get; } Property Value Type Description Object RewriteEngine Declaration public virtual IMarkdownRewriteEngine RewriteEngine { get; } Property Value Type Description IMarkdownRewriteEngine Implements IMarkdownEngine.RewriteEngine Rewriter Declaration public IMarkdownTokenRewriter Rewriter { get; } Property Value Type Description IMarkdownTokenRewriter TokenTreeValidator Declaration public IMarkdownTokenTreeValidator TokenTreeValidator { get; set; } Property Value Type Description IMarkdownTokenTreeValidator Implements IMarkdownEngine.TokenTreeValidator Methods Mark(SourceInfo, IMarkdownContext) Declaration public StringBuffer Mark(SourceInfo sourceInfo, IMarkdownContext context) Parameters Type Name Description SourceInfo sourceInfo IMarkdownContext context Returns Type Description StringBuffer Implements IMarkdownEngine.Mark(SourceInfo, IMarkdownContext) Markup(String, String) Declaration public virtual string Markup(string markdown, string file) Parameters Type Name Description String markdown String file Returns Type Description String Implements IMarkdownEngine.Markup(String, String) Normalize(String) Declaration public static string Normalize(string markdown) Parameters Type Name Description String markdown Returns Type Description String Preprocess(String) Declaration protected virtual string Preprocess(string src) Parameters Type Name Description String src Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngineBuilder.html",
    "title": "Class MarkdownEngineBuilder | DocFX website",
    "keywords": "Class MarkdownEngineBuilder A builder for create an instance of IMarkdownEngine Inheritance Object MarkdownEngineBuilder GfmEngineBuilder MarkdownEngineByOptionsBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEngineBuilder Constructors MarkdownEngineBuilder(Options) Declaration public MarkdownEngineBuilder(Options options) Parameters Type Name Description Options options Properties BlockRules The block rules. Declaration public ImmutableList<IMarkdownRule> BlockRules { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableList < IMarkdownRule > InlineRules The inline rules. Declaration public ImmutableList<IMarkdownRule> InlineRules { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableList < IMarkdownRule > Options The options. Declaration public Options Options { get; } Property Value Type Description Options Rewriter The markdown token rewriter. Declaration public IMarkdownTokenRewriter Rewriter { get; set; } Property Value Type Description IMarkdownTokenRewriter TokenTreeValidator The markdown token tree validator. Declaration public IMarkdownTokenTreeValidator TokenTreeValidator { get; set; } Property Value Type Description IMarkdownTokenTreeValidator Methods CreateEngine(Object) Create an instance of IMarkdownEngine Declaration public virtual IMarkdownEngine CreateEngine(object renderer) Parameters Type Name Description Object renderer the renderer. Returns Type Description IMarkdownEngine an instance of IMarkdownEngine CreateParseContext() Create markdown paring context. Declaration protected virtual IMarkdownContext CreateParseContext() Returns Type Description IMarkdownContext a instance of IMarkdownContext Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenValidatorContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenValidatorContext.html",
    "title": "Class MarkdownTokenValidatorContext | DocFX website",
    "keywords": "Class MarkdownTokenValidatorContext Inheritance Object MarkdownTokenValidatorContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTokenValidatorContext : IDisposable Properties CurrentFile Declaration public static string CurrentFile { get; } Property Value Type Description String CurrentRewriteEngine Declaration public static IMarkdownRewriteEngine CurrentRewriteEngine { get; } Property Value Type Description IMarkdownRewriteEngine Explicit Interface Implementations IDisposable.Dispose() Declaration void IDisposable.Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenValidatorFactory.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenValidatorFactory.html",
    "title": "Class MarkdownTokenValidatorFactory | DocFX website",
    "keywords": "Class MarkdownTokenValidatorFactory Inheritance Object MarkdownTokenValidatorFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class MarkdownTokenValidatorFactory Methods FromLambda<TToken>(Action<TToken>) Declaration public static IMarkdownTokenValidator FromLambda<TToken>(Action<TToken> validator)where TToken : class, IMarkdownToken Parameters Type Name Description Action <TToken> validator Returns Type Description IMarkdownTokenValidator Type Parameters Name Description TToken FromLambda<TToken>(Action<TToken>, Action<IMarkdownRewriteEngine>) Declaration public static IMarkdownTokenValidator FromLambda<TToken>(Action<TToken> validator, Action<IMarkdownRewriteEngine> initializer)where TToken : class, IMarkdownToken Parameters Type Name Description Action <TToken> validator Action < IMarkdownRewriteEngine > initializer Returns Type Description IMarkdownTokenValidator Type Parameters Name Description TToken"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Matchers.LengthComparison.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Matchers.LengthComparison.html",
    "title": "Enum LengthComparison | DocFX website",
    "keywords": "Enum LengthComparison Namespace :Microsoft.DocAsCode.MarkdownLite.Matchers Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public enum LengthComparison Fields Name Description Equals GreaterThan GreaterThanOrEquals LessThan LessThanOrEquals Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Matchers.MatchContent.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Matchers.MatchContent.html",
    "title": "Struct MatchContent | DocFX website",
    "keywords": "Struct MatchContent Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace :Microsoft.DocAsCode.MarkdownLite.Matchers Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public struct MatchContent Constructors MatchContent(String, Int32, MatchDirection) Declaration public MatchContent(string text, int startIndex, MatchDirection direction = MatchDirection.Forward) Parameters Type Name Description String text Int32 startIndex MatchDirection direction Fields Direction Declaration public readonly MatchDirection Direction Field Value Type Description MatchDirection StartIndex Declaration public readonly int StartIndex Field Value Type Description Int32 Text Declaration public readonly string Text Field Value Type Description String Properties Item[Int32] Declaration public char this[int offset] { get; } Parameters Type Name Description Int32 offset Property Value Type Description Char Length Declaration public int Length { get; } Property Value Type Description Int32 Methods AddGroup(String, Int32, Int32) Declaration public void AddGroup(string name, int startIndex, int count) Parameters Type Name Description String name Int32 startIndex Int32 count BeginOfString() Declaration public bool BeginOfString() Returns Type Description Boolean CountUntil(Char, Int32) Declaration public int CountUntil(char ch, int maxCount) Parameters Type Name Description Char ch Int32 maxCount Returns Type Description Int32 CountUntilAny(Char[], Int32) Declaration public int CountUntilAny(char[] ch, int maxCount) Parameters Type Name Description Char [] ch Int32 maxCount Returns Type Description Int32 CountUntilInRange(Char, Char, Int32) Declaration public int CountUntilInRange(char start, char end, int maxCount) Parameters Type Name Description Char start Char end Int32 maxCount Returns Type Description Int32 CountWhile(Char, Int32) Declaration public int CountWhile(char ch, int maxCount) Parameters Type Name Description Char ch Int32 maxCount Returns Type Description Int32 CountWhileInRange(Char, Char, Int32) Declaration public int CountWhileInRange(char start, char end, int maxCount) Parameters Type Name Description Char start Char end Int32 maxCount Returns Type Description Int32 EndOfString() Declaration public bool EndOfString() Returns Type Description Boolean EnumerateGroups() Declaration public IEnumerable<MatchGroup> EnumerateGroups() Returns Type Description IEnumerable < MatchGroup > GetCurrentChar() Declaration public char GetCurrentChar() Returns Type Description Char GetGroup(String) Declaration public MatchGroup? GetGroup(string name) Parameters Type Name Description String name Returns Type Description Nullable < MatchGroup > Offset(Int32) Declaration public MatchContent Offset(int offset) Parameters Type Name Description Int32 offset Returns Type Description MatchContent Reverse() Declaration public MatchContent Reverse() Returns Type Description MatchContent Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Matchers.MatchDirection.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Matchers.MatchDirection.html",
    "title": "Enum MatchDirection | DocFX website",
    "keywords": "Enum MatchDirection Namespace :Microsoft.DocAsCode.MarkdownLite.Matchers Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public enum MatchDirection : byte Fields Name Description Backward Forward Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Matchers.Matcher.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Matchers.Matcher.html",
    "title": "Class Matcher | DocFX website",
    "keywords": "Class Matcher Inheritance Object Matcher Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite.Matchers Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public abstract class Matcher Fields NotMatch Declaration public const int NotMatch = -1 Field Value Type Description Int32 Properties AnyChar Declaration public static Matcher AnyChar { get; } Property Value Type Description Matcher AnyStringInSingleLine Declaration public static Matcher AnyStringInSingleLine { get; } Property Value Type Description Matcher AnyStringInSingleLineOrEmpty Declaration public static Matcher AnyStringInSingleLineOrEmpty { get; } Property Value Type Description Matcher AnyWordCharacter Declaration public static Matcher AnyWordCharacter { get; } Property Value Type Description Matcher EndOfString Declaration public static Matcher EndOfString { get; } Property Value Type Description Matcher NewLine Declaration public static Matcher NewLine { get; } Property Value Type Description Matcher WhiteSpace Declaration public static Matcher WhiteSpace { get; } Property Value Type Description Matcher WhiteSpaces Declaration public static Matcher WhiteSpaces { get; } Property Value Type Description Matcher WhiteSpacesOrEmpty Declaration public static Matcher WhiteSpacesOrEmpty { get; } Property Value Type Description Matcher WordBoundary Declaration public static Matcher WordBoundary { get; } Property Value Type Description Matcher Methods Any(Matcher[]) Declaration public static Matcher Any(params Matcher[] matchers) Parameters Type Name Description Matcher [] matchers Returns Type Description Matcher AnyCharIn(Char[]) Declaration public static Matcher AnyCharIn(params char[] ch) Parameters Type Name Description Char [] ch Returns Type Description Matcher AnyCharInRange(Char, Char) Declaration public static Matcher AnyCharInRange(char start, char end) Parameters Type Name Description Char start Char end Returns Type Description Matcher AnyCharNot(Char) Declaration public static Matcher AnyCharNot(char ch) Parameters Type Name Description Char ch Returns Type Description Matcher AnyCharNotIn(Char[]) Declaration public static Matcher AnyCharNotIn(params char[] ch) Parameters Type Name Description Char [] ch Returns Type Description Matcher BackReference(String) Declaration public static Matcher BackReference(string groupName) Parameters Type Name Description String groupName Returns Type Description Matcher CaptureGroup(String, Matcher) Declaration public static Matcher CaptureGroup(string name, Matcher matcher) Parameters Type Name Description String name Matcher matcher Returns Type Description Matcher CaseInsensitiveString(String) Declaration public static Matcher CaseInsensitiveString(string text) Parameters Type Name Description String text Returns Type Description Matcher Char(Char) Declaration public static Matcher Char(char ch) Parameters Type Name Description Char ch Returns Type Description Matcher CompareLength(Matcher, LengthComparison, String) Declaration public static Matcher CompareLength(Matcher inner, LengthComparison comparsion, string groupName) Parameters Type Name Description Matcher inner LengthComparison comparsion String groupName Returns Type Description Matcher EscapeText(String) Declaration protected string EscapeText(string text) Parameters Type Name Description String text Returns Type Description String Match(MatchContent) Match string in content. Declaration public abstract int Match(MatchContent content) Parameters Type Name Description MatchContent content The content. Returns Type Description Int32 Char count of match, -1 is not match. Maybe(Matcher) Declaration public static Matcher Maybe(Matcher matcher) Parameters Type Name Description Matcher matcher Returns Type Description Matcher NegativeTest(Matcher[]) Declaration public static Matcher NegativeTest(params Matcher[] matchers) Parameters Type Name Description Matcher [] matchers Returns Type Description Matcher Repeat(Matcher, Int32) Declaration public static Matcher Repeat(Matcher matcher, int minOccur) Parameters Type Name Description Matcher matcher Int32 minOccur Returns Type Description Matcher Repeat(Matcher, Int32, Int32) Declaration public static Matcher Repeat(Matcher matcher, int minOccur, int maxOccur) Parameters Type Name Description Matcher matcher Int32 minOccur Int32 maxOccur Returns Type Description Matcher ReverseNegativeTest(Matcher[]) Declaration public static Matcher ReverseNegativeTest(params Matcher[] matchers) Parameters Type Name Description Matcher [] matchers Returns Type Description Matcher ReverseTest(Matcher[]) Declaration public static Matcher ReverseTest(params Matcher[] matchers) Parameters Type Name Description Matcher [] matchers Returns Type Description Matcher Sequence(Matcher[]) Declaration public static Matcher Sequence(params Matcher[] matchers) Parameters Type Name Description Matcher [] matchers Returns Type Description Matcher String(String) Declaration public static Matcher String(string text) Parameters Type Name Description String text Returns Type Description Matcher Test(Matcher[]) Declaration public static Matcher Test(params Matcher[] matchers) Parameters Type Name Description Matcher [] matchers Returns Type Description Matcher Operators Addition(Matcher, Matcher) Sequence. Declaration public static Matcher operator +(Matcher left, Matcher right) Parameters Type Name Description Matcher left Matcher right Returns Type Description Matcher Addition(Matcher, Char) Sequence. Declaration public static Matcher operator +(Matcher left, char right) Parameters Type Name Description Matcher left Char right Returns Type Description Matcher Addition(Matcher, String) Sequence. Declaration public static Matcher operator +(Matcher left, string right) Parameters Type Name Description Matcher left String right Returns Type Description Matcher BitwiseOr(Matcher, Matcher) Any. Declaration public static Matcher operator |(Matcher left, Matcher right) Parameters Type Name Description Matcher left Matcher right Returns Type Description Matcher Explicit(Char to Matcher) Declaration public static explicit operator Matcher(char ch) Parameters Type Name Description Char ch Returns Type Description Matcher Explicit(String to Matcher) Declaration public static explicit operator Matcher(string text) Parameters Type Name Description String text Returns Type Description Matcher Multiply(Matcher, Int32) Repeat. Declaration public static Matcher operator *(Matcher matcher, int count) Parameters Type Name Description Matcher matcher Int32 count Returns Type Description Matcher Extension Methods MatcherExtensions.Match(Matcher, String, Int32) MatcherExtensions.ToGroup(Matcher, String) MatcherExtensions.Maybe(Matcher) MatcherExtensions.RepeatAtLeast(Matcher, Int32) MatcherExtensions.Repeat(Matcher, Int32, Int32) MatcherExtensions.ToTest(Matcher) MatcherExtensions.ToNegativeTest(Matcher) MatcherExtensions.ToReverseTest(Matcher) MatcherExtensions.ToReverseNegativeTest(Matcher) MatcherExtensions.CompareLength(Matcher, LengthComparison, String) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Matchers.MatcherExtensions.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Matchers.MatcherExtensions.html",
    "title": "Class MatcherExtensions | DocFX website",
    "keywords": "Class MatcherExtensions Inheritance Object MatcherExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite.Matchers Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class MatcherExtensions Methods CompareLength(Matcher, LengthComparison, String) Declaration public static Matcher CompareLength(this Matcher matcher, LengthComparison comparsion, string groupName) Parameters Type Name Description Matcher matcher LengthComparison comparsion String groupName Returns Type Description Matcher Match(Matcher, String, Int32) Declaration public static MatchResult Match(this Matcher matcher, string text, int startIndex = 0) Parameters Type Name Description Matcher matcher String text Int32 startIndex Returns Type Description MatchResult Maybe(Matcher) Declaration public static Matcher Maybe(this Matcher matcher) Parameters Type Name Description Matcher matcher Returns Type Description Matcher Repeat(Matcher, Int32, Int32) Declaration public static Matcher Repeat(this Matcher matcher, int minOccur, int maxOccur) Parameters Type Name Description Matcher matcher Int32 minOccur Int32 maxOccur Returns Type Description Matcher RepeatAtLeast(Matcher, Int32) Declaration public static Matcher RepeatAtLeast(this Matcher matcher, int minOccur) Parameters Type Name Description Matcher matcher Int32 minOccur Returns Type Description Matcher ToGroup(Matcher, String) Declaration public static Matcher ToGroup(this Matcher matcher, string groupName) Parameters Type Name Description Matcher matcher String groupName Returns Type Description Matcher ToNegativeTest(Matcher) Declaration public static Matcher ToNegativeTest(this Matcher matcher) Parameters Type Name Description Matcher matcher Returns Type Description Matcher ToReverseNegativeTest(Matcher) Declaration public static Matcher ToReverseNegativeTest(this Matcher matcher) Parameters Type Name Description Matcher matcher Returns Type Description Matcher ToReverseTest(Matcher) Declaration public static Matcher ToReverseTest(this Matcher matcher) Parameters Type Name Description Matcher matcher Returns Type Description Matcher ToTest(Matcher) Declaration public static Matcher ToTest(this Matcher matcher) Parameters Type Name Description Matcher matcher Returns Type Description Matcher"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Matchers.MatchGroup.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Matchers.MatchGroup.html",
    "title": "Struct MatchGroup | DocFX website",
    "keywords": "Struct MatchGroup Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace :Microsoft.DocAsCode.MarkdownLite.Matchers Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public struct MatchGroup Constructors MatchGroup(String, String, Int32, Int32) Declaration public MatchGroup(string name, string text, int startIndex, int count) Parameters Type Name Description String name String text Int32 startIndex Int32 count Fields Count Declaration public readonly int Count Field Value Type Description Int32 Name Declaration public readonly string Name Field Value Type Description String StartIndex Declaration public readonly int StartIndex Field Value Type Description Int32 Methods GetValue() Declaration public string GetValue() Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentTransformer.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentTransformer.html",
    "title": "Class TripleSlashCommentTransformer | DocFX website",
    "keywords": "Class TripleSlashCommentTransformer Inheritance Object TripleSlashCommentTransformer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class TripleSlashCommentTransformer Methods Transform(String, SyntaxLanguage) Declaration public static XDocument Transform(string xml, SyntaxLanguage language) Parameters Type Name Description String xml SyntaxLanguage language Returns Type Description XDocument"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBNameVisitorCreator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBNameVisitorCreator.html",
    "title": "Class VBNameVisitorCreator | DocFX website",
    "keywords": "Class VBNameVisitorCreator Inheritance Object NameVisitorCreator VBNameVisitorCreator Inherited Members NameVisitorCreator.GetName(ISymbol) NameVisitorCreator.GetCSharp(NameOptions) NameVisitorCreator.GetVB(NameOptions) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class VBNameVisitorCreator : NameVisitorCreator Constructors VBNameVisitorCreator(NameOptions) Declaration public VBNameVisitorCreator(NameOptions options) Parameters Type Name Description NameOptions options Methods Create() Declaration protected override NameVisitor Create() Returns Type Description NameVisitor Overrides NameVisitorCreator.Create() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBReferenceItemVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBReferenceItemVisitor.html",
    "title": "Class VBReferenceItemVisitor | DocFX website",
    "keywords": "Class VBReferenceItemVisitor Inheritance Object Microsoft.CodeAnalysis.SymbolVisitor ReferenceItemVisitor VBReferenceItemVisitor Inherited Members ReferenceItemVisitor.ShortFormat ReferenceItemVisitor.QualifiedFormat ReferenceItemVisitor.ShortFormatWithoutGenericeParameter ReferenceItemVisitor.QualifiedFormatWithoutGenericeParameter ReferenceItemVisitor.ReferenceItem ReferenceItemVisitor.VisitNamedType(INamedTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.Visit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.DefaultVisit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitDiscard(Microsoft.CodeAnalysis.IDiscardSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class VBReferenceItemVisitor : ReferenceItemVisitor Constructors VBReferenceItemVisitor(ReferenceItem, Boolean) Declaration public VBReferenceItemVisitor(ReferenceItem referenceItem, bool asOverload) Parameters Type Name Description ReferenceItem referenceItem Boolean asOverload Methods AddBeginGenericParameter() Declaration protected override void AddBeginGenericParameter() Overrides ReferenceItemVisitor.AddBeginGenericParameter() AddEndGenericParameter() Declaration protected override void AddEndGenericParameter() Overrides ReferenceItemVisitor.AddEndGenericParameter() AddGenericParameterSeparator() Declaration protected override void AddGenericParameterSeparator() Overrides ReferenceItemVisitor.AddGenericParameterSeparator() AddLinkItems(INamedTypeSymbol, Boolean) Declaration protected override void AddLinkItems(INamedTypeSymbol symbol, bool withGenericeParameter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol Boolean withGenericeParameter Overrides ReferenceItemVisitor.AddLinkItems(INamedTypeSymbol, Boolean) VisitArrayType(IArrayTypeSymbol) Declaration public override void VisitArrayType(IArrayTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IArrayTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol) VisitEvent(IEventSymbol) Declaration public override void VisitEvent(IEventSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol) VisitField(IFieldSymbol) Declaration public override void VisitField(IFieldSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitField(Microsoft.CodeAnalysis.IFieldSymbol) VisitMethod(IMethodSymbol) Declaration public override void VisitMethod(IMethodSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol) VisitNamespace(INamespaceSymbol) Declaration public override void VisitNamespace(INamespaceSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.INamespaceSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol) VisitPointerType(IPointerTypeSymbol) Declaration public override void VisitPointerType(IPointerTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IPointerTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol) VisitProperty(IPropertySymbol) Declaration public override void VisitProperty(IPropertySymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol) VisitTypeParameter(ITypeParameterSymbol) Declaration public override void VisitTypeParameter(ITypeParameterSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ITypeParameterSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBYamlModelGenerator.html",
    "title": "Class VBYamlModelGenerator | DocFX website",
    "keywords": "Class VBYamlModelGenerator Inheritance Object YamlModelGenerator SimpleYamlModelGenerator VBYamlModelGenerator Inherited Members SimpleYamlModelGenerator.ShortFormat SimpleYamlModelGenerator.QualifiedFormat SimpleYamlModelGenerator.Language Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class VBYamlModelGenerator : SimpleYamlModelGenerator Constructors VBYamlModelGenerator() Declaration public VBYamlModelGenerator() Methods DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter, Boolean) Declaration protected override void GenerateReference(ISymbol symbol, ReferenceItem reference, SymbolVisitorAdapter adapter, bool asOverload) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol ReferenceItem reference SymbolVisitorAdapter adapter Boolean asOverload Overrides SimpleYamlModelGenerator.GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter, Boolean) GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Declaration protected override string GetSyntaxContent(MemberType typeKind, ISymbol symbol, SymbolVisitorAdapter adapter) Parameters Type Name Description MemberType typeKind Microsoft.CodeAnalysis.ISymbol symbol SymbolVisitorAdapter adapter Returns Type Description String Overrides SimpleYamlModelGenerator.GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VisitorHelper.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VisitorHelper.html",
    "title": "Class VisitorHelper | DocFX website",
    "keywords": "Class VisitorHelper Inheritance Object VisitorHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class VisitorHelper Properties GlobalNamespaceId Declaration public static string GlobalNamespaceId { get; set; } Property Value Type Description String Methods FeedComments(MetadataItem, ITripleSlashCommentParserContext) Declaration public static void FeedComments(MetadataItem item, ITripleSlashCommentParserContext context) Parameters Type Name Description MetadataItem item ITripleSlashCommentParserContext context GetCommentId(ISymbol) Declaration public static string GetCommentId(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description String GetId(ISymbol) Declaration public static string GetId(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description String GetMemberTypeFromTypeKind(TypeKind) Declaration public static MemberType GetMemberTypeFromTypeKind(TypeKind typeKind) Parameters Type Name Description Microsoft.CodeAnalysis.TypeKind typeKind Returns Type Description MemberType GetOverloadId(ISymbol) Declaration public static string GetOverloadId(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description String GetOverloadIdBody(ISymbol) Declaration public static string GetOverloadIdBody(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description String GetParameterDescription(ISymbol, MetadataItem, String, Boolean, ITripleSlashCommentParserContext) Declaration public static ApiParameter GetParameterDescription(ISymbol symbol, MetadataItem item, string id, bool isReturn, ITripleSlashCommentParserContext context) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol MetadataItem item String id Boolean isReturn ITripleSlashCommentParserContext context Returns Type Description ApiParameter GetSourceDetail(ISymbol) Declaration public static SourceDetail GetSourceDetail(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description SourceDetail GetTypeParameterDescription(ITypeParameterSymbol, MetadataItem, ITripleSlashCommentParserContext) Declaration public static ApiParameter GetTypeParameterDescription(ITypeParameterSymbol symbol, MetadataItem item, ITripleSlashCommentParserContext context) Parameters Type Name Description Microsoft.CodeAnalysis.ITypeParameterSymbol symbol MetadataItem item ITripleSlashCommentParserContext context Returns Type Description ApiParameter"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlMetadataResolver.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlMetadataResolver.html",
    "title": "Class YamlMetadataResolver | DocFX website",
    "keywords": "Class YamlMetadataResolver Inheritance Object YamlMetadataResolver Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class YamlMetadataResolver Methods ExecutePipeline(MetadataModel, ResolverContext) Declaration public static void ExecutePipeline(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context ResolveMetadata(Dictionary<String, MetadataItem>, Dictionary<String, ReferenceItem>, String, Boolean, IEnumerable<String>) TODO: input Namespace list instead; TODO: Save to ...yml.map Declaration public static MetadataModel ResolveMetadata(Dictionary<string, MetadataItem> allMembers, Dictionary<string, ReferenceItem> allReferences, string apiFolder, bool preserveRawInlineComments, IEnumerable<string> externalReferencePackages) Parameters Type Name Description Dictionary < String , MetadataItem > allMembers Dictionary < String , ReferenceItem > allReferences String apiFolder Boolean preserveRawInlineComments IEnumerable < String > externalReferencePackages Returns Type Description MetadataModel"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlModelGenerator.html",
    "title": "Class YamlModelGenerator | DocFX website",
    "keywords": "Class YamlModelGenerator Inheritance Object YamlModelGenerator CompositeYamlModelGenerator SimpleYamlModelGenerator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class YamlModelGenerator Methods DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlViewModelExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlViewModelExtensions.html",
    "title": "Class YamlViewModelExtensions | DocFX website",
    "keywords": "Class YamlViewModelExtensions Inheritance Object YamlViewModelExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class YamlViewModelExtensions Methods AllowMultipleItems(MemberType) Allow multiple items in one yml file Declaration public static bool AllowMultipleItems(this MemberType type) Parameters Type Name Description MemberType type Returns Type Description Boolean GetLanguageProperty<TValue>(SortedList<SyntaxLanguage, TValue>, SyntaxLanguage, TValue) Declaration public static TValue GetLanguageProperty<TValue>(this SortedList<SyntaxLanguage, TValue> dict, SyntaxLanguage language, TValue defaultValue = null)where TValue : class Parameters Type Name Description SortedList < SyntaxLanguage , TValue> dict SyntaxLanguage language TValue defaultValue Returns Type Description TValue Type Parameters Name Description TValue IsPageLevel(MemberType) Declaration public static bool IsPageLevel(this MemberType type) Parameters Type Name Description MemberType type Returns Type Description Boolean ShrinkToSimpleToc(MetadataItem) Declaration public static MetadataItem ShrinkToSimpleToc(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description MetadataItem ShrinkToSimpleTocWithNamespaceNotEmpty(MetadataItem) Only when Namespace is not empty, return it Declaration public static MetadataItem ShrinkToSimpleTocWithNamespaceNotEmpty(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description MetadataItem ToItemViewModel(MetadataItem) Declaration public static ItemViewModel ToItemViewModel(this MetadataItem model) Parameters Type Name Description MetadataItem model Returns Type Description ItemViewModel ToPageViewModel(MetadataItem) Declaration public static PageViewModel ToPageViewModel(this MetadataItem model) Parameters Type Name Description MetadataItem model Returns Type Description PageViewModel ToReferenceViewModel(KeyValuePair<String, ReferenceItem>) Declaration public static ReferenceViewModel ToReferenceViewModel(this KeyValuePair<string, ReferenceItem> model) Parameters Type Name Description KeyValuePair < String , ReferenceItem > model Returns Type Description ReferenceViewModel ToSpecViewModel(LinkItem) Declaration public static SpecViewModel ToSpecViewModel(this LinkItem model) Parameters Type Name Description LinkItem model Returns Type Description SpecViewModel ToSyntaxDetailViewModel(SyntaxDetail) Declaration public static SyntaxDetailViewModel ToSyntaxDetailViewModel(this SyntaxDetail model) Parameters Type Name Description SyntaxDetail model Returns Type Description SyntaxDetailViewModel ToTocItemViewModel(MetadataItem) Declaration public static TocItemViewModel ToTocItemViewModel(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description TocItemViewModel ToTocViewModel(MetadataItem) Declaration public static TocViewModel ToTocViewModel(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description TocViewModel"
  },
  "api/Microsoft.DocAsCode.Plugins.SaveResult.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.SaveResult.html",
    "title": "Class SaveResult | DocFX website",
    "keywords": "Class SaveResult Inheritance Object SaveResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class SaveResult Properties DocumentType Declaration public string DocumentType { get; set; } Property Value Type Description String ExternalXRefSpecs Declaration public ImmutableArray<XRefSpec> ExternalXRefSpecs { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < XRefSpec > FileLinkSources Declaration public ImmutableDictionary<string, ImmutableList<LinkSourceInfo>> FileLinkSources { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , System.Collections.Immutable.ImmutableList < LinkSourceInfo >> FileWithoutExtension Declaration public string FileWithoutExtension { get; set; } Property Value Type Description String LinkToFiles Declaration public ImmutableArray<string> LinkToFiles { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > LinkToUids Declaration public ImmutableHashSet<string> LinkToUids { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableHashSet < String > ResourceFile Declaration public string ResourceFile { get; set; } Property Value Type Description String TocMap Declaration public ImmutableDictionary<string, HashSet<string>> TocMap { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , HashSet < String >> UidLinkSources Declaration public ImmutableDictionary<string, ImmutableList<LinkSourceInfo>> UidLinkSources { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , System.Collections.Immutable.ImmutableList < LinkSourceInfo >> XRefSpecs Declaration public ImmutableArray<XRefSpec> XRefSpecs { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < XRefSpec > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.SourceFileInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.SourceFileInfo.html",
    "title": "Class SourceFileInfo | DocFX website",
    "keywords": "Class SourceFileInfo Inheritance Object SourceFileInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class SourceFileInfo Properties DocumentType Declaration public string DocumentType { get; } Property Value Type Description String IsIncremental Declaration public bool IsIncremental { get; } Property Value Type Description Boolean SourceRelativePath Declaration public string SourceRelativePath { get; } Property Value Type Description String Methods FromManifestItem(ManifestItem) Declaration public static SourceFileInfo FromManifestItem(ManifestItem manifestItem) Parameters Type Name Description ManifestItem manifestItem Returns Type Description SourceFileInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.SubCommandParseOption.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.SubCommandParseOption.html",
    "title": "Enum SubCommandParseOption | DocFX website",
    "keywords": "Enum SubCommandParseOption Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public enum SubCommandParseOption Fields Name Description Loose Strict Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.SubCommandRunningContext.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.SubCommandRunningContext.html",
    "title": "Class SubCommandRunningContext | DocFX website",
    "keywords": "Class SubCommandRunningContext Inheritance Object SubCommandRunningContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class SubCommandRunningContext Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.TocInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.TocInfo.html",
    "title": "Class TocInfo | DocFX website",
    "keywords": "Class TocInfo Inheritance Object TocInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class TocInfo Constructors TocInfo(String) Declaration public TocInfo(string tocFileKey) Parameters Type Name Description String tocFileKey Properties Homepage Declaration public string Homepage { get; set; } Property Value Type Description String TocFileKey Declaration public string TocFileKey { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.TreeItem.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.TreeItem.html",
    "title": "Class TreeItem | DocFX website",
    "keywords": "Class TreeItem Inheritance Object TreeItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class TreeItem Properties Items Declaration [JsonProperty(\"items\")] public List<TreeItem> Items { get; set; } Property Value Type Description List < TreeItem > Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.TreeItemActionType.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.TreeItemActionType.html",
    "title": "Enum TreeItemActionType | DocFX website",
    "keywords": "Enum TreeItemActionType Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public enum TreeItemActionType Fields Name Description AppendChild DeleteSelf InsertAfter InsertBefore PrependChild ReplaceSelf Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.TreeItemKeyType.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.TreeItemKeyType.html",
    "title": "Enum TreeItemKeyType | DocFX website",
    "keywords": "Enum TreeItemKeyType Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public enum TreeItemKeyType Fields Name Description TopicHref TopicUid Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "README.html": {
    "href": "README.html",
    "title": "| DocFX website",
    "keywords": "Documentation project uses docfx.console nuget package to generate documentation for docfx project, along with conceputal files, with docfx.json to provide configuration for docfx ."
  },
  "guideline/csharp_coding_standards.html": {
    "href": "guideline/csharp_coding_standards.html",
    "title": "C# Coding Standards | DocFX website",
    "keywords": "C# Coding Standards Introduction The C# Coding Standards will be used in conjunction with customized versions of StyleCop and FxCop [ TODO ] during both development and build process. This will help ensure that all developers on the team are in a consistent manner. \"Any fool can write code that a computer can understand. Good programmers write code that humans understand\". Martin Fowler. Refactoring: Improving the design of existing code. Purpose This section defines a set of C# coding standards to be used by the DocFX build team to guarantee maximum legibility, reliability, re-usability and homogeneity of our code. Each section is marked Mandatory or Recommended . Mandatory sections will be enforced during code reviews as well as tools like StyleCop and FxCop , and code will not be considered complete until it is compliant. Scope This section contains general C# coding standards that can be applied to any type of application developed in C#, based upon Framework Design Guidelines . This section is not intended to be a tutorial on C#. Instead, it includes a set of limitations and recommendations focused on clarifying the development. Tools ReSharper is a useful third-party code cleanup and style tool. StyleCop analyzes C# source code to enforce a set of style and consistency rules and has been integrated into many third-party development tools such as ReSharper. FxCop is an application that analyzes managed code assemblies (code that targets the .NET Framework common language runtime) and reports information about the assemblies, such as possible design, localization, performance, and security improvements. Highlights of Coding Standards This section is not intended to give a summary of all the coding standards enabled by our customized StyleCop, but to give a highlight of some rules one will possibly meet in daily coding life. It also provides some coding standards that are recommended but not mandatory (that is, not enabled by StyleCop). File Layout (Recommended) Only one public class is allowed per file. The file name derives from the class name. Class : Observer Filename: Observer.cs Class Definition Order (Mandatory) The class definition contains class members in the following order, from less restricted scope (public) to more restrictive (private): ~ Nested types, e.g. classes, enum, struct, etc. ~ Non-private nested types are not allowed. Field members (for example, member variables, const, etc.) Member functions Constructors Finalizer (Do not use unless absolutely necessary) Methods (Properties, Events, Operations, Overridables and Static) Private nested types Naming (Mandatory) DO use plural form for namespaces DO use PascalCasing for all public member, type, and namespace names consisting of multiple words. PropertyDescriptor HtmlTag IOStream Note A special case is made for two-letter acronyms in which both letters are capitalized, e.g. IOStream DO use camelCasing for parameter names. propertyDescriptor htmlTag ioStream DO start with underscore for private fields: private readonly Guid _userId = Guid.NewGuid(); DO start static readonly field and constant names with capitalized case private static readonly IEntityAccessor EntityAccessor = null; private const string MetadataName = \"MetadataName\"; DO NOT capitalize each word in so-called closed-form compound words . DO use Async suffix in the asynchronous method names to notice people how to use it properly public async Task<string> LoadContentAsync() { ... } Formatting (Mandatory) DO use spaces over tabs, and always show all spaces/tabs in IDE Tips Visual Studio > Tools > Options... > Text Editor > C# > Tabs > Insert spaces (Tab size: 4) Visual Studio > Edit > Advanced > View White Space (Ctrl+R, Ctrl+W) DO add using inside namespace declaration namespace Microsoft.Content.Build.BuildWorker.UnitTest { using System; } DO add a space when: for (var i = 0; i < 1; i++) if (a == b) Performace Consideration DO use sealed for private classes if they are not to be inherited. DO add readonly to fields if they do not tend to be changed. DO use static methods if it is not instance relevant. DO use RegexOptions.Compiled for readonly Regex . Cross-platform coding Our code can and should support multiple operating systems in addition to Windows. Code should be sensitvie to the differences between Operating Systems. Here are some specifics to consider: DO use Enviroment.NewLine instead of hard-coding the line break, as Windows uses \\r\\n and OSX/Linux uses \\n . Note Be aware that these line-endings may cause problems in code when using @\"\" text blocks with line breaks, e.g.: var x = @\"line1 line2\"; DO use Path.Combine() or Path.DirectorySeparatorChar to separate directories. If this is not possible (such as in scripting), use a forward slash / . Windows is more forgiving than Linux in this regard. Unit tests and functional tests Assembly naming The unit tests for the Microsoft.Foo assembly live in the Microsoft.Foo.Tests assembly. The functional tests for the Microsoft.Foo assembly live in the Microsoft.Foo.FunctionalTests assembly. In general there should be exactly one unit tests assembly for each product runtime assembly. In general there should be one functional tests assembly per repo. Exceptions can be made for both. Unit test class naming Test class names end with Test suffix and live in the same namespace as the class being tested. For example, the unit tests for the Microsoft.Foo.Boo class would be in a Microsoft.Foo.BooTest class in the unit tests assembly Microsoft.Foo.Tests . Unit test method naming Unit test method names must be descriptive about what developers are testing, under what conditions, and what the expectations are . Pascal casing and underscores can be used to improve readability. The following test names are correct: PublicApiArgumentsShouldHaveNotNullAnnotation Public_api_arguments_should_have_not_null_annotation The following test names are incorrect: Test1 Constructor FormatString GetData Unit test structure The contents of every unit test should be split into three distinct stages (arrange, act and assert), optionally separated by these comments: // Arrange // Act // Assert The crucial thing here is the Act stage is exactly one statement. That one statement calls only the one method that you are trying to test. Keeping that one statement as simple as possible is also very important. For example, this is not ideal: int result = myObj.CallSomeMethod(GetComplexParam1(), GetComplexParam2(), GetComplexParam3()); This style is not recommended because too much can go wrong in this one statement. All the GetComplexParamN() calls can throw exceptions for a variety of reasons unrelated to the test itself. It is thus unclear to someone running into a problem why the failure occurred. The ideal pattern is to move the complex parameter building into the Arrange section: // Arrange P1 p1 = GetComplexParam1(); P2 p2 = GetComplexParam2(); P3 p3 = GetComplexParam3(); // Act int result = myObj.CallSomeMethod(p1, p2, p3); // Assert Assert.AreEqual(1234, result); Now the only reason the line with CallSomeMethod() can fail is if the method itself throws an error. Testing exception messages Testing the specific exception message in a unit test is important. This ensures that the desired exception is being tested rather than a different exception of the same type. In order to verify the exact exception, it is important to verify the message. // Act var ex = Assert.Throws<InvalidOperationException>(() => fruitBasket.GetBananaById(-1)); // Assert Assert.Equal(\"Cannot load banana with negative identifier.\", ex.Message); Use xUnit.net's plethora of built-in assertions xUnit.net includes many kinds of assertions – please use the most appropriate one for your test. This makes the tests much more readable and also allows the test runner to report the best possible errors (whether it's local or the CI machine). For example, these are bad: Assert.Equal(true, someBool); Assert.True(\"abc123\" == someString); Assert.True(list1.Length == list2.Length); for (int i = 0; i < list1.Length; i++) { Assert.True( String.Equals( list1[i], list2[i], StringComparison.OrdinalIgnoreCase)); } These are good: Assert.True(someBool); Assert.Equal(\"abc123\", someString); // built-in collection assertions! Assert.Equal(list1, list2, StringComparer.OrdinalIgnoreCase); Parallel tests By default all unit test assemblies should run in parallel mode, which is the default. Unit tests shouldn't depend on any shared state, and so should generally be runnable in parallel. If tests fail in parallel, the first thing to do is to figure out why; do not just disable parallel testing! For functional tests, you can disable parallel tests."
  },
  "guideline/engineering_guidelines.html": {
    "href": "guideline/engineering_guidelines.html",
    "title": "Engineering Guidelines | DocFX website",
    "keywords": "Engineering Guidelines Basics Copyright header and license notice All source code files require the following exact header according to its language (please do not make any changes to it). extension: .cs // Copyright (c) Microsoft. All rights reserved. // Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .js // Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .css /* Copyright (c) Microsoft Corporation. All Rights Reserved. Licensed under the MIT License. See License.txt in the project root for license information. */ extension: .tmpl , .tmpl.partial {{!Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information.}} External dependencies This refers to dependencies on projects (that is, NuGet packages) outside of the docfx repo, and especially outside of Microsoft. Adding new dependencies requires additional approval. Current approved dependencies are: Newtonsoft.Json Jint HtmlAgilityPack Nustache YamlDotNet Code reviews and checkins To help ensure that only the highest quality code makes its way into the project, please submit all your code changes to GitHub as PRs. This includes runtime code changes, unit test updates, and deployment scripts. For example, sending a PR for just an update to a unit test might seem like a waste of time but the unit tests are just as important as the product code. As such, reviewing changes to unit tests is just as important. The advantages are numerous: Improving code quality; increasing visibility on changes and their potential impact; avoiding duplication of effort; and creating general awareness of progress being made in various areas. In general a PR should be signed off(using the 👍 emoticon) by the owner of that code. To commit the PR to the repo, do not use the Big Green Button . Instead, do a typical push that you would use with Git (for example, local pull, rebase, merge or push). Source Code Management Branch strategy In general: master has the code for the latest release on NuGet.org. (e.g. 1.0.0 , 1.1.0 ) dev has the code that is being worked on but that we have not yet released. This is the branch into which developers normally submit pull requests and merge changes into. We run daily CI towards dev branch and generate pre-release nuget package, e.g. 1.0.1-alpha-9-abcdefsd . Solution and project folder structure and naming Solution files go in the repo root. The default entry point is All.sln . Every project also needs a project.json and a matching .xproj file. This project.json is the source of truth for a project's dependencies and configuration options. The solution needs to contain solution folders that match the physical folder ( src , test , tools , etc.). Assembly naming pattern The general naming pattern is Microsoft.DocAsCode.<area>.<subarea> . Unit tests We use xUnit.net for all unit testing. Coding Standards Please refer to C# Coding standards for detailed guideline for C# coding standards. TODO Template Coding standards TODO Template Preprocess JS Coding standards"
  },
  "spec/docfx_build_manifest_file.html": {
    "href": "spec/docfx_build_manifest_file.html",
    "title": "Data structure for manifest file generated by docfx build | DocFX website",
    "keywords": "Data structure for manifest file generated by docfx build After docfx build , docfx generates a manifest file in JSON format in the root output folder, listing some basic information about the set of files that docfx build handles. Before DocFX version 1.7, the manifest file is an Array of items. Then DocFX realizes that there are also global properties manifest file consumers care about, for example, the list of TOC files that DocFX processed. However, it is hard to add properties to an Array model. So since version 1.8, DocFX introduces a new Object model for the manifest file. For backward compatibility, in version 1.8, DocFX generates both Array model to-be-obsoleted and the new Object model. In version 1.9, manifest file in Array model will be removed . Below table shows the difference between manifest file in Array model and manifest file in Object model. ---- File Name Data Model Old Array Model .manifest Array model New Object Model .manifest.json Object model The obsoleted Array model Array model contains a list of Manifest Item s. The new Object model Current supported properties for the Object model is listed as below: Property Name Type Description files Array of Manifest Item Array of Manifest Item model homepages Array of Homepage Array of Homepage model Manifest Item model Property Name Type Description type string The documentType is generated by plugins or specified to each file using Yaml Header . Currently by default DocFX generates following document type s: ManagedReference , Conceptual , RestApi , Resource , toc . original string Specifies the input file path to the root folder of the Git repository. It is the absolute file path if the file is not inside a Git repository. outputFiles Dictionary<string,string> For each output file, the key is the extension of the transformed file, the extension is determined by the template it applies to. And the value is the output file path relative to the manifest file. Homepage model Property Name Type Description tocPath string Specifies the output TOC file path relative to the manifest file. homepage string Specifies the homepage for current TOC with file path relative to the manifest file."
  },
  "spec/docfx_design_spec.html": {
    "href": "spec/docfx_design_spec.html",
    "title": "docfx Design Spec | DocFX website",
    "keywords": "docfx Design Spec 0. Terms Term Description DFM DocFX Flavored Markdown API The API generated from source code Overwrite Files The files with YAML header used to override YAML files when uid matches. 1. Scenarios docfx should support the following scenarios: Source Code => Website Conceptual => Website YAML files => Website <!--break list--> 2. Architecture 3. Feature List Support for DocFX Flavored Markdown Ability to parse TOC.json/TOC.yml/TOC.md Custom template naming: {type}.{extension}.tmpl under folder {templateName} Open Issues Should we support other conceptual file format, for example, RST? ==> How to parse? How do you know which link to replace to html, and which not? ==>"
  },
  "spec/docfx_flavored_markdown.html": {
    "href": "spec/docfx_flavored_markdown.html",
    "title": "DocFX Flavored Markdown | DocFX website",
    "keywords": "DocFX Flavored Markdown DocFX supports DocFX Flavored Markdown , or DFM. It supports all GitHub Flavored Markdown syntax with 2 exceptions when resolving list . Also, DFM adds new syntax to support additional functionalities, including cross reference and file inclusion. Yaml Header Yaml header in DFM is considered as the metadata for the Markdown file. It will transform to yamlheader tag when processed. Yaml header MUST be the first thing in the file and MUST take the form of valid YAML set between triple-dashed lines. Here is a basic example: --- uid: A.md title: A --- Cross Reference Cross reference allows you to link to another topic by using its unique identifier (called UID) instead of using its file path. For conceptual Markdown files UID can be defined by adding a uid metadata in YAML header: --- uid: uid_of_the_file --- This is a conceptual topic with `uid` specified. For reference topics, UIDs are auto generated from source code and can be found in generated YAML files. You can use one of the following syntax to cross reference a topic with UID defined: Markdown link: [link_text](xref:uid_of_the_topic) Auto link: <xref:uid_of_the_topic> Shorthand form: @uid_of_the_topic All will render to: <a href=\"url_of_the_topic\">link_text</a> If link_text is not specified, DocFX will extract the title from the target topic and use it as the link text. Note Hashtag in xref is always treated as separator between file name and anchor name. That means if you have # in UID, it has to be encoded to %23 . Actually xref format follows URI standard so all reserved characters should be encoded. For more information, see cross reference . File Inclusion DFM adds syntax to include other file parts into current file, the included file will also be considered as in DFM syntax. There are two types of file inclusion: Inline and block, as similar to inline code span and block code. Note YAML header is NOT supported when the file is an inclusion. Inline Inline file inclusion is in the following syntax, in which <title> stands for the title of the included file, and <filepath> stands for the file path of the included file. The file path can be either absolute or relative. <filepath> can be wrapped by ' or \" . Note For inline file inclusion, the file included will be considered as containing only inline tags, for example, ###header inside the file will not transfer since <h3> is a block tag, while [a](b) will transform to <a href='b'>a</a> since <a> is an inline tag. Also, ending white spaces will be trimmed , considering ending white spaces in inline inclusion in most cases are typos. ...Other inline contents... [!include[<title>](<filepath>)] Block Block file inclusion must be in a single line and with no prefix characters before the start [ . Content inside the included file will transform using DFM syntax. [!include[<title>](<filepath>)] Section definition User may need to define section. Mostly used for code table. Give an example below. > [!div class=\"tabbedCodeSnippets\" data-resources=\"OutlookServices.Calendar\"] > ```cs > <cs code text> > ``` > ```javascript > <js code text> > ``` The above blockquote Markdown text will transform to section html as in the following: <div class=\"tabbedCodeSnippets\" data-resources=\"OutlookServices.Calendar\"> <pre><code>cs code text</code></pre> <pre><code>js code text</code></pre> </div> Code Snippet Allows you to insert code with code language specified. The content of specified code path will expand. [!code-<language>[<name>](<codepath><queryoption><queryoptionvalue> \"<title>\")] <language> can be made up of any number of character and '-'. However, the recommended value should follow Highlight.js language names and aliases . <codepath> is the relative path in file system which indicates the code snippet file that you want to expand. <queryoption> and <queryoptionvalue> are used together to retrieve part of the code snippet file in the line range or tag name way. We have 2 query string options to represent these two ways: query string using # query string using ? 1. line range #L{startlinenumber}-L{endlinenumber} ?start={startlinenumber}&end={endlinenumber} 2. tagname #{tagname} ?name={tagname} 3. multiple region range Unsupported ?range={rangequerystring} 4. highlight lines Unsupported ?highlight={rangequerystring} 5. dedent Unsupported ?dedent={dedentlength} In ? query string, the whole file will be included if none of the first three option is specified. If dedent isn't specified, the maximum common indent will be trimmed automatically. <title> can be omitted. Code Snippet Sample [!code-csharp[Main](Program.cs)] [!code[Main](Program.cs#L12-L16 \"This is source file\")] [!code-vb[Main](../Application/Program.vb#testsnippet \"This is source file\")] [!code[Main](index.xml?start=5&end=9)] [!code-javascript[Main](../jquery.js?name=testsnippet)] [!code[Main](index.xml?range=2,5-7,9-) \"This includes the lines 2, 5, 6, 7 and lines 9 to the last line\"] [!code[Main](index.xml?highlight=2,5-7,9-) \"This includes the whole file with lines 2,5-7,9- highlighted\"] Tag Name Representation in Code Snippet Source File DFM currently only supports the following <language> values to be able to retrieve by tag name: C#: cs, csharp VB: vb, vbnet C++: cpp, c++ F#: fsharp XML: xml Html: html SQL: sql Javascript: javascript Note (Warning/Tip/Important) Using specific syntax inside block quote to indicate the following content is Note. > [!NOTE] > <note content> > [!WARNING] > <warning content> The above content will be transformed to the following html: <div class=\"NOTE\"> <h5>NOTE</h5> <p>note content</p> </div> <div class=\"WARNING\"> <h5>WARNING</h5> <p>WARNING content</p> </div> Here are all the supported note types with the styling of the default theme applied: Note This is a note which needs your attention, but it's not super important. Tip This is a note which needs your attention, but it's not super important. Warning This is a warning containing some important message. Important This is a warning containing some important message. Caution This is a warning containing some important message. Differences between DFM and GFM List DFM list item always uses the first character in the first line to decide whether it is in the list item, but GFM does not. For example: Case 1: * a * b * c text a starts at column 3, b starts at column 5, c starts at column 7. text will be in DFM, text starts at column in GFM, text starts at column paragraph 1 1 part of item a 2 ~ 3 (> 1 and <= 3) 2 ~ 4 part of item b 4 ~ 5 (> 3 and <= 6) 5 ~ 6 part of item c 6 or more (> 6) 7 or more part of item c and code 11 (7 + 4) 13 Case 2: 1. a 2. b 3. c text a starts at column 4, b starts at column 7, c starts at column 10. text will be in DFM, text starts at column in GFM, text starts at column paragraph 1 1 part of item a 2 ~ 4 (> 1 and <= 4) 2 ~ 4 part of item b 5 ~ 7 (> 4 and <= 7) 5 ~ 8 part of item c 8 or more (> 7) 9 or more part of item c and code 14 (10 + 4) 15 List after paragraph In GFM, list after paragraph must be separated by two or more new line character. In DFM, one new line also works. For example: text 1. a 2. b In GFM, it will be rendered as one paragraph with content text 1. a 2. b . In DFM, it will be rendered as a paragraph (with content text ) and a list. Differences introduced by DFM syntax Warning Please note that DFM introduces more syntax to support more functionalities. When GFM does not support them, preview the Markdown file inside GFM Preview can lead to different results. YAML header In GFM, YAML header must start at the very beginning of the Markdown file. In DFM, YAML header contains more powerful meanings. Refer to Yaml Header for details. ...some text... --- a: b --- In GFM, it would be rendered as <hr>a: b<hr> . In DFM, it would be rendered as a YAML header. If you want to get <hr> in html in DFM, please use: - - - *** * * * or change content to make it not in YAML format: --- a\\: b --- Text after block extension Some block extension in DFM cannot be recognized in GFM. In GFM, it would be treated as a part of paragraph. Then, following content would be treated as a part of paragraph. For example: > [!NOTE] > This is code. In GFM, it will be rendered as a paragraph with content [!NOTE] This is code. in blockquote. In DFM, it will be rendered as a code in note."
  },
  "spec/docfx_incremental.html": {
    "href": "spec/docfx_incremental.html",
    "title": "Doc-as-code: DocFx.exe Incremental Build Specification | DocFX website",
    "keywords": "Doc-as-code: DocFx.exe Incremental Build Specification This documentation describes the implementation of incrementally extracting metadata from source. Currently we are using Roslyn to compile and analyse source code on the fly. When input sources are large, it may take minutes to load and process the files. To speed up the extraction, previous extracted details are saved to cache for further reference. There are two level caches in current implementation. First one is called Application Level cache, and the other one is Project level cache. Application level cache is saved in file %LocalAppData%/xdoc/cache . For Project level cache, a. If input sources are supported project files, e.g. .csproj or .vbproj files, Project level cache is located in file obj/xdoc/.cache under the same folder of the project file. b. If input sources are supported source code files, e.g. .cs or .vb files, Project level cache is located in file obj/xdoc/.cache under the same folder of the alphabetically first source code file. The cache file contains key-value pairs saved in JSON format. The key is the normalized input source code files, and the data structure for the value is as below: Property Description TriggeredUTCTime The UTC time when the action is triggered CompletedUTCTime The UTC time when the action is completed OutputFolder The output folder for the extracted result RelativeOutputFiles The paths of the extracted results related to the OutputFolder CheckSum The MD5 checksum calculated for all the extracted results Detailed Steps are described below: For each input solution/project/source files, get most latest LastModifiedTime . a. For solution, get LastModifiedTime for the solution file, and containing projects b. For project, get LastModifiedTime for the project file, project references, assembly references and containing documents. c. For source files, get LastModifiedTime for the files Normalize project list, check if Application level cache for these project list exists. Compare TriggeredUTCTime with the LastModifiedTime fetched in #1, and check if checksum remains unchanged for output files. If is, copy result files to output folder. Otherwise, continue to #3. For each supported solution/project/source code files, Step 1 . Check if Project level cache exists. If not, go to Step 4 . Step 2 . Compare TriggeredUTCTime with the LastModifiedTime fetched in #1, and check if checksum remains unchanged for output files. If not, go to Step 3 . Step 3 . Generate YAML metadata for current project and save to Project level cache. Read YAML metadata for each project, and merge with others following rules below: Rule 1 . For namespace , if uid equals, append . Rule 2 . For other type, if uid equals, override . Save result, and update *Application level cache."
  },
  "spec/metadata_dotnet_spec.html": {
    "href": "spec/metadata_dotnet_spec.html",
    "title": "DocFx: Metadata Format for .NET Languages | DocFX website",
    "keywords": "DocFx: Metadata Format for .NET Languages 0. Introduction 0.1 Goal and Non-goals 0.2 Terminology 1. Items The following .NET elements are defined as items in metadata: Namespaces Types, including class, struct, interface, enum, delegate Type members, including field, property, method, event Other elements such as parameters and generic parameters are not standalone items , they're part of other items . 2. Identifiers 2.1 Unique Identifiers For any item in .NET languages, its UID is defined by concatenating its parent 's UID and its own ID with a dot. The ID for each kind of item is defined in following sections. The basic principle here is to make ID format close to source code and easy for human reading. UID is similar to the document comment id, which is started with type prefix, for example, T: , or M: , but UID do not. There MUST NOT be any whitespace between method name, parentheses, parameters, and commas. 2.2 Spec Identifiers Spec identifier is another form of UID . It can spec a generic type with type arguments (for example, for parameters, return types or inheritances) and these UID s are unique in one yaml file. It is a simple modified Unique Identifiers, when it contains generic type arguments, it will use {Name} instead `N . For type parameter, it will be {Name} . And it also supports array and pointer. Example 2.2 Spec Identifier C#: namespace Foo { public class Bar { public unsafe List<String> FooBar<TArg>(int[] arg1, byte* arg2, TArg arg3, List<TArg[]> arg4) { return null; } } } YAML: references: - uid: System.Collections.Generic.List{System.String} - uid: System.Int32[] - uid: System.Byte* - uid: {TArg} - uid: System.Collections.Generic.List{{TArg}[]} 3. Namespaces For all namespaces, they are flat, e.i. namespaces do not have the parent namespace. So for any namespace, ID is always same with its UID . Example 3 Namespace C#: namespace System.IO { } YAML: uid: System.IO id: System.IO name: System.IO fullName: System.IO The children of namespace are all the visible types in the namespace. 4. Types Types include classes, structs, interfaces, enums, and delegates. They have following properties: summary, remarks, syntax, namespace, assemblies, inheritance. The parents of types are namespaces. The children of types are members. ID ID for a type is also its name . Example 4 Type C#: namespace System { public class String {} public struct Boolean {} public interface IComparable {} public enum ConsoleColor {} public delegate void Action(); } YAML: - uid: System.String id: String name.csharp: String fullName.csharp: System.String - uid: System.Boolean id: Boolean name.csharp: Boolean fullName.csharp: System.String - uid: System.IComparable id: IComparable name.csharp: IComparable fullName.csharp: System.IComparable - uid: System.ConsoleColor id: ConsoleColor name.csharp: ConsoleColor fullName.csharp: System.ConsoleColor - uid: System.Action id: Action name.csharp: Action fullName.csharp: System.Action 4.1 ID for Nested Types For nested types, ID is defined by concatenating the ID of all its containing types and the ID of itself, separated by a dot. The parent type of a nested type is its containing namespace, rather than its containing type. Example 4.1 Nested type C#: namespace System { public class Environment { public enum SpecialFolder {} } } YAML: uid: System.Environment.SpecialFolder id: Environment.SpecialFolder name.csharp: Environment.SpecialFolder fullName.csharp: System.Environment.SpecialFolder 4.2 Inheritance Only class contains inheritance, and the inheritance is a list of spec id. Example 4.2 Inheritance C#: namespace System.Collections.Generic { public class KeyedByTypeCollection<TItem> : KeyedCollection<Type, TItem> { } } YAML: uid : System.Collections.Generic.KeyedByTypeCollection`1 inheritance: - System.Collections.ObjectModel.KeyedCollection{System.Type,{TItem}} - System.Collections.ObjectModel.Collection{{TItem}} - System.Object 4.3 Syntax The syntax part for type contains declaration, and descriptions of type parameters for different languages. For delegates, it also contains descriptions of parameters and a return type. 5. Members Members include fields, properties, methods, and events. They have the following properties: summary, remarks, exceptions, and syntax. The parents of members are types. Members never have children, and all parameter types or return types are spec id. 5.1 Constructors The ID of a constructor is defined by #ctor , followed by the list of the UIDs of its parameter types: When a constructor does not have parameter, its ID MUST NOT end with parentheses. The syntax part for constructors contains a special language declaration, and descriptions of parameters. Example 5.1 Constructor C#: namespace System { public sealed class String { public String(); public String(char[] chars); } } YAML: - uid: System.String.#ctor id: #ctor name.csharp: String() fullName.csharp: System.String.String() - uid: System.String.#ctor(System.Char[]) id: #ctor(System.Char[]) name.csharp: String(Char[]) fullName.csharp: System.String.String(System.Char[]) 5.2 Methods The ID of a method is defined by its name, followed by the list of the UIDs of its parameter types: method_name(param1,param2,...) When a method does not have parameter, its ID MUST end with parentheses. The syntax part for method contains a special language declaration, and descriptions of type parameters for generic method, descriptions of parameters and return type. Example 5.2 Method C#: namespace System { public sealed class String { public String ToString(); public String ToString(IFormatProvider provider); } } YAML: - uid: System.String.ToString id: ToString name.csharp: ToString() fullName.csharp: System.String.ToString() - uid: System.String.ToString(System.IFormatProvider) id: ToString(System.IFormatProvider) name.csharp: ToString(IFormatProvider) fullName.csharp: System.String.ToString(System.IFormatProvider) 5.2.1 Explicit Interface Implementation The ID of an explicit interface implementation (EII) member MUST be prefixed by the UID of the interface it implements and replace . to # . Example 2.6 Explicit interface implementation (EII) C#: namespace System { using System.Collections; public sealed class String : IEnumerable { IEnumerator IEnumerable.GetEnumerator(); } } YAML: - uid: \"System.String.System#Collections#IEnumerable#GetEnumerator\" id: \"System#Collections#IEnumerable#GetEnumerator\" name.csharp: IEnumerable.GetEnumerator() fullName.csharp: System.String.System.Collections.IEnumerable.GetEnumerator() 5.4 Operator Overloads The IDs of operator overloads are same with the metadata name (for example, op_Equality ). The names of operator overloads are similar to MSDN, just remove op_ from the metadata name of the method. For instance, the name of the equals ( == ) operator is Equality . Type conversion operator can be considered a special operator whose name is the UID of the target type, with one parameter of the source type. For example, an operator that converts from string to int should be Explicit(System.String to System.Int32) . The syntax part for methods contains a special language declaration, descriptions of parameters and return type. Example 5.4 Operator overload namespace System { public struct Decimal { public static implicit operator Decimal(Char value); } public sealed class String { public static bool operator ==(String a, String b); } } YAML: - uid: System.Decimal.op_Implicit(System.Char to System.Decimal) id: op_Implicit(System.Char to System.Decimal) name.csharp: Implicit(Char to Decimal) fullName.csharp: System.Decimal.Implicit(System.Char to System.Decimal) - uid: System.String.op_Equality(System.String,System.String) id: op_Equality(System.String,System.String) name.csharp: Equality(String,String) fullName.csharp: System.String.Equality(System.String,System.String) Please check overloadable operators for all overloadable operators. 5.5 Field, Property or Event The ID of field, property or event is its name. The syntax part for field contains a special language declaration and descriptions of field type. For property, it contains a special language declaration, descriptions of parameters, and return type. For event, it contains a special language declaration and descriptions of event handler type. Example 5.5 Field, Property and Event C#: namespace System { public sealed class String { public static readonly String Empty; public int Length { get; } } public static class Console { public static event ConsoleCancelEventHandler CancelKeyPress; } } YAML: - uid: System.String.Empty id: Empty name.csharp: Empty fullName.csharp: System.String.Empty - uid: System.String.Length id: Length name.csharp: Length fullName.csharp: System.String.Length - uid: System.Console.CancelKeyPress id: CancelKeyPress name.csharp: CancelKeyPress fullName.csharp: System.Console.CancelKeyPress 5.6 Indexer Indexer operator's name is metadata name, by default, it is Item , with brackets and parameters. Example 5.6 Indexer namespace System.Collections { public interface IList { object this[int index] { get; set; } } } YAML: - uid: \"System.Collections.IList.Item[System.Int32]\" id: \"Item[System.Int32]\" name.csharp: Item[Int32] fullName.csharp: System.Collections.IList.Item[System.Int32] 6. Generics The ID of a generic type is its name with followed by `n , n and the count of generic type count, which is the same as the rule for document comment ID. For example, Dictionary`2 . The ID of a generic method uses postfix ``n , n is the count of in method parameters, for example, System.Tuple.Create``1(``0) . Example 2.7 Generic namespace System { public static class Tuple { public static Tuple<T1> Create<T1>(T1 item1); public static Tuple<T1, T2> Create<T1, T2>(T1 item1, T2 item2); } } YAML: - uid: System.Tuple.Create``1(``0) id: Create``1(``0) name.csharp: Create<T1>(T1) fullName.csharp: System.Tuple.Create<T1>(T1) - uid: System.Tuple.Create``2(``0,``1) id: Create``2(``0,``1) name.csharp: Create<T1,T2>(T1,T2) fullName.csharp: System.Tuple.Create<T1,T2>(T1,T2) 7. Reference The reference contains the following members: name, fullName, summary, isExternal, href, and more. The UID in reference can be a Spec Id , then it contains one more member: spec. The spec in reference is very like a list of lightweight references, it describes how to compose the generic type in some special language. Example 7 spec for references YAML: references: - uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Int32}} name.csharp: Dictionary<String, List<Int32>> fullName.csharp: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.Int32>> spec.csharp: - uid: System.Collections.Generic.Dictionary`2 name: Dictionary fullName: System.Collections.Generic.Dictionary isExternal: true - name: < fullName: < - uid: System.String name: String fullName: System.String isExternal: true - name: ', ' fullName: ', ' - uid: System.Collections.Generic.List`1 name: List fullName: System.Collections.Generic.List isExternal: true - name: < fullName: < - uid: System.Int32 name: Int32 fullName: System.Int32 isExternal: true - name: '>' fullName: '>' - name: '>' fullName: '>'"
  },
  "spec/metadata_format_spec.html": {
    "href": "spec/metadata_format_spec.html",
    "title": "Doc-as-Code: Metadata Format Specification | DocFX website",
    "keywords": "Doc-as-Code: Metadata Format Specification 0. Introduction 0.1 Goals and Non-goals The goal of this document is to define a general format to describe language metadata for programming languages. The language metadata is designed to be language agnostic and support multiple programming language in a single metadata file. The main user scenario for language metadata is to generate reference documentation, so this document will discuss how to optimize metadata format for documentation rendering. This document does NOT discuss details of metadata format implementation of a specific programming language. 0.2 Terminology The key words MUST , MUST NOT , REQUIRED , SHALL , SHALL NOT , SHOULD , SHOULD NOT , RECOMMENDED , MAY , and OPTIONAL in this document are to be interpreted as described in RFC 2119 . Words in italic imply they are terms defined in an earlier section of this document. 1. Items and Identifiers 1.1 Items Item is the basic unit of metadata format. From documentation perspective, each item represents a \"section\" in the reference documentation. This \"section\" is the minimum unit that you can cross reference to, or customize in layout and content. When implementing the metadata format for your own language, you can decide which elements are items . For example, usually namespaces, classes, and methods are items . However, you can also make smaller elements such as parameters be items if you want them to be referenceable and customizable. Items can be hierarchical. One item can have other items as children . For example, in C#, namespaces and classes can have classes and/or methods as children . 1.2 Identifiers Each item has an identifier (ID) which is unique under its parent. As we're targeting to support multiple languages, there is no restrictions as to which characters are not allowed in identifiers. However, to make identifiers easier to recognize and resolve in Markdown, it's not RECOMMENDED to have whitespaces in identifiers. Markdown processor MAY implement some algorithm to tolerate whitespaces in handwritten Markdown. (Leading and trailing spaces MUST be removed from identifier.) Identifier MUST be treated as case-sensitive when comparing equality. Each item has a unique identifier (UID) which is globally unique. A UID is defined as follows: If an item does not have a parent , its UID is its ID . Otherwise, its UID is the combination of the UID of its parent , a separator and the ID of the item itself. Valid separators are . , : , / and \\ . For example, for a class String under namespace System , its ID is String and UID is System.String . Given the above definition, an item 's UID MUST starts with the UID of its parent (and any of its ancestors) and ends with the ID of itself. This is useful to quickly determine whether an item is under another item . 1.3 Alias Identifier could be very long, which makes it difficult to write by hand in Markdown. For example, it's easy to create a long ID in C# like this: Format(System.IFormatProvider,System.String,System.Object,System.Object) We can create short alias for items so that they can be referenced easily. Alias is same as ID , except: It doesn't have to be unique. One item can have multiple aliases . It's not RECOMMENDED to create an alias that has nothing to do with an item's ID . Usually an item 's alias is part of its ID so it's easy to recognize and memorize. For example, for the case above, we usually create an alias Format() . We can easily get a \"global\" alias for an item by replacing the ID part of its UID with its alias. 2. File Structure 2.1 File Format You can use any file format that can represent structural data to store metadata. However, we recommend using YAML or JSON . In this document, we use YAML in examples, but all YAML can be converted to JSON easily. 2.2 File Layout A metadata file consists of two parts: An \"item\" section and a \"reference\" section. Each section is a list of objects and each object is a key-value pair (hereafter referred to as \"property\") list that represents an item . 2.3 Item Section Though items can be hierarchical, they are flat in an item section. Instead, each item has a \"children\" property indicating its children and a \"parent\" property indicating its parent. An item object has some basic properties: Property Description uid REQUIRED . The unique identifier of the item . children OPTIONAL . A list of UIDs of the item 's children. Can be omitted if there are no children . parent OPTIONAL . The UID of the item 's parent. If omitted, metadata parser will try to figure out its parent from the children information of other items within the same file. Here is an example of a YAML format metadata file for C# Object class: items: - uid: System.Object parent: System children: - System.Object.Object() - System.Object.Equals(System.Object) - System.Object.Equals(System.Object,System.Object) - System.Object.Finalize() - System.Object.GetHashCode() - System.Object.GetType() - System.Object.MemberwiseClone() - System.Object.ReferenceEquals() - System.Object.ToString() - uid: System.Object.Object() parent: System.Object - uid: System.Object.Equals(System.Object) parent: System.Object - uid: System.Object.Equals(System.Object,System.Object) parent: System.Object - uid: System.Object.Finalize() parent: System.Object - uid: System.Object.GetHashCode() parent: System.Object - uid: System.Object.GetType() parent: System.Object - uid: System.Object.MemberwiseClone() parent: System.Object - uid: System.Object.ReferenceEquals() parent: System.Object - uid: System.Object.ToString() parent: System.Object references: ... Items SHOULD be organized based upon how they will display in documentation. For example, if you want all members of a class be displayed in a single page, put all members in a single metadata file. 2.3 Item Object In additional to the properties listed in last section, item object also has some OPTIONAL properties : Property Description id The identifier of the item . alias A list of aliases of the item . name The display name of the item . fullName The full display name of the item . In programming languages, it's usually the full qualified name. type The type of the item , such as class, method, etc. url If it's a relative URL, then it's another metadata file that defines the item . If it's an absolute URL, it means the item is coming from an external library, and the URL is the documentation page of this item . If omitted, the URL is the location of the current file. source The source code information of the item . It's an object that contains following properties : 1. repo: The remote Git repository of the source code. 2. branch: the branch of the source code. 3. revision: The Git revision of the source code. 4. path: the path to the source code file where the item is defined. 5. startLine: the start line of the item definition. 6. endLine: the end line of the item definition. Here is an example of a C# Dictionary class: - uid: System.Collections.Generic.Dictionary`2 id: Dictionary`2 alias: - Dictionary parent: System.Collections.Generic name: Dictionary<TKey, TValue> fullName: System.Collections.Generic.Dictionary<TKey, TValue> type: class url: System.Collections.Generic.Dictionary`2.yml source: repo: https://github.com/dotnet/netfx.git branch: master revision: 5ed47001acfb284a301260271f7d36d2bb014432 path: src/system/collections/generic/dictionary.cs startLine: 1 endLine: 100 2.4 Custom Properties Besides the predefined properties , item can have its own properties . One restriction is property name MUST NOT contains dots, as dot in property name will have special meaning (described in later section). 2.5 Reference Section Reference section also contains a list of items . These items serve as the references by items in item section and won't show up in documentation. Also, reference item doesn't need to have full properties , it just contains necessary information needed by its referrer (for example, name or URL). In metadata file, all items MUST be referenced by UID . It's RECOMMENDED to include all referenced items in reference section. This makes the file self-contained and easy to render at runtime. Many programming languages have the concept of \"template instantiation\". For example, in C#, you can create a new type List<int> from List<T> with argument int . You can create a reference for \"template instances\". For example, for a class inherited from List<int> : items: - uid: NumberList inherits: - System.Collections.Generic.List<System.Int32> references: - uid: System.Collections.Generic.List`1<System.Int32> link: @\"System.Collections.Generic.List`1\"<@\"System.Int32\"> - uid: System.Collections.Generic.List`1 name: List url: system.collections.generic.list`1.yml - uid: System.Int32 name: int url: system.int32.yml 2.6 Multiple Language Support An item may need to support multiple languages. For example, in .NET, a class can be used in C#, VB, managed C++ and F#. Different languages may have differences in properties . For example, a list of string is displayed as List<string> in C#, while List(Of string) in VB. To support this scenario, we introduce a concept of language context to allow defining different property values in different languages. If a property name is in the form of property_name.language_name , it defines the value of property_name under language_name . For example: - uid: System.Collections.Generic.Dictionary`2 name.csharp: Dictionary<TKey, TValue> name.vb: Dictionary(Of TKey, TValue) This means the name of dictionary is Dictionary<TKey, TValue> in C# and Dictionary(Of TKey, TValue) in VB. The following properties SHALL NOT be overridden in language context: uid, id, alias, children, and parent. 3. Work with Metadata in Markdown 3.1 YAML Metadata Section In a Markdown file, you can also define items using the same metadata syntax. The metadata definition MUST be in YAML format and enclosed by triple-dash lines ( --- ). Here is an example: --- uid: System.String summary: String class --- This is a **string** class. You can have multiple YAML sections inside a single Markdown file, but in a single YAML section, there MUST be only one item . The YAML metadata section does not have to contain all properties . The only property that MUST appear is \"uid\", which is used to match the same item in metadata file. The most common scenario for using YAML section is to specify which item the markdown doc belongs to. But you can also overwrite item property by defining one with the same name in YAML section. In the above example, the property \"summary\" will overwrite the same one in metadata. As with language context, the following properties SHALL NOT be overridden: uid, id, alias, children, and parent. You SHALL NOT define new item in Markdown. 3.2 Reference Items in Markdown To cross reference an item , you can use URI with xref scheme. You can either use standard link or automatic link with the above URI. For example, to cross reference System.String : [System.String](xref:System.String) <xref:System.String> Since item reference is a URI, special characters (like # , ? ) MUST be encoded . We also introduce a shorthand markdown syntax to cross reference easily: If a string starts with @ , and followed by a string enclosed by quotes ' or double quotes \" , it will be treated as an item reference. The string inside \"\" or '' is the UID of the item . Here is one example: @\"System.String\" Markdown processor MAY implement some algorithm to allow omit curly braces if ID is simple enough. For example, For reference like @\"int\" , we may also want to allow @int . When rendering references in Markdown, they will expand into a link with the item 's name as link title. You can also customize the link title using the standard syntax of Markdown: [Dictionary](xref:System.Collections.Generic.Dictionary`2)<[String](xref:System.String), [String](xref:System.String)> Will be rendered to: Dictionary < String , String > Besides UID , we also allow referencing items using ID and alias , in the Markdown processor, the below algorithm SHOULD be implemented to resolve references. Check whether the reference matches: Any identifier of current item 's children. Any alias of current item 's children. Any identifier of current item 's silbings. Any alias of current item 's silbings. A UID . A global alias ."
  },
  "spec/triple_slash_comments_spec.html": {
    "href": "spec/triple_slash_comments_spec.html",
    "title": "Triple-slash (///) Code Comments Support | DocFX website",
    "keywords": "Triple-slash (///) Code Comments Support DocFX extracts triple-slash (///) code comments from .NET source code when running docfx metadata . Tags in triple-slash (///) code comments are converted to corresponding metadata in .NET data model. Note docfx supports DocFX Flavored Markdown syntax inside triple-slash (///) code comments. You can disable this feature by set shouldSkipMarkup when generating metadata: docfx metadata --shouldSkipMarkup . Supported tags Top level block tags Top level block tags are transformed to corresponding metadata in .NET data model. Tags Metadata name Type summary summary string remarks remarks string returns returns string value returns string exception exception List< ExceptionInfo > seealso seealso List< LinkInfo > see see List< LinkInfo > example example List<string> Non-toplevel tags Non-toplevel tags transformed to HTML tags in DocFX. Tags Transformed Description para <p></p> b <strong></strong> i em see[@langword] <xref></xref> langwordMapping.yml lists supported language keywords in DocFX . DocFX leverages cross reference to reference language keywords. You can disable default langword resolver and apply your customized one by calling docfx build --xref yourLangword.yml --noLangKeyword see[@href] <a></a> see[@cref] <xref></xref> paramref <span class=\"paramref\"></span> typeparamref <span class=\"typeparamref\"></span> list type=\"table\" <table></table> list type=\"bullet\" <ul></ul> list type=\"number\" <ol></ol> c <code></code> code <pre><code></code></pre> Custom tags inheritdoc docfx supports a subset of the inheritdoc functionality available in Sandcastle . Specifically, it implements most of the \"Top-Level Inheritance Rules\". It does not implement: Support for the cref or select attributes. Automatic inheritance of documentation for explicit interface implementations. Support for inline inheritdoc tags (i.e., an inheritdoc tag inside of an example tag)."
  },
  "templates-and-plugins/contribute-your-template.html": {
    "href": "templates-and-plugins/contribute-your-template.html",
    "title": "Add Your Template to the Dashboard | DocFX website",
    "keywords": "Add Your Template to the Dashboard Add your own template info to the templates section of YAML Header of templates-dashboard.md , and it will be shown in the dashboard!"
  },
  "templates-and-plugins/plugins-dashboard.html": {
    "href": "templates-and-plugins/plugins-dashboard.html",
    "title": "Available plugins and templates |",
    "keywords": ""
  },
  "templates-and-plugins/templates-dashboard.html": {
    "href": "templates-and-plugins/templates-dashboard.html",
    "title": "Available templates and themes |",
    "keywords": ""
  },
  "tutorial/advanced_support_hyperlink.html": {
    "href": "tutorial/advanced_support_hyperlink.html",
    "title": "🔧 Advanced: Support Hyperlink | DocFX website",
    "keywords": "🔧 Advanced: Support Hyperlink In this topic, we will support hyperlinking in rtf files. Create a hyperlink in the rtf file: Open foo.rtf by Word . Add a hyperlink in content Set the link target to an existing bar.rtf Save the document. About link An author can write any valid hyperlink in the document, and then needs to run DocFX build to update file links. What is file link: The hyperlink must be a relative path and not rooted. valid: foo\\bar.rtf , ../foobar.rtf invalid: /foo.rtf , c:\\foo\\bar.rtf , http://foo.bar/ , mailto:foo@bar.foobar The file must exist. Why update file link: The story is: In foo.rtf , it has a file link to bar.rtf . In document build, bar.rtf generates a file with the name bar.html . But in foo.rtf , the link target is still bar.rtf , thus in the output folder we cannot find this file and we will get a broken link. To resolve the broken link, we need to update the link target from bar.rtf to bar.html . File link is a relative path, but we cannot track the relative path easily. So we track the normalized file path instead. What is a normalized file path : It always starts from the working folder (the folder that contains docfx.json ), and we write it as ~/ . No ../ or ./ or // Replace \\ with / . No url encoding. The path must be same as it in the file system. No anchor. Finally, a valid normalized file path looks like: ~/foo/bar.rtf . Pros Same form in different documents when the target is the same file. When file structure is: z:\\a\\b\\foo.rtf z:\\a\\b\\c\\bar.rtf z:\\a\\b\\c\\foobar.rtf Link target c/foobar.rtf in foo.rtf and link target foobar.rtf in bar.rtf is the same file. When the working folder is z:\\a\\ , the link target is always ~/b/c/foobar.rtf . Avoids differences in style when referring to the same file. For example, the following hyperlinks target the same file: a/foo.rtf , ./a/foo.rtf , a/b/../foo.rtf , a//foo.rtf , a\\foo.rtf Cons A folder with the name ~ is not supported. Prepare Open the rtf plug-in library project in Visual Studio . Add nuget packages: for plug-in: Microsoft.DocAsCode.Utility Add framework assembly reference: System.Core , System.Web , System.Xml.Linq Update rtf document processor Following the rules for hyperlink, add a FixLink help method: private static void FixLink(XAttribute link, RelativePath filePath, HashSet<string> linkToFiles) { string linkFile; string anchor = null; if (PathUtility.IsRelativePath(link.Value)) { var index = link.Value.IndexOf('#'); if (index == -1) { linkFile = link.Value; } else if (index == 0) { return; } else { linkFile = link.Value.Remove(index); anchor = link.Value.Substring(index); } var path = filePath + (RelativePath)linkFile; var file = (string)path.GetPathFromWorkingFolder(); link.Value = file + anchor; linkToFiles.Add(HttpUtility.UrlDecode(file)); } } RelativePath helps us generate the links correctly. Then add CollectLinksAndFixDocument method: private static HashSet<string> CollectLinksAndFixDocument(FileModel model) { string content = (string)((Dictionary<string, object>)model.Content)[\"conceptual\"]; var doc = XDocument.Parse(content); var links = from attr in doc.Descendants().Attributes() where \"href\".Equals(attr.Name.LocalName, StringComparison.OrdinalIgnoreCase) || \"src\".Equals(attr.Name.LocalName, StringComparison.OrdinalIgnoreCase) select attr; var path = (RelativePath)model.File; var linkToFiles = new HashSet<string>(); foreach (var link in links) { FixLink(link, path, linkToFiles); } using (var sw = new StringWriter()) { doc.Save(sw); ((Dictionary<string, object>)model.Content)[\"conceptual\"] = sw.ToString(); } return linkToFiles; } Modify Save method with report links: public SaveResult Save(FileModel model) { HashSet<string> linkToFiles = CollectLinksAndFixDocument(model); return new SaveResult { DocumentType = \"Conceptual\", ModelFile = model.File, LinkToFiles = linkToFiles.ToImmutableArray(), }; } <!-- todo : `Update Reference` is preserved for next version of plugin. --> View final RtfDocumentProcessor.cs Test and verify Build project. Copy dll to Plugins folder. Modify rtf file, create hyperlink, link to another rtf file, and save. Build with command DocFX build . Verify output html file."
  },
  "tutorial/docfx.exe_user_manual.html": {
    "href": "tutorial/docfx.exe_user_manual.html",
    "title": "docfx.exe User Manual | DocFX website",
    "keywords": "Doc-as-code: docfx.exe User Manual 0. Introduction docfx.exe is used to generate documentation for programs. It has the ability to: Extract language metadata for programing languages as defined in Metadata Format Specification . Currently language VB and CSharp are supported. The language metadata will be saved with YAML format as described in YAML 1.2 . Look for available conceptual files as provided and link it with existing programs with syntax described in Section 3. Work with Metadata in Markdown . Supported conceptual files are plain text files, html files, and markdown files. Generate documentation to a. Visualize language metadata, with extra content provided by linked conceptual files using syntax described in Section 3. Work with Metadata in Markdown . b. Organize and render available conceptual files. It can be easily cross-referenced with language metadata pages. We support Docfx Flavored Markdown(DFM) for writing conceptual files. DFM supports all Github Flavored Markdown(GFM) syntax with 2 exceptions when resolving list . It also adds several new features including file inclusion , cross reference , and yaml header . For detailed description about DFM, please refer to DFM . Currently generating documentations to a client only website is supported. The generated website can be easily published to whatever platform such as Github Pages and Azure Website with no extra effort. Offline documentations such as pdf are planned to be supported in the future. 1. Syntax docfx <command> [<args>] 2. Commands 2.0 Init command docfx init docfx init helps generate an docfx.json file. 2.1 Help command docfx help docfx help -a list available subcommands. docfx help <command> to read about a specific subcommand 2.2 Extract language metadata command docfx metadata Syntax docfx metadata [<projects>] Layout |-- <metadata folder> |-- api | |-- <namespace>.yml | |-- <class>.yml |-- toc.yml |-- index.yml 2.2.1 Optional <projects> argument <projects> specifies the projects to have metadata extracted. There are several approaches to extract language metadata. From a supported project file or project file list Supported project file extensions include .csproj , .vbproj , .sln , and project.json . Files can be combined using , as separator, e.g. docfx metadata a.csproj,b.sln . From a supported source code file or source code file list Supported source code file extensions include .cs and .vb . Files can be combined using , as separator and search pattern . From docfx.json file, as described in Section3 . If the argument is not specified, docfx.exe will try reading docfx.json under current directory. The default output folder is _site/ folder if it is not specified in docfx.json under current directory. 2.2.2 Command option --shouldSkipMarkup If adding option --shouldSkipMarkup in metadata command, it means that DocFX would not render triple-slash-comments in source code as markdown. e.g. docfx metadata --shouldSkipMarkup 2.3 Generate documentation command docfx build Syntax docfx build [-o:<output_path>] [-t:<template folder>] docfx build generates documentation for current folder. If toc.yml or toc.md is found in current folder, it will be rendered as the top level TABLE-OF-CONTENT. As in website, it will be rendered as the top navigation bar. Note Please note that homepage is not supported in toc.md . And if href is referencing to a folder , it must end with / . toc.yml syntax toc.yml is an array of items. Each item can have following properties: Property Description name Required . The title of the navigation page. href Required . Can be a folder or a file UNDER current folder. A folder must end with / . In case of a folder, TOC.md inside the folder will be rendered as second level TABLE-OF-CONTENT. As in website, it will be rendered as a sidebar. homepage The default content shown when no article is selected. TOC.yml Sample - name: Home href: articles/Home.md - name: Roslyn Wiki href: roslyn_wiki/ - name: Roslyn API href: api_roslyn/ homepage: homepages/roslyn_language_features.md TOC.md Sample ## [Home](articles/Home.md) ## [Roslyn Wiki](roslyn_wiki/) ## [Roslyn API](api_roslyn/) 2.3.1 Optional <output_path> argument The default output folder is _site/ folder 2.3.2 Optional <template folder> argument If specified, use the template from template folder Template Folder Structure |-- <template folder> |-- index.html |-- styles | |-- docascode.css | |-- docascode.js |-- template | |-- toc.html | |-- navbar.html | |-- yamlContent.html |-- favicon.ico |-- logo.ico 3. docfx.json Format Top level docfx.json structure is key-value pair. key is the name of the subcommand, current supported subcommands are metadata and build . 3.1 Properties for metadata Metadata section defines an array of source projects and their output folder. Each item has src and dest property. src defines the source projects to have metadata generated, which is in File Mapping Format . Detailed syntax is described in 4. Supported name-files File Mapping Format below. dest defines the output folder of the generated metadata files. Key Description src Defines the source projects to have metadata generated, which is in File Mapping Format . dest Defines the output folder of the generated metadata files. force If set to true, it would disable incremental build. shouldSkipMarkup If set to true, DocFX would not render triple-slash-comments in source code as markdown. filter Defines the filter configuration file, please go to How to filter out unwanted apis attributes for more details. useCompatibilityFileName If set to true, DocFX would keep ` in comment id instead of replacing it with - . Sample { \"metadata\": [ { \"src\": [ { \"files\": [\"**/*.csproj\"], \"exclude\": [ \"**/bin/**\", \"**/obj/**\" ], \"src\": \"../src\" } ], \"dest\": \"obj/docfx/api/dotnet\", \"shouldSkipMarkup\": true }, { \"src\": [ { \"files\": [\"**/*.js\"], \"src\": \"../src\" } ], \"dest\": \"obj/docfx/api/js\", \"useCompatibilityFileName\": true } ] } 3.2 Properties for build Key Description content Contains all the files to generate documentation, including metadata yml files and conceptual md files. name-files file mapping with several ways to define it, as to be described in Section4 . The files contains all the project files to have API generated. resource Contains all the resource files that conceptual and metadata files dependent on, e.g. image files. name-files file mapping with several ways to define it, as to be described in Section4 . overwrite Contains all the conceputal files which contains yaml header with uid and is intended to override the existing metadata yml files. name-files file mapping with several ways to define it, as to be described in Section4 . globalMetadata Contains metadata that will be applied to every file, in key-value pair format. For example, you can define \"_appTitle\": \"This is the title\" in this section, and when applying template default , it will be part of the page title as defined in the template. fileMetadata Contains metadata that will be applied to specific files. name-files file mapping with several ways to define it, as to be described in Section4 . globalMetadataFile Obsoleted , Specify a JSON file path containing globalMetadata settings, as similar to {\"globalMetadata\":{\"key\":\"value\"}} . globalMetadataFiles Specify a list of JSON file path containing globalMetadata settings, as similar to {\"key\":\"value\"} . Please read Section3.2.3 for detail. fileMetadataFile Obsoleted , Specify a JSON file path containing fileMetadata settings, as similar to {\"fileMetadata\":{\"key\":\"value\"}} . fileMetadataFiles Specify a list of JSON file path containing fileMetadata settings, as similar to {\"key\":\"value\"} . Please read Section3.2.3 for detail. template The templates applied to each file in the documentation. It can be a string or an array. The latter ones will override the former ones if the name of the file inside the template collides. If ommited, embedded default template will be used. theme The themes applied to the documentation. Theme is used to customize the styles generated by template . It can be a string or an array. The latter ones will override the former ones if the name of the file inside the template collides. If ommited, no theme will be applied, the default theme inside the template will be used. externalReferences Obsoleted , Contains rpk files that define the external references. name-files file mapping with several ways to define it, as to be described in Section4 . xref Specifies the urls of xrefmap used by content files. Currently, it supports following scheme: http, https, ftp, file, embedded. exportRawModel If set to true, data model to run template script will be extracted in .raw.json extension. rawModelOutputFolder Specify the output folder for the raw model. If not set, the raw model will be generated to the same folder as the output documentation. exportViewModel If set to true, data model to apply template will be extracted in .view.json extension. viewModelOutputFolder Specify the output folder for the view model. If not set, the view model will be generated to the same folder as the output documentation. dryRun If set to true, template will not be actually applied to the documents. This option is always used with --exportRawModel or --exportViewModel , so that only raw model files or view model files are generated. maxParallelism Set the max parallelism, 0 (default) is same as the count of CPU cores. markdownEngineName Set the name of markdown engine, default is dfm , and another build-in engine is gfm . markdownEngineProperties Set the parameters for markdown engine, value should be a JSON string. noLangKeyword Disable default lang keyword, it can be downloaded from here . 3.2.1 Template s and Theme s Template s are used to transform YAML files generated by docfx to human-readable page s. A page can be a markdown file, a html file or even a plain text file. Each YAML file will be transformed to ONE page and be exported to the output folder preserving its relative path to src . For example, if page s are in HTML format, a static website will be generated in the output folder. Theme is to provide general styles for all the generated page s. Files inside a theme will be generally COPIED to the output folder. A typical usage is, after YAML files are transformed to HTML pages, well-designed CSS style files in a Theme can then overwrite the default styles defined in template , e.g. main.css . There are two ways to use custom templates and themes. To use a custom template, one way is to specify template path with --template (or -t ) command option, multiple templates must be separated by , with no spaces. The other way is to set key-value mapping in docfx.json : { ... { \"build\" : { ... \"template\": \"custom\", ... } ... } { ... { \"build\" : { ... \"template\": [\"default\", \"X:/template/custom\"], ... } ... } Note The template path could either be a zip file called <template>.zip or a folder called <template> . Warning DocFX has embedded templates: default , iframe.html , statictoc and common . Please avoid using these as template folder name. To custom theme, one way is to specify theme name with --theme command option, multiple themes must be separated by , with no spaces. The other way is to set key-value mapping in docfx.json as similar to defining template. Also, both .zip file and folder are supported. Please refer to How to Create Custom Templates to create custom templates. Sample { \"build\": { \"content\": [ { \"files\": [\"**/*.yml\"], \"src\": \"obj/docfx\" }, { \"files\": [\"tutorial/**/*.md\", \"spec/**/*.md\", \"spec/**/toc.yml\"] }, { \"files\": [\"toc.yml\"] } ], \"resource\": [ { \"files\": [\"spec/images/**\"] } ], \"overwrite\": \"apispec/*.md\", \"externalReference\": [ ], \"globalMetadata\": { \"_appTitle\": \"DocFX website\" }, \"dest\": \"_site\", \"template\": \"default\" } } 3.2.2 Reserved Metadata After passing values through global metadata or file metadata, DocFX can use these metadata in templates to control the output html. Reserved metadatas: Metadata Name Type Description _appTitle string Will be appended to each output page's head title. _appFooter string The footer text. Will show DocFX's Copyright text if not specified. _appLogoPath string Logo file's path from output root. Will show DocFX's logo if not specified. Remember to add file to resource. _appFaviconPath string Favicon file's path from output root. Will show DocFX's favicon if not specified. Remember to add file to resource. _enableSearch bool Indicate whether to show the search box on the top of page. _enableNewTab bool Indicate whether to open a new tab when clicking an external link. (internal link always shows within the current tab) _disableNavbar bool Indicate whether to show the navigation bar on the top of page. _disableBreadcrumb bool Indicate whether to show breadcrumb on the top of page. _disableToc bool Indicate whether to show table of contents on the left of page. _disableAffix bool Indicate whether to show the affix bar on the right of page. _disableContribution bool Indicate whether to show the View Source and Improve this Doc buttons. _gitContribute object Customize the Improve this Doc URL button for public contributors. Use repo to specify the contribution repository URL. Use branch to specify the contribution branch. Use path to specify the folder for new overwrite files. If not set, the git URL and branch of the current git repository will be used. _gitUrlPattern string Choose the URL pattern of the generated link for View Source and Improve this Doc . Supports github and vso currently. If not set, DocFX will try speculating the pattern from domain name of the git URL. 3.2.3 Separated metadata files for global metadata and file metadata There're three ways to set metadata for a file in DocFX: using global metadata, it will set metadata for every file. using file metadata, it will set metadata for files that match pattern. using YAML header, it will set metadata for current file. In above ways, the later way will always overwrite the former way if the same key of metadata is set. Here we will show you how to set global metadata and file metadata using separated metadata files. Take global metadata for example, you can set globalMetadataFiles in docfx.json or --globalMetadataFiles in build command line. The usage of fileMetadataFiles is the same as globalMetadataFiles . There're some metadata file examples: globalMetadata file example { \"_appTitle\": \"DocFX website\", \"_enableSearch\": \"true\" } fileMetadata file example { \"priority\": { \"**.md\": 2.5, \"spec/**.md\": 3 }, \"keywords\": { \"obj/docfx/**\": [\"API\", \"Reference\"], \"spec/**.md\": [\"Spec\", \"Conceptual\"] } } There're some examples about how to use separated metadata files. use globalMetadataFiles in docfx.json ... \"globalMetadataFiles\": [\"global1.json\", \"global2.json\"], ... use --globalMetadataFiles in build command line docfx build --globalMetadataFiles global1.json,global2.json use fileMetadataFiles in docfx.json ... \"fileMetadataFiles\": [\"file1.json\", \"file2.json\"], ... use --fileMetadataFiles in build command line docfx build --fileMetadataFiles file1.json,file2.json Note that, metadata set in command line will merge with metadata set in docfx.json . If same key for global metadata was set, the order to be overwritten would be(the later one will overwrite the former one): global metadata from docfx config file global metadata from global metadata files global metadata from command line If same file pattern for file metadata was set, the order to be overwritten would be(the later one will overwrite the former one): file metadata from docfx config file file metadata from file metadata files Given multiple metadata files, the behavior would be undetermined , if same key is set in these files. 4. Supported File Mapping Format There are several ways to define file mapping. 4.1 Array Format This form supports multiple file mappings, and also allows additional properties per mapping. Supported properties: Property Name Description files REQUIRED . The file or file array, glob pattern is supported. name Obsoleted , please use dest . exclude The files to be excluded, glob pattern is supported. cwd Obsoleted , please use src . src Specifies the source directory. If omitted, the directory of the config file will be used. Use this option when you want to refer to files in relative folders while want to keep folder structure. e.g. set src to .. . dest The folder name for the generated files. version Version name for the current file mapping. If not set, treat the current file-mapping item as in default version. Mappings with the same version name will be built together. Cross reference doesn't support cross different versions. caseSensitive TOBEIMPLEMENTED . Default value is false . If set to true , the glob pattern is case sensitive. e.g. *.txt will not match 1.TXT . For OS Windows, file path is case insensitive while for Linux/Unix, file path is case sensitive. This option offers user the flexibility to determine how to search files. supportBackslash TOBEIMPLEMENTED . Default value is true . If set to true , \\ will be considered as file path separator. Otherwise, \\ will be considered as normal character if escape is set to true and as escape character if escape is set to false . If escape is set to true , \\\\ should be used to represent file path separator. escape TOBEIMPLEMENTED . Default value is false . If set to true , \\ character is used as escape character, e.g. \\{\\}.txt will match {}.txt . \"key\": [ {\"files\": [\"file1\", \"file2\"], \"dest\": \"dest1\"}, {\"files\": \"file3\", \"dest\": \"dest2\"}, {\"files\": [\"file4\", \"file5\"], \"exclude\": [\"file5\"], \"src\": \"folder1\"}, {\"files\": \"Example.yml\", \"src\": \"v1.0\", \"dest\":\"v1.0/api\", \"version\": \"v1.0\"}, {\"files\": \"Example.yml\", \"src\": \"v2.0\", \"dest\":\"v2.0/api\", \"version\": \"v2.0\"} ] 4.2 Compact Format \"key\": [\"file1\", \"file2\"] 4.3 Glob Pattern DocFX uses Glob to support glob pattern in file path. It offers several options to determine how to parse the Glob pattern: caseSensitive : Default value is false . If set to true , the glob pattern is case sensitive. e.g. *.txt will not match 1.TXT . For OS Windows, file path is case insensitive while for Linux/Unix, file path is case sensitive. This option offers user the flexibility to determine how to search files. supportBackslash : Default value is true . If set to true , \\ will be considered as file path separator. Otherwise, \\ will be considered as normal character if escape is set to true and as escape character if escape is set to false . If escape is set to true , \\\\ should be used to represent file path separator. escape : Default value is false . If set to true , \\ character is used as escape character, e.g. \\{\\}.txt will match {}.txt . In general, the glob pattern contains the following rules: * matches any number of characters, but not / ? matches a single character, but not / ** matches any number of characters, including / , as long as it's the only thing in a path part {} allows for a comma-separated list of OR expressions SAMPLES 5. Q & A Do we support files outside current project folder(the folder when docfx.json exists)? A: YES. DO specify src and files outside of current folder will be copied to output folder keeping the same relative path to src . Do we support output folder outside current project folder(the folder when docfx.json exists)? A: YES. Do we support referencing files outside of current project folder(the folder when docfx.json exists)? A: NO."
  },
  "api/Microsoft.DocAsCode.Plugins.IncrementalPhase.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IncrementalPhase.html",
    "title": "Enum IncrementalPhase | DocFX website",
    "keywords": "Enum IncrementalPhase Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public enum IncrementalPhase Fields Name Description Build PostProcessing Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IncrementalStatus.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IncrementalStatus.html",
    "title": "Class IncrementalStatus | DocFX website",
    "keywords": "Class IncrementalStatus Inheritance Object IncrementalStatus Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class IncrementalStatus Properties CanIncremental Declaration [JsonProperty(\"can_incremental\")] public bool CanIncremental { get; set; } Property Value Type Description Boolean Details Declaration [JsonProperty(\"details\")] public string Details { get; set; } Property Value Type Description String IncrementalPhase Declaration [JsonProperty(\"incrementalPhase\")] public IncrementalPhase IncrementalPhase { get; set; } Property Value Type Description IncrementalPhase Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IPostProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IPostProcessor.html",
    "title": "Interface IPostProcessor | DocFX website",
    "keywords": "Interface IPostProcessor Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IPostProcessor Methods PrepareMetadata(ImmutableDictionary<String, Object>) Update global metadata before building all the files declared in docfx.json Declaration ImmutableDictionary<string, object> PrepareMetadata(ImmutableDictionary<string, object> metadata) Parameters Type Name Description System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Process(Manifest, String) Add/remove/update all the files included in manifest Declaration Manifest Process(Manifest manifest, string outputFolder) Parameters Type Name Description Manifest manifest String outputFolder The output folder where our static website will be placed Returns Type Description Manifest Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IPostProcessorHost.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IPostProcessorHost.html",
    "title": "Interface IPostProcessorHost | DocFX website",
    "keywords": "Interface IPostProcessorHost Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IPostProcessorHost Properties IsIncremental Whether the post processor can be incremental. Declaration bool IsIncremental { get; } Property Value Type Description Boolean ShouldTraceIncrementalInfo Whether the post processor should trace incremental information. Declaration bool ShouldTraceIncrementalInfo { get; } Property Value Type Description Boolean SourceFileInfos Source file information Declaration IImmutableList<SourceFileInfo> SourceFileInfos { get; } Property Value Type Description System.Collections.Immutable.IImmutableList < SourceFileInfo > Methods LoadContextInfo() Load context info from last post processing. Declaration Stream LoadContextInfo() Returns Type Description Stream Stream to be read, return null when there is no last info. SaveContextInfo() Save context information to current post processing. Declaration Stream SaveContextInfo() Returns Type Description Stream Stream to be written, return null when should not trace incremental information. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ISubCommand.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ISubCommand.html",
    "title": "Interface ISubCommand | DocFX website",
    "keywords": "Interface ISubCommand Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ISubCommand Properties AllowReplay Declaration bool AllowReplay { get; } Property Value Type Description Boolean Methods Exec(SubCommandRunningContext) Declaration void Exec(SubCommandRunningContext context) Parameters Type Name Description SubCommandRunningContext context Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ISubCommandController.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ISubCommandController.html",
    "title": "Interface ISubCommandController | DocFX website",
    "keywords": "Interface ISubCommandController Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ISubCommandController Methods GetHelpText() Declaration string GetHelpText() Returns Type Description String TryGetCommandCreator(String, out ISubCommandCreator) Declaration bool TryGetCommandCreator(string name, out ISubCommandCreator creator) Parameters Type Name Description String name ISubCommandCreator creator Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ISubCommandCreator.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ISubCommandCreator.html",
    "title": "Interface ISubCommandCreator | DocFX website",
    "keywords": "Interface ISubCommandCreator Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ISubCommandCreator Methods Create(String[], ISubCommandController, SubCommandParseOption) Declaration ISubCommand Create(string[] args, ISubCommandController controller, SubCommandParseOption option) Parameters Type Name Description String [] args ISubCommandController controller SubCommandParseOption option Returns Type Description ISubCommand GetHelpText() Declaration string GetHelpText() Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.ExtensibleObjectNodeDeserializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.ExtensibleObjectNodeDeserializer.html",
    "title": "Class ExtensibleObjectNodeDeserializer | DocFX website",
    "keywords": "Class ExtensibleObjectNodeDeserializer Inheritance Object ExtensibleObjectNodeDeserializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.NodeDeserializers Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class ExtensibleObjectNodeDeserializer : INodeDeserializer Constructors ExtensibleObjectNodeDeserializer(IObjectFactory, ITypeInspector, Boolean) Declaration public ExtensibleObjectNodeDeserializer(IObjectFactory objectFactory, ITypeInspector typeDescriptor, bool ignoreUnmatched) Parameters Type Name Description YamlDotNet.Serialization.IObjectFactory objectFactory YamlDotNet.Serialization.ITypeInspector typeDescriptor Boolean ignoreUnmatched Explicit Interface Implementations INodeDeserializer.Deserialize(IParser, Type, Func<IParser, Type, Object>, out Object) Declaration bool INodeDeserializer.Deserialize(IParser reader, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value) Parameters Type Name Description YamlDotNet.Core.IParser reader Type expectedType Func < YamlDotNet.Core.IParser , Type , Object > nestedObjectDeserializer Object value Returns Type Description Boolean Implements YamlDotNet.Serialization.INodeDeserializer.Deserialize(YamlDotNet.Core.IParser, System.Type, System.Func<YamlDotNet.Core.IParser, System.Type, System.Object>, System.Object) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization.NodeDeserializers | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization.NodeDeserializers Classes EmitArrayNodeDeserializer EmitGenericCollectionNodeDeserializer EmitGenericDictionaryNodeDeserializer ExtensibleObjectNodeDeserializer"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors.BetterObjectDescriptor.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors.BetterObjectDescriptor.html",
    "title": "Class BetterObjectDescriptor | DocFX website",
    "keywords": "Class BetterObjectDescriptor Inheritance Object BetterObjectDescriptor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class BetterObjectDescriptor : IObjectDescriptor Constructors BetterObjectDescriptor(Object, Type, Type) Declaration public BetterObjectDescriptor(object value, Type type, Type staticType) Parameters Type Name Description Object value Type type Type staticType BetterObjectDescriptor(Object, Type, Type, ScalarStyle) Declaration public BetterObjectDescriptor(object value, Type type, Type staticType, ScalarStyle scalarStyle) Parameters Type Name Description Object value Type type Type staticType YamlDotNet.Core.ScalarStyle scalarStyle Properties ScalarStyle Declaration public ScalarStyle ScalarStyle { get; } Property Value Type Description YamlDotNet.Core.ScalarStyle Implements YamlDotNet.Serialization.IObjectDescriptor.ScalarStyle StaticType Declaration public Type StaticType { get; } Property Value Type Description Type Implements YamlDotNet.Serialization.IObjectDescriptor.StaticType Type Declaration public Type Type { get; } Property Value Type Description Type Implements YamlDotNet.Serialization.IObjectDescriptor.Type Value Declaration public object Value { get; } Property Value Type Description Object Implements YamlDotNet.Serialization.IObjectDescriptor.Value Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors Classes BetterObjectDescriptor"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectFactories.DefaultEmitObjectFactory.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectFactories.DefaultEmitObjectFactory.html",
    "title": "Class DefaultEmitObjectFactory | DocFX website",
    "keywords": "Class DefaultEmitObjectFactory Inheritance Object DefaultEmitObjectFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.ObjectFactories Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class DefaultEmitObjectFactory : IObjectFactory Methods Create(Type) Declaration public object Create(Type type) Parameters Type Name Description Type type Returns Type Description Object Implements YamlDotNet.Serialization.IObjectFactory.Create(System.Type) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectFactories.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectFactories.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectFactories | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectFactories Classes DefaultEmitObjectFactory"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.FullObjectGraphTraversalStrategy.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.FullObjectGraphTraversalStrategy.html",
    "title": "Class FullObjectGraphTraversalStrategy | DocFX website",
    "keywords": "Class FullObjectGraphTraversalStrategy An implementation of YamlDotNet.Serialization.IObjectGraphTraversalStrategy that traverses readable properties, collections and dictionaries. Inheritance Object FullObjectGraphTraversalStrategy RoundtripObjectGraphTraversalStrategy Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class FullObjectGraphTraversalStrategy : IObjectGraphTraversalStrategy Constructors FullObjectGraphTraversalStrategy(YamlSerializer, ITypeInspector, ITypeResolver, Int32, INamingConvention) Declaration public FullObjectGraphTraversalStrategy(YamlSerializer serializer, ITypeInspector typeDescriptor, ITypeResolver typeResolver, int maxRecursion, INamingConvention namingConvention) Parameters Type Name Description YamlSerializer serializer YamlDotNet.Serialization.ITypeInspector typeDescriptor YamlDotNet.Serialization.ITypeResolver typeResolver Int32 maxRecursion YamlDotNet.Serialization.INamingConvention namingConvention Properties Serializer Declaration protected YamlSerializer Serializer { get; } Property Value Type Description YamlSerializer Methods Traverse<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, Int32, TContext) Declaration protected virtual void Traverse<TContext>(IObjectDescriptor value, IObjectGraphVisitor<TContext> visitor, int currentDepth, TContext context) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor value YamlDotNet.Serialization.IObjectGraphVisitor <TContext> visitor Int32 currentDepth TContext context Type Parameters Name Description TContext TraverseDictionary<TContext>(IObjectDescriptor, Object, Int32, Object) Declaration protected virtual void TraverseDictionary<TContext>(IObjectDescriptor dictionary, object visitor, int currentDepth, object context) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor dictionary Object visitor Int32 currentDepth Object context Type Parameters Name Description TContext TraverseObject<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, Int32, TContext) Declaration protected virtual void TraverseObject<TContext>(IObjectDescriptor value, IObjectGraphVisitor<TContext> visitor, int currentDepth, TContext context) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor value YamlDotNet.Serialization.IObjectGraphVisitor <TContext> visitor Int32 currentDepth TContext context Type Parameters Name Description TContext TraverseProperties<TContext>(IObjectDescriptor, Object, Int32, Object) Declaration protected virtual void TraverseProperties<TContext>(IObjectDescriptor value, object visitor, int currentDepth, object context) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor value Object visitor Int32 currentDepth Object context Type Parameters Name Description TContext Explicit Interface Implementations IObjectGraphTraversalStrategy.Traverse<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, TContext) Declaration void IObjectGraphTraversalStrategy.Traverse<TContext>(IObjectDescriptor graph, IObjectGraphVisitor<TContext> visitor, TContext context) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor graph YamlDotNet.Serialization.IObjectGraphVisitor <TContext> visitor TContext context Type Parameters Name Description TContext Implements YamlDotNet.Serialization.IObjectGraphTraversalStrategy.Traverse<TContext>(YamlDotNet.Serialization.IObjectDescriptor, YamlDotNet.Serialization.IObjectGraphVisitor<TContext>, TContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.RoundtripObjectGraphTraversalStrategy.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.RoundtripObjectGraphTraversalStrategy.html",
    "title": "Class RoundtripObjectGraphTraversalStrategy | DocFX website",
    "keywords": "Class RoundtripObjectGraphTraversalStrategy An implementation of YamlDotNet.Serialization.IObjectGraphTraversalStrategy that traverses properties that are read/write, collections and dictionaries, while ensuring that the graph can be regenerated from the resulting document. Inheritance Object FullObjectGraphTraversalStrategy RoundtripObjectGraphTraversalStrategy Inherited Members FullObjectGraphTraversalStrategy.Serializer FullObjectGraphTraversalStrategy.IObjectGraphTraversalStrategy.Traverse<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, TContext) FullObjectGraphTraversalStrategy.Traverse<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, Int32, TContext) FullObjectGraphTraversalStrategy.TraverseObject<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, Int32, TContext) FullObjectGraphTraversalStrategy.TraverseDictionary<TContext>(IObjectDescriptor, Object, Int32, Object) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class RoundtripObjectGraphTraversalStrategy : FullObjectGraphTraversalStrategy, IObjectGraphTraversalStrategy Constructors RoundtripObjectGraphTraversalStrategy(YamlSerializer, ITypeInspector, ITypeResolver, Int32) Declaration public RoundtripObjectGraphTraversalStrategy(YamlSerializer serializer, ITypeInspector typeDescriptor, ITypeResolver typeResolver, int maxRecursion) Parameters Type Name Description YamlSerializer serializer YamlDotNet.Serialization.ITypeInspector typeDescriptor YamlDotNet.Serialization.ITypeResolver typeResolver Int32 maxRecursion Methods TraverseProperties<TContext>(IObjectDescriptor, Object, Int32, Object) Declaration protected override void TraverseProperties<TContext>(IObjectDescriptor value, object visitor, int currentDepth, object context) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor value Object visitor Int32 currentDepth Object context Type Parameters Name Description TContext Overrides FullObjectGraphTraversalStrategy.TraverseProperties<TContext>(IObjectDescriptor, Object, Int32, Object) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AssemblyLicenseAttribute.html": {
    "href": "api/Microsoft.DocAsCode.AssemblyLicenseAttribute.html",
    "title": "Class AssemblyLicenseAttribute | DocFX website",
    "keywords": "Class AssemblyLicenseAttribute Inheritance Object Attribute CustomAssemblyTextAttribute AssemblyLicenseAttribute Inherited Members CustomAssemblyTextAttribute.Value Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class AssemblyLicenseAttribute : CustomAssemblyTextAttribute, _Attribute Constructors AssemblyLicenseAttribute(String[]) Declaration public AssemblyLicenseAttribute(params string[] lines) Parameters Type Name Description String [] lines Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineToken.html",
    "title": "Class AzureIncludeInlineToken | DocFX website",
    "keywords": "Class AzureIncludeInlineToken Inheritance Object AzureIncludeBasicToken AzureIncludeInlineToken Inherited Members AzureIncludeBasicToken.Rule AzureIncludeBasicToken.Context AzureIncludeBasicToken.Src AzureIncludeBasicToken.Name AzureIncludeBasicToken.Title AzureIncludeBasicToken.Raw AzureIncludeBasicToken.SourceInfo AzureIncludeBasicToken.Tokens Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeInlineToken : AzureIncludeBasicToken, IMarkdownToken, IMarkdownRewritable<AzureIncludeInlineToken> Constructors AzureIncludeInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, ImmutableArray<IMarkdownToken>, String, SourceInfo) Declaration public AzureIncludeInlineToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, ImmutableArray<IMarkdownToken> tokens, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens String raw SourceInfo sourceInfo Methods Rewrite(IMarkdownRewriteEngine) Declaration public AzureIncludeInlineToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description AzureIncludeInlineToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineRule.html",
    "title": "Class AzureMigrationIncludeInlineRule | DocFX website",
    "keywords": "Class AzureMigrationIncludeInlineRule Inheritance Object AzureMigrationIncludeInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeInlineRule : IMarkdownRule Properties AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockRule.html",
    "title": "Class AzureSelectorBlockRule | DocFX website",
    "keywords": "Class AzureSelectorBlockRule Inheritance Object AzureSelectorBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureSelectorBlockRule : IMarkdownRule Properties AzureNoteRegex Declaration public virtual Regex AzureNoteRegex { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.BaseModelAttributeHandler-1.PropInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.BaseModelAttributeHandler-1.PropInfo.html",
    "title": "Class BaseModelAttributeHandler<T>.PropInfo | DocFX website",
    "keywords": "Class BaseModelAttributeHandler<T>.PropInfo Inheritance Object BaseModelAttributeHandler<T>.PropInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax protected sealed class PropInfo Properties Attr Declaration public Attribute Attr { get; set; } Property Value Type Description Attribute Prop Declaration public PropertyInfo Prop { get; set; } Property Value Type Description PropertyInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems-2.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems-2.html",
    "title": "Class HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems<TKey, TValue> | DocFX website",
    "keywords": "Class HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems<TKey, TValue> Inheritance Object HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems<TKey, TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public sealed class EnumerateIReadonlyDictionaryItems<TKey, TValue> : HandleGenericItemsHelper.IHandleItems Type Parameters Name Description TKey TValue Constructors EnumerateIReadonlyDictionaryItems(IReadOnlyDictionary<TKey, TValue>) Declaration public EnumerateIReadonlyDictionaryItems(IReadOnlyDictionary<TKey, TValue> dict) Parameters Type Name Description IReadOnlyDictionary <TKey, TValue> dict Methods Handle(Func<Object, Object>) Declaration public void Handle(Func<object, object> enumerate) Parameters Type Name Description Func < Object , Object > enumerate Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.MarkdownReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.MarkdownReader.html",
    "title": "Class MarkdownReader | DocFX website",
    "keywords": "Class MarkdownReader Inheritance Object MarkdownReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class MarkdownReader Methods ReadMarkdownAsConceptual(String) Declaration public static Dictionary<string, object> ReadMarkdownAsConceptual(string file) Parameters Type Name Description String file Returns Type Description Dictionary < String , Object > ReadMarkdownAsOverwrite(IHostService, FileAndType) Declaration public static IEnumerable<OverwriteDocumentModel> ReadMarkdownAsOverwrite(IHostService host, FileAndType ft) Parameters Type Name Description IHostService host FileAndType ft Returns Type Description IEnumerable < OverwriteDocumentModel > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.html",
    "title": "Namespace Microsoft.DocAsCode.Build.Common | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.Common Classes ApplyOverwriteDocument BaseDocumentBuildStep BaseModelAttributeHandler<T> BaseModelAttributeHandler<T>.PropInfo BuildReferenceDocumentBase Base document build step for reference. CompositeModelAttributeHandler DisposableDocumentProcessor FileModelPropertySerialization HandleGenericItemsHelper HandleGenericItemsHelper.EnumerateIDictionaryItems<TKey, TValue> HandleGenericItemsHelper.EnumerateIEnumerableItems<TValue> HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems<TKey, TValue> HandleGenericItemsHelper.HandleIDictionaryItems<TKey, TValue> HandleGenericItemsHelper.HandleIListItems<T> HandleModelAttributesContext MarkdownContentHandler MarkdownReader OverwriteDocumentModel OverwriteDocumentReader ReferenceDocumentProcessorBase Base document processor for reference. ReflectionHelper UniqueIdentityReferenceHandler YamlHtmlPart Interfaces IModelAttributeHandler"
  },
  "api/Microsoft.DocAsCode.Build.Engine.BasicXRefMapReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.BasicXRefMapReader.html",
    "title": "Class BasicXRefMapReader | DocFX website",
    "keywords": "Class BasicXRefMapReader Inheritance Object BasicXRefMapReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class BasicXRefMapReader : IXRefContainerReader Constructors BasicXRefMapReader(XRefMap) Declaration public BasicXRefMapReader(XRefMap map) Parameters Type Name Description XRefMap map Properties Map Declaration protected XRefMap Map { get; } Property Value Type Description XRefMap Methods Find(String) Declaration public virtual XRefSpec Find(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec Implements IXRefContainerReader.Find(String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.BuildPhaseUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.BuildPhaseUtility.html",
    "title": "Class BuildPhaseUtility | DocFX website",
    "keywords": "Class BuildPhaseUtility Inheritance Object BuildPhaseUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public static class BuildPhaseUtility Methods GetPhaseMessageInfo(BuildMessage, BuildPhase) Declaration public static BuildMessageInfo GetPhaseMessageInfo(BuildMessage messages, BuildPhase phase) Parameters Type Name Description BuildMessage messages BuildPhase phase Returns Type Description BuildMessageInfo RunBuildSteps(IEnumerable<IDocumentBuildStep>, Action<IDocumentBuildStep>) Declaration public static void RunBuildSteps(IEnumerable<IDocumentBuildStep> buildSteps, Action<IDocumentBuildStep> action) Parameters Type Name Description IEnumerable < IDocumentBuildStep > buildSteps Action < IDocumentBuildStep > action"
  },
  "api/Microsoft.DocAsCode.Build.Engine.FileResourceCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.FileResourceCollection.html",
    "title": "Class FileResourceCollection | DocFX website",
    "keywords": "Class FileResourceCollection Inheritance Object ResourceCollection FileResourceCollection Inherited Members ResourceCollection.GetResource(String) ResourceCollection.GetResources(String) ResourceCollection.GetResourceStreams(String) ResourceCollection.Dispose() ResourceCollection.Dispose(Boolean) ResourceCollection.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class FileResourceCollection : ResourceCollection, IDisposable Constructors FileResourceCollection(String, Int32) Declaration public FileResourceCollection(string directory, int maxSearchLevel = 5) Parameters Type Name Description String directory Int32 maxSearchLevel Properties IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceCollection.IsEmpty Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceCollection.Name Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceCollection.Names Methods GetResourceStream(String) Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceCollection.GetResourceStream(String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.GfmServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.GfmServiceProvider.html",
    "title": "Class GfmServiceProvider | DocFX website",
    "keywords": "Class GfmServiceProvider Inheritance Object GfmServiceProvider Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"gfm\", typeof (IMarkdownServiceProvider))] public class GfmServiceProvider : IMarkdownServiceProvider Methods CreateMarkdownService(MarkdownServiceParameters) Declaration public IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService Implements IMarkdownServiceProvider.CreateMarkdownService(MarkdownServiceParameters) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyItem.html",
    "title": "Class DependencyItem | DocFX website",
    "keywords": "Class DependencyItem Inheritance Object DependencyItem Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class DependencyItem : IEquatable<DependencyItem> Constructors DependencyItem(DependencyItemSourceInfo, DependencyItemSourceInfo, DependencyItemSourceInfo, String) Declaration [JsonConstructor] public DependencyItem(DependencyItemSourceInfo from, DependencyItemSourceInfo to, DependencyItemSourceInfo reportedBy, string type) Parameters Type Name Description DependencyItemSourceInfo from DependencyItemSourceInfo to DependencyItemSourceInfo reportedBy String type Properties From Declaration [JsonProperty(\"from\")] public DependencyItemSourceInfo From { get; } Property Value Type Description DependencyItemSourceInfo ReportedBy Declaration [JsonProperty(\"reportedBy\")] public DependencyItemSourceInfo ReportedBy { get; } Property Value Type Description DependencyItemSourceInfo To Declaration [JsonProperty(\"to\")] public DependencyItemSourceInfo To { get; } Property Value Type Description DependencyItemSourceInfo Type Declaration [JsonProperty(\"type\")] public string Type { get; } Property Value Type Description String Methods ChangeFrom(DependencyItemSourceInfo) Declaration public DependencyItem ChangeFrom(DependencyItemSourceInfo f) Parameters Type Name Description DependencyItemSourceInfo f Returns Type Description DependencyItem ChangeReportedBy(DependencyItemSourceInfo) Declaration public DependencyItem ChangeReportedBy(DependencyItemSourceInfo r) Parameters Type Name Description DependencyItemSourceInfo r Returns Type Description DependencyItem ChangeTo(DependencyItemSourceInfo) Declaration public DependencyItem ChangeTo(DependencyItemSourceInfo t) Parameters Type Name Description DependencyItemSourceInfo t Returns Type Description DependencyItem Equals(DependencyItem) Declaration public bool Equals(DependencyItem dp) Parameters Type Name Description DependencyItem dp Returns Type Description Boolean Implements IEquatable<T>.Equals(T) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyItemSourceInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyItemSourceInfo.html",
    "title": "Class DependencyItemSourceInfo | DocFX website",
    "keywords": "Class DependencyItemSourceInfo Inheritance Object DependencyItemSourceInfo Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class DependencyItemSourceInfo : IEquatable<DependencyItemSourceInfo> Constructors DependencyItemSourceInfo(String, String) Declaration [JsonConstructor] public DependencyItemSourceInfo(string sourceType, string value) Parameters Type Name Description String sourceType String value Properties SourceType Declaration [JsonProperty(\"sourceType\")] public string SourceType { get; } Property Value Type Description String Value Declaration [JsonProperty(\"value\")] public string Value { get; } Property Value Type Description String Methods ChangeSourceType(String) Declaration public DependencyItemSourceInfo ChangeSourceType(string type) Parameters Type Name Description String type Returns Type Description DependencyItemSourceInfo ChangeValue(String) Declaration public DependencyItemSourceInfo ChangeValue(string value) Parameters Type Name Description String value Returns Type Description DependencyItemSourceInfo Equals(DependencyItemSourceInfo) Declaration public bool Equals(DependencyItemSourceInfo other) Parameters Type Name Description DependencyItemSourceInfo other Returns Type Description Boolean Implements IEquatable<T>.Equals(T) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators Equality(DependencyItemSourceInfo, DependencyItemSourceInfo) Declaration public static bool operator ==(DependencyItemSourceInfo a, DependencyItemSourceInfo b) Parameters Type Name Description DependencyItemSourceInfo a DependencyItemSourceInfo b Returns Type Description Boolean Implicit(String to DependencyItemSourceInfo) Declaration public static implicit operator DependencyItemSourceInfo(string info) Parameters Type Name Description String info Returns Type Description DependencyItemSourceInfo Inequality(DependencyItemSourceInfo, DependencyItemSourceInfo) Declaration public static bool operator !=(DependencyItemSourceInfo a, DependencyItemSourceInfo b) Parameters Type Name Description DependencyItemSourceInfo a DependencyItemSourceInfo b Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessOutputs.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessOutputs.html",
    "title": "Class PostProcessOutputs | DocFX website",
    "keywords": "Class PostProcessOutputs Inheritance Object Dictionary < String , String > OSPlatformSensitiveDictionary < String > PostProcessOutputs Inherited Members Dictionary<String, String>.Add(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) Dictionary<String, String>.Clear() Dictionary<String, String>.ContainsKey(String) Dictionary<String, String>.ContainsValue(String) Dictionary<String, String>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() Dictionary<String, String>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, String>.OnDeserialization(Object) Dictionary<String, String>.Remove(String) Dictionary<String, String>.TryGetValue(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32) Dictionary<String, String>.ICollection.CopyTo(Array, Int32) Dictionary<String, String>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, String>.IDictionary.Add(Object, Object) Dictionary<String, String>.IDictionary.Contains(Object) Dictionary<String, String>.IDictionary.GetEnumerator() Dictionary<String, String>.IDictionary.Remove(Object) Dictionary<String, String>.Comparer Dictionary<String, String>.Count Dictionary<String, String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys Dictionary<String, String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values Dictionary<String, String>.Item[String] System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly Dictionary<String, String>.ICollection.IsSynchronized Dictionary<String, String>.ICollection.SyncRoot Dictionary<String, String>.IDictionary.IsFixedSize Dictionary<String, String>.IDictionary.IsReadOnly Dictionary<String, String>.IDictionary.Keys Dictionary<String, String>.IDictionary.Values Dictionary<String, String>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class PostProcessOutputs : OSPlatformSensitiveDictionary<string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorInfo.html",
    "title": "Class ProcessorInfo | DocFX website",
    "keywords": "Class ProcessorInfo Inheritance Object ProcessorInfoBase ProcessorInfo Inherited Members ProcessorInfoBase.Name ProcessorInfoBase.IncrementalContextHash Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class ProcessorInfo : ProcessorInfoBase Properties IntermediateModelManifest Deserialized build intermediate model manifest. Declaration [JsonIgnore] public ModelManifest IntermediateModelManifest { get; } Property Value Type Description ModelManifest IntermediateModelManifestFile The file link for the BuildModel manifest file(type is ModelManifest ). Declaration public string IntermediateModelManifestFile { get; set; } Property Value Type Description String Steps The information for steps. Declaration public List<ProcessorStepInfo> Steps { get; } Property Value Type Description List < ProcessorStepInfo > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.SearchIndexItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.SearchIndexItem.html",
    "title": "Class SearchIndexItem | DocFX website",
    "keywords": "Class SearchIndexItem Inheritance Object SearchIndexItem Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class SearchIndexItem Properties Href Declaration [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String Keywords Declaration [JsonProperty(\"keywords\")] public string Keywords { get; set; } Property Value Type Description String Title Declaration [JsonProperty(\"title\")] public string Title { get; set; } Property Value Type Description String Methods Equals(SearchIndexItem) Declaration public bool Equals(SearchIndexItem other) Parameters Type Name Description SearchIndexItem other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.html",
    "title": "Class SingleDocumentBuilder | DocFX website",
    "keywords": "Class SingleDocumentBuilder Inheritance Object SingleDocumentBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class SingleDocumentBuilder : IDisposable Properties MarkdownServiceProvider Declaration public IMarkdownServiceProvider MarkdownServiceProvider { get; set; } Property Value Type Description IMarkdownServiceProvider MetadataValidators Declaration public IEnumerable<IInputMetadataValidator> MetadataValidators { get; set; } Property Value Type Description IEnumerable < IInputMetadataValidator > Processors Declaration public IEnumerable<IDocumentProcessor> Processors { get; set; } Property Value Type Description IEnumerable < IDocumentProcessor > Methods Build(DocumentBuildParameters) Declaration public Manifest Build(DocumentBuildParameters parameters) Parameters Type Name Description DocumentBuildParameters parameters Returns Type Description Manifest Build(IDocumentProcessor, DocumentBuildParameters, IMarkdownService) Declaration public static ImmutableList<FileModel> Build(IDocumentProcessor processor, DocumentBuildParameters parameters, IMarkdownService markdownService) Parameters Type Name Description IDocumentProcessor processor DocumentBuildParameters parameters IMarkdownService markdownService Returns Type Description System.Collections.Immutable.ImmutableList < FileModel > Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateUtility.html",
    "title": "Class TemplateUtility | DocFX website",
    "keywords": "Class TemplateUtility Inheritance Object TemplateUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateUtility Constructors TemplateUtility(DocumentBuildContext) Declaration public TemplateUtility(DocumentBuildContext context) Parameters Type Name Description DocumentBuildContext context Methods GetHrefFromRoot(String, String) Declaration public string GetHrefFromRoot(string originalHref, string sourceFileKey) Parameters Type Name Description String originalHref String sourceFileKey Returns Type Description String ResolveSourceRelativePath(String, String) Declaration public string ResolveSourceRelativePath(string originPath, string currentFileOutputPath) Parameters Type Name Description String originPath String currentFileOutputPath Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TransformModelOptions.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TransformModelOptions.html",
    "title": "Class TransformModelOptions | DocFX website",
    "keywords": "Class TransformModelOptions Inheritance Object TransformModelOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TransformModelOptions Properties Bookmarks Declaration [JsonProperty(PropertyName = \"bookmarks\")] public Dictionary<string, string> Bookmarks { get; set; } Property Value Type Description Dictionary < String , String > IsShared Declaration [JsonProperty(PropertyName = \"isShared\")] public bool IsShared { get; set; } Property Value Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildManagedReferenceDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildManagedReferenceDocument.html",
    "title": "Class BuildManagedReferenceDocument | DocFX website",
    "keywords": "Class BuildManagedReferenceDocument Inheritance Object BaseDocumentBuildStep BuildReferenceDocumentBase BuildManagedReferenceDocument Inherited Members BuildReferenceDocumentBase.BuildOrder BuildReferenceDocumentBase.Build(FileModel, IHostService) BuildReferenceDocumentBase.BuildOverwrite(IHostService, FileModel) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof (IDocumentBuildStep))] public class BuildManagedReferenceDocument : BuildReferenceDocumentBase, ISupportIncrementalBuildStep, IDocumentBuildStep Properties Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Implements IDocumentBuildStep.Name Methods BuildArticle(IHostService, FileModel) TODO: move to Base and share with other DocumentBuilder Declaration protected override void BuildArticle(IHostService host, FileModel model) Parameters Type Name Description IHostService host FileModel model Overrides BuildReferenceDocumentBase.BuildArticle(IHostService, FileModel) CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > Implements ISupportIncrementalBuildStep.GetDependencyTypesToRegister() GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep.GetIncrementalContextHash() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutput.html",
    "title": "Class ApiBuildOutput | DocFX website",
    "keywords": "Class ApiBuildOutput Inheritance Object ApiBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiBuildOutput Properties AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > Children Declaration [YamlMember(Alias = \"children\")] [JsonProperty(\"children\")] public List<ApiReferenceBuildOutput> Children { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String DerivedClasses Declaration [YamlMember(Alias = \"derivedClasses\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"derivedClasses\")] public List<ApiReferenceBuildOutput> DerivedClasses { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ApiExceptionInfoBuildOutput> Exceptions { get; set; } Property Value Type Description List < ApiExceptionInfoBuildOutput > ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<ApiReferenceBuildOutput> ExtensionMethods { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public List<ApiLanguageValuePair> FullName { get; set; } Property Value Type Description List < ApiLanguageValuePair > Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<ApiNames> Implements { get; set; } Property Value Type Description List < ApiNames > Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"inheritance\")] public List<ApiReferenceBuildOutput> Inheritance { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<ApiReferenceBuildOutput> InheritedMembers { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > IsExplicitInterfaceImplementation Declaration [YamlMember(Alias = \"isEii\")] [JsonProperty(\"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean Level Declaration [YamlMember(Alias = \"level\")] [JsonProperty(\"level\")] public int Level { get; } Property Value Type Description Int32 Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public List<ApiLanguageValuePair> Name { get; set; } Property Value Type Description List < ApiLanguageValuePair > NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public ApiReferenceBuildOutput NamespaceName { get; set; } Property Value Type Description ApiReferenceBuildOutput NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public List<ApiLanguageValuePair> NameWithType { get; set; } Property Value Type Description List < ApiLanguageValuePair > Overload Declaration [YamlMember(Alias = \"overload\")] [JsonProperty(\"overload\")] public ApiNames Overload { get; set; } Property Value Type Description ApiNames Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public ApiNames Overridden { get; set; } Property Value Type Description ApiNames Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public ApiReferenceBuildOutput Parent { get; set; } Property Value Type Description ApiReferenceBuildOutput Platform Declaration [YamlMember(Alias = \"platform\")] [JsonProperty(\"platform\")] public List<string> Platform { get; set; } Property Value Type Description List < String > Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<ApiLinkInfoBuildOutput> SeeAlsos { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<ApiLinkInfoBuildOutput> Sees { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String SupportedLanguages Declaration [YamlMember(Alias = \"langs\")] [JsonProperty(\"langs\")] public string[] SupportedLanguages { get; set; } Property Value Type Description String [] Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public ApiSyntaxBuildOutput Syntax { get; set; } Property Value Type Description ApiSyntaxBuildOutput Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public MemberType? Type { get; set; } Property Value Type Description Nullable < MemberType > Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods FromModel(PageViewModel) Declaration public static ApiBuildOutput FromModel(PageViewModel model) Parameters Type Name Description PageViewModel model Returns Type Description ApiBuildOutput Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.IResourceFileConfig.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.IResourceFileConfig.html",
    "title": "Interface IResourceFileConfig | DocFX website",
    "keywords": "Interface IResourceFileConfig Namespace :Microsoft.DocAsCode.Build.ResourceFiles Assembly :Microsoft.DocAsCode.Build.ResourceFiles.dll Syntax public interface IResourceFileConfig Methods IsResourceFile(String) Declaration bool IsResourceFile(string fileExtension) Parameters Type Name Description String fileExtension Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.ResourceDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.ResourceDocumentProcessor.html",
    "title": "Class ResourceDocumentProcessor | DocFX website",
    "keywords": "Class ResourceDocumentProcessor Inheritance Object DisposableDocumentProcessor ResourceDocumentProcessor Inherited Members DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ResourceFiles Assembly :Microsoft.DocAsCode.Build.ResourceFiles.dll Syntax [Export(typeof (IDocumentProcessor))] public class ResourceDocumentProcessor : DisposableDocumentProcessor, IDocumentProcessor, IDisposable Properties BuildSteps Declaration [ImportMany(\"ResourceDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps Configs Declaration [ImportMany] public IEnumerable<IResourceFileConfig> Configs { get; set; } Property Value Type Description IEnumerable < IResourceFileConfig > Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Methods GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Overrides DisposableDocumentProcessor.GetProcessingPriority(FileAndType) Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides DisposableDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides DisposableDocumentProcessor.Save(FileModel) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.MarkdownTocReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.MarkdownTocReader.html",
    "title": "Class MarkdownTocReader | DocFX website",
    "keywords": "Class MarkdownTocReader Inheritance Object MarkdownTocReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.TableOfContents Assembly :Microsoft.DocAsCode.Build.TableOfContents.dll Syntax public static class MarkdownTocReader Methods LoadToc(String, String) Declaration public static TocViewModel LoadToc(string tocContent, string filePath) Parameters Type Name Description String tocContent String filePath Returns Type Description TocViewModel"
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.TocDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.TocDocumentProcessor.html",
    "title": "Class TocDocumentProcessor | DocFX website",
    "keywords": "Class TocDocumentProcessor Inheritance Object DisposableDocumentProcessor TocDocumentProcessor Inherited Members DisposableDocumentProcessor.Dispose() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.TableOfContents Assembly :Microsoft.DocAsCode.Build.TableOfContents.dll Syntax [Export(typeof (IDocumentProcessor))] public class TocDocumentProcessor : DisposableDocumentProcessor, IDocumentProcessor, IDisposable Properties BuildSteps Declaration [ImportMany(\"TocDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Methods GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Overrides DisposableDocumentProcessor.GetProcessingPriority(FileAndType) Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides DisposableDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides DisposableDocumentProcessor.Save(FileModel) UpdateHref(FileModel, IDocumentBuildContext) Declaration public override void UpdateHref(FileModel model, IDocumentBuildContext context) Parameters Type Name Description FileModel model IDocumentBuildContext context Overrides DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.html",
    "title": "Namespace Microsoft.DocAsCode.Build.TableOfContents | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.TableOfContents Classes BuildTocDocument MarkdownTocReader TocDocumentProcessor"
  },
  "api/Microsoft.DocAsCode.BuildJsonConfig.html": {
    "href": "api/Microsoft.DocAsCode.BuildJsonConfig.html",
    "title": "Class BuildJsonConfig | DocFX website",
    "keywords": "Class BuildJsonConfig Inheritance Object BuildJsonConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] public class BuildJsonConfig Properties BaseDirectory Declaration [JsonIgnore] public string BaseDirectory { get; set; } Property Value Type Description String ChangesFile Declaration [JsonProperty(\"changesFile\")] public string ChangesFile { get; set; } Property Value Type Description String Content Declaration [JsonProperty(\"content\")] public FileMapping Content { get; set; } Property Value Type Description FileMapping CustomLinkResolver Declaration [JsonProperty(\"customLinkResolver\")] public string CustomLinkResolver { get; set; } Property Value Type Description String Destination Declaration [JsonProperty(\"dest\")] public string Destination { get; set; } Property Value Type Description String DryRun Declaration [JsonProperty(\"dryRun\")] public bool ? DryRun { get; set; } Property Value Type Description Nullable < Boolean > EnableDebugMode Declaration [JsonProperty(\"debug\")] public bool ? EnableDebugMode { get; set; } Property Value Type Description Nullable < Boolean > ExportRawModel Declaration [JsonProperty(\"exportRawModel\")] public bool ? ExportRawModel { get; set; } Property Value Type Description Nullable < Boolean > ExportViewModel Declaration [JsonProperty(\"exportViewModel\")] public bool ? ExportViewModel { get; set; } Property Value Type Description Nullable < Boolean > ExternalReference Declaration [JsonProperty(\"externalReference\")] public FileMapping ExternalReference { get; set; } Property Value Type Description FileMapping FileMetadata Metadata that applies to some specific files. The key is the metadata name. For each item of the value: The key is the glob pattern to match the files. The value is the value of the metadata. Declaration [JsonProperty(\"fileMetadata\")] public Dictionary<string, FileMetadataPairs> FileMetadata { get; set; } Property Value Type Description Dictionary < String , FileMetadataPairs > FileMetadataFilePaths Declaration [JsonProperty(\"fileMetadataFiles\")] public ListWithStringFallback FileMetadataFilePaths { get; set; } Property Value Type Description ListWithStringFallback Force Declaration [JsonProperty(\"force\")] public bool ? Force { get; set; } Property Value Type Description Nullable < Boolean > ForcePostProcess Declaration [JsonProperty(\"forcePostProcess\")] public bool ? ForcePostProcess { get; set; } Property Value Type Description Nullable < Boolean > GlobalMetadata Declaration [JsonProperty(\"globalMetadata\")] [JsonConverter(typeof (JObjectDictionaryToObjectDictionaryConverter))] public Dictionary<string, object> GlobalMetadata { get; set; } Property Value Type Description Dictionary < String , Object > GlobalMetadataFilePaths Declaration [JsonProperty(\"globalMetadataFiles\")] public ListWithStringFallback GlobalMetadataFilePaths { get; set; } Property Value Type Description ListWithStringFallback IntermediateFolder Declaration [JsonProperty(\"intermediateFolder\")] public string IntermediateFolder { get; set; } Property Value Type Description String LruSize Declaration [JsonProperty(\"lruSize\")] public int ? LruSize { get; set; } Property Value Type Description Nullable < Int32 > MarkdownEngineName Declaration [JsonProperty(\"markdownEngineName\")] public string MarkdownEngineName { get; set; } Property Value Type Description String MarkdownEngineProperties Declaration [JsonProperty(\"markdownEngineProperties\")] [JsonConverter(typeof (JObjectDictionaryToObjectDictionaryConverter))] public Dictionary<string, object> MarkdownEngineProperties { get; set; } Property Value Type Description Dictionary < String , Object > MaxParallelism Declaration [JsonProperty(\"maxParallelism\")] public int ? MaxParallelism { get; set; } Property Value Type Description Nullable < Int32 > NoLangKeyword Disable default lang keyword, e.g. null Declaration [JsonProperty(\"noLangKeyword\")] public bool NoLangKeyword { get; set; } Property Value Type Description Boolean OutputFolder Declaration [JsonIgnore] public string OutputFolder { get; set; } Property Value Type Description String OutputFolderForDebugFiles Declaration [JsonProperty(\"debugOutput\")] public string OutputFolderForDebugFiles { get; set; } Property Value Type Description String Overwrite Declaration [JsonProperty(\"overwrite\")] public FileMapping Overwrite { get; set; } Property Value Type Description FileMapping Port Declaration [JsonProperty(\"port\")] public string Port { get; set; } Property Value Type Description String PostProcessors Declaration [JsonProperty(\"postProcessors\")] public ListWithStringFallback PostProcessors { get; set; } Property Value Type Description ListWithStringFallback RawModelOutputFolder Declaration [JsonProperty(\"rawModelOutputFolder\")] public string RawModelOutputFolder { get; set; } Property Value Type Description String Resource Declaration [JsonProperty(\"resource\")] public FileMapping Resource { get; set; } Property Value Type Description FileMapping Serve Declaration [JsonProperty(\"serve\")] public bool ? Serve { get; set; } Property Value Type Description Nullable < Boolean > Templates Declaration [JsonProperty(\"template\")] public ListWithStringFallback Templates { get; set; } Property Value Type Description ListWithStringFallback Themes Declaration [JsonProperty(\"theme\")] public ListWithStringFallback Themes { get; set; } Property Value Type Description ListWithStringFallback Versions Declaration [JsonProperty(\"versions\")] public Dictionary<string, VersionConfig> Versions { get; set; } Property Value Type Description Dictionary < String , VersionConfig > ViewModelOutputFolder Declaration [JsonProperty(\"viewModelOutputFolder\")] public string ViewModelOutputFolder { get; set; } Property Value Type Description String XRefMaps Declaration [JsonProperty(\"xref\")] public ListWithStringFallback XRefMaps { get; set; } Property Value Type Description ListWithStringFallback Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.IFileReader.html": {
    "href": "api/Microsoft.DocAsCode.Common.IFileReader.html",
    "title": "Interface IFileReader | DocFX website",
    "keywords": "Interface IFileReader File reader. Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public interface IFileReader Methods EnumerateFiles() Get all files in this reader. Declaration IEnumerable<RelativePath> EnumerateFiles() Returns Type Description IEnumerable < RelativePath > A set of logical file path (from working folder). FindFile(RelativePath) Convert a logical file path to a physical file path Declaration PathMapping? FindFile(RelativePath file) Parameters Type Name Description RelativePath file Logical file path. Returns Type Description Nullable < PathMapping > A path mapping. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.IFileWriter.html": {
    "href": "api/Microsoft.DocAsCode.Common.IFileWriter.html",
    "title": "Interface IFileWriter | DocFX website",
    "keywords": "Interface IFileWriter File writer. Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public interface IFileWriter Methods Copy(PathMapping, RelativePath) Copy a file to logical file path. Declaration void Copy(PathMapping sourceFileName, RelativePath destFileName) Parameters Type Name Description PathMapping sourceFileName Source file. RelativePath destFileName Dest file (logical file path). Create(RelativePath) Create a file with logical file path. Declaration Stream Create(RelativePath file) Parameters Type Name Description RelativePath file logical file path Returns Type Description Stream file stream CreateReader() Create a reader to read files in output. Declaration IFileReader CreateReader() Returns Type Description IFileReader A file reader. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ILoggerListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.ILoggerListener.html",
    "title": "Interface ILoggerListener | DocFX website",
    "keywords": "Interface ILoggerListener Inherited Members IDisposable.Dispose() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public interface ILoggerListener : IDisposable Methods Flush() Declaration void Flush() WriteLine(ILogItem) Declaration void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ILogItem.html": {
    "href": "api/Microsoft.DocAsCode.Common.ILogItem.html",
    "title": "Interface ILogItem | DocFX website",
    "keywords": "Interface ILogItem Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public interface ILogItem Properties Code Declaration string Code { get; } Property Value Type Description String File Declaration string File { get; } Property Value Type Description String Line Declaration string Line { get; } Property Value Type Description String LogLevel Declaration LogLevel LogLevel { get; } Property Value Type Description LogLevel Message Declaration string Message { get; } Property Value Type Description String Phase Declaration string Phase { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ResourcePoolManager-1.html": {
    "href": "api/Microsoft.DocAsCode.Common.ResourcePoolManager-1.html",
    "title": "Class ResourcePoolManager<TResource> | DocFX website",
    "keywords": "Class ResourcePoolManager<TResource> Inheritance Object ResourcePoolManager<TResource> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ResourcePoolManager<TResource> : IDisposable where TResource : class Type Parameters Name Description TResource Constructors ResourcePoolManager(Func<TResource>, Int32) Declaration public ResourcePoolManager(Func<TResource> creator, int maxResourceCount) Parameters Type Name Description Func <TResource> creator Int32 maxResourceCount Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Finalize() Declaration protected void Finalize() Rent() Declaration public ResourceLease<TResource> Rent() Returns Type Description ResourceLease <TResource> Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.StreamSegmentSerialization.StreamDeserializer.html": {
    "href": "api/Microsoft.DocAsCode.Common.StreamSegmentSerialization.StreamDeserializer.html",
    "title": "Class StreamDeserializer | DocFX website",
    "keywords": "Class StreamDeserializer Inheritance Object StreamDeserializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.StreamSegmentSerialization Assembly :Microsoft.DocAsCode.Common.dll Syntax public class StreamDeserializer Constructors StreamDeserializer(Stream) Declaration public StreamDeserializer(Stream underlyingStream) Parameters Type Name Description Stream underlyingStream Properties UnderlyingStream Declaration public Stream UnderlyingStream { get; } Property Value Type Description Stream Methods Read() Declaration public object Read() Returns Type Description Object ReadArray(StreamSegment) Declaration public object[] ReadArray(StreamSegment current) Parameters Type Name Description StreamSegment current Returns Type Description Object [] ReadBinary(StreamSegment) Declaration public byte[] ReadBinary(StreamSegment current) Parameters Type Name Description StreamSegment current Returns Type Description Byte [] ReadBinaryAsStream(StreamSegment) Declaration public Stream ReadBinaryAsStream(StreamSegment current) Parameters Type Name Description StreamSegment current Returns Type Description Stream ReadDictionary(StreamSegment) Declaration public Dictionary<string, object> ReadDictionary(StreamSegment current) Parameters Type Name Description StreamSegment current Returns Type Description Dictionary < String , Object > ReadDictionaryLazy(StreamSegment) Declaration public Dictionary<string, Lazy<object>> ReadDictionaryLazy(StreamSegment current) Parameters Type Name Description StreamSegment current Returns Type Description Dictionary < String , System.Lazy < Object >> ReadInteger(StreamSegment) Declaration public string ReadInteger(StreamSegment current) Parameters Type Name Description StreamSegment current Returns Type Description String ReadNext(StreamSegment) Declaration public StreamSegment ReadNext(StreamSegment current) Parameters Type Name Description StreamSegment current Returns Type Description StreamSegment ReadSegment() Declaration public StreamSegment ReadSegment() Returns Type Description StreamSegment ReadSegment(Int32) Declaration public StreamSegment ReadSegment(int startOffset) Parameters Type Name Description Int32 startOffset Returns Type Description StreamSegment ReadString(StreamSegment) Declaration public string ReadString(StreamSegment current) Parameters Type Name Description StreamSegment current Returns Type Description String ReadValue(StreamSegment) Declaration public object ReadValue(StreamSegment current) Parameters Type Name Description StreamSegment current Returns Type Description Object Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.StreamSegmentSerialization.StreamSegment.html": {
    "href": "api/Microsoft.DocAsCode.Common.StreamSegmentSerialization.StreamSegment.html",
    "title": "Class StreamSegment | DocFX website",
    "keywords": "Class StreamSegment Inheritance Object StreamSegment Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.StreamSegmentSerialization Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class StreamSegment Constructors StreamSegment(Stream, Int32, Int32, Int32, StreamSegmentType) Declaration public StreamSegment(Stream underlyingStream, int startOffset, int length, int next, StreamSegmentType contentType) Parameters Type Name Description Stream underlyingStream Int32 startOffset Int32 length Int32 next StreamSegmentType contentType Properties ContentLength Declaration public int ContentLength { get; } Property Value Type Description Int32 ContentStartOffset Declaration public int ContentStartOffset { get; } Property Value Type Description Int32 ContentType Declaration public StreamSegmentType ContentType { get; } Property Value Type Description StreamSegmentType Length Declaration public int Length { get; } Property Value Type Description Int32 Next Declaration public int Next { get; set; } Property Value Type Description Int32 StartOffset Declaration public int StartOffset { get; } Property Value Type Description Int32 UnderlyingStream Declaration public Stream UnderlyingStream { get; } Property Value Type Description Stream Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.StreamSegmentSerialization.StreamSegmentType.html": {
    "href": "api/Microsoft.DocAsCode.Common.StreamSegmentSerialization.StreamSegmentType.html",
    "title": "Enum StreamSegmentType | DocFX website",
    "keywords": "Enum StreamSegmentType Namespace :Microsoft.DocAsCode.Common.StreamSegmentSerialization Assembly :Microsoft.DocAsCode.Common.dll Syntax public enum StreamSegmentType : byte Fields Name Description Array Binary Dictionary Integer Null String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.UniqueIdentityReferenceAttribute.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.UniqueIdentityReferenceAttribute.html",
    "title": "Class UniqueIdentityReferenceAttribute | DocFX website",
    "keywords": "Class UniqueIdentityReferenceAttribute Inheritance Object Attribute UniqueIdentityReferenceAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class UniqueIdentityReferenceAttribute : Attribute, _Attribute Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.UniqueIdentityReferenceIgnoreAttribute.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.UniqueIdentityReferenceIgnoreAttribute.html",
    "title": "Class UniqueIdentityReferenceIgnoreAttribute | DocFX website",
    "keywords": "Class UniqueIdentityReferenceIgnoreAttribute Inheritance Object Attribute UniqueIdentityReferenceIgnoreAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class UniqueIdentityReferenceIgnoreAttribute : Attribute, _Attribute Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.html",
    "title": "Namespace Microsoft.DocAsCode.DataContracts.Common | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.DataContracts.Common Classes Constants Constants.DevLang Constants.ExtensionMemberPrefix Constants.MetadataName Constants.PropertyName TODO: add other property name const ExternalReferencePackageCollection ExternalReferencePackageReader ExternalReferencePackageWriter JTokenConverter MarkdownContentAttribute MarkdownContentIgnoreAttribute ReferenceViewModel SourceDetail SpecViewModel TocItemViewModel TocViewModel UniqueIdentityReferenceAttribute UniqueIdentityReferenceIgnoreAttribute Interfaces IOverwriteDocumentViewModel"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiParameter.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiParameter.html",
    "title": "Class ApiParameter | DocFX website",
    "keywords": "Class ApiParameter Inheritance Object ApiParameter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class ApiParameter Properties Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] [MergeOption(MergeOption.Ignore)] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] [MergeOption(MergeOption.MergeKey)] public string Name { get; set; } Property Value Type Description String Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String Methods CopyInheritedData(ApiParameter) Declaration public void CopyInheritedData(ApiParameter src) Parameters Type Name Description ApiParameter src Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmContextExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmContextExtensions.html",
    "title": "Class DfmContextExtensions | DocFX website",
    "keywords": "Class DfmContextExtensions Inheritance Object DfmContextExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public static class DfmContextExtensions Methods GetBaseFolder(IMarkdownContext) Declaration public static string GetBaseFolder(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description String GetFallbackFolders(IMarkdownContext) Declaration public static IReadOnlyList<string> GetFallbackFolders(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description IReadOnlyList < String > GetFilePathStack(IMarkdownContext) Declaration public static ImmutableStack<string> GetFilePathStack(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description System.Collections.Immutable.ImmutableStack < String > GetIsInclude(IMarkdownContext) Declaration public static bool GetIsInclude(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description Boolean ReportDependency(IMarkdownContext, IEnumerable<String>) Declaration public static void ReportDependency(this IMarkdownContext context, IEnumerable<string> files) Parameters Type Name Description IMarkdownContext context IEnumerable < String > files ReportDependency(IMarkdownContext, String) Declaration public static void ReportDependency(this IMarkdownContext context, string file) Parameters Type Name Description IMarkdownContext context String file SetBaseFolder(IMarkdownContext, String) Declaration public static IMarkdownContext SetBaseFolder(this IMarkdownContext context, string baseFolder) Parameters Type Name Description IMarkdownContext context String baseFolder Returns Type Description IMarkdownContext SetDependency(IMarkdownContext, HashSet<String>) Declaration public static IMarkdownContext SetDependency(this IMarkdownContext context, HashSet<string> dependency) Parameters Type Name Description IMarkdownContext context HashSet < String > dependency Returns Type Description IMarkdownContext SetFallbackFolders(IMarkdownContext, IReadOnlyList<String>) Declaration public static IMarkdownContext SetFallbackFolders(this IMarkdownContext context, IReadOnlyList<string> fallbackFolders) Parameters Type Name Description IMarkdownContext context IReadOnlyList < String > fallbackFolders Returns Type Description IMarkdownContext SetFilePathStack(IMarkdownContext, ImmutableStack<String>) Declaration public static IMarkdownContext SetFilePathStack(this IMarkdownContext context, ImmutableStack<string> filePathStack) Parameters Type Name Description IMarkdownContext context System.Collections.Immutable.ImmutableStack < String > filePathStack Returns Type Description IMarkdownContext SetIsInclude(IMarkdownContext) Declaration public static IMarkdownContext SetIsInclude(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description IMarkdownContext"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmCustomizedRendererPartBase-3.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmCustomizedRendererPartBase-3.html",
    "title": "Class DfmCustomizedRendererPartBase<TRenderer, TToken, TContext> | DocFX website",
    "keywords": "Class DfmCustomizedRendererPartBase<TRenderer, TToken, TContext> Inheritance Object DfmCustomizedRendererPartBase<TRenderer, TToken, TContext> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public abstract class DfmCustomizedRendererPartBase<TRenderer, TToken, TContext> : IDfmCustomizedRendererPart where TRenderer : IMarkdownRenderer where TToken : IMarkdownToken where TContext : IMarkdownContext Type Parameters Name Description TRenderer TToken TContext Constructors DfmCustomizedRendererPartBase() Declaration protected DfmCustomizedRendererPartBase() Properties MarkdownContextType Declaration public Type MarkdownContextType { get; } Property Value Type Description Type Implements IDfmCustomizedRendererPart.MarkdownContextType MarkdownRendererType Declaration public Type MarkdownRendererType { get; } Property Value Type Description Type Implements IDfmCustomizedRendererPart.MarkdownRendererType MarkdownTokenType Declaration public Type MarkdownTokenType { get; } Property Value Type Description Type Implements IDfmCustomizedRendererPart.MarkdownTokenType Name Declaration public abstract string Name { get; } Property Value Type Description String Implements IDfmCustomizedRendererPart.Name Methods Match(TRenderer, TToken, TContext) Declaration public abstract bool Match(TRenderer renderer, TToken token, TContext context) Parameters Type Name Description TRenderer renderer TToken token TContext context Returns Type Description Boolean Render(TRenderer, TToken, TContext) Declaration public abstract StringBuffer Render(TRenderer renderer, TToken token, TContext context) Parameters Type Name Description TRenderer renderer TToken token TContext context Returns Type Description StringBuffer Explicit Interface Implementations IDfmCustomizedRendererPart.Match(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration bool IDfmCustomizedRendererPart.Match(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description Boolean Implements IDfmCustomizedRendererPart.Match(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) IDfmCustomizedRendererPart.Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration StringBuffer IDfmCustomizedRendererPart.Render(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description StringBuffer Implements IDfmCustomizedRendererPart.Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmEmailInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmEmailInlineRule.html",
    "title": "Class DfmEmailInlineRule | DocFX website",
    "keywords": "Class DfmEmailInlineRule Inheritance Object DfmEmailInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmEmailInlineRule : IMarkdownRule Properties Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Xref Declaration public virtual Regex Xref { get; } Property Value Type Description Regex Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmEngine.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmEngine.html",
    "title": "Class DfmEngine | DocFX website",
    "keywords": "Class DfmEngine Inheritance Object MarkdownEngine DfmEngine Inherited Members MarkdownEngine.RendererImpl MarkdownEngine.Options MarkdownEngine.Context MarkdownEngine.Rewriter MarkdownEngine.TokenTreeValidator MarkdownEngine.Links MarkdownEngine.MaxExtractCount MarkdownEngine.Normalize(String) MarkdownEngine.Mark(SourceInfo, IMarkdownContext) MarkdownEngine.Preprocess(String) MarkdownEngine.Parser MarkdownEngine.RewriteEngine MarkdownEngine.Renderer Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmEngine : MarkdownEngine, IMarkdownEngine Constructors DfmEngine(IMarkdownContext, IMarkdownTokenRewriter, Object, Options) Declaration public DfmEngine(IMarkdownContext context, IMarkdownTokenRewriter rewriter, object renderer, Options options) Parameters Type Name Description IMarkdownContext context IMarkdownTokenRewriter rewriter Object renderer Options options Methods Markup(String, String) Declaration public override string Markup(string src, string path) Parameters Type Name Description String src String path Returns Type Description String Overrides MarkdownEngine.Markup(String, String) Markup(String, String, HashSet<String>) Declaration public string Markup(string src, string path, HashSet<string> dependency) Parameters Type Name Description String src String path HashSet < String > dependency Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockRule.html",
    "title": "Class DfmYamlHeaderBlockRule | DocFX website",
    "keywords": "Class DfmYamlHeaderBlockRule Inheritance Object DfmYamlHeaderBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmYamlHeaderBlockRule : IMarkdownRule Fields YamlHeaderRegex Declaration public static readonly Regex YamlHeaderRegex Field Value Type Description Regex Properties Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name YamlHeader Declaration [Obsolete(\"Please use YamlHeaderMatcher.\")] public virtual Regex YamlHeader { get; } Property Value Type Description Regex YamlHeaderMatcher Declaration public virtual Matcher YamlHeaderMatcher { get; } Property Value Type Description Matcher Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockToken.html",
    "title": "Class DfmYamlHeaderBlockToken | DocFX website",
    "keywords": "Class DfmYamlHeaderBlockToken Inheritance Object DfmYamlHeaderBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmYamlHeaderBlockToken : IMarkdownToken Constructors DfmYamlHeaderBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public DfmYamlHeaderBlockToken(IMarkdownRule rule, IMarkdownContext context, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String content SourceInfo sourceInfo Properties Content Declaration public string Content { get; } Property Value Type Description String Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DocfxFlavoredMarked.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DocfxFlavoredMarked.html",
    "title": "Class DocfxFlavoredMarked | DocFX website",
    "keywords": "Class DocfxFlavoredMarked Inheritance Object DocfxFlavoredMarked Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DocfxFlavoredMarked Methods CreateBuilder(String) Declaration public static DfmEngineBuilder CreateBuilder(string baseDir) Parameters Type Name Description String baseDir Returns Type Description DfmEngineBuilder CreateBuilder(String, String) Declaration public static DfmEngineBuilder CreateBuilder(string baseDir, string templateDir) Parameters Type Name Description String baseDir String templateDir Returns Type Description DfmEngineBuilder CreateBuilder(String, String, Options) Declaration public static DfmEngineBuilder CreateBuilder(string baseDir, string templateDir, Options options) Parameters Type Name Description String baseDir String templateDir Options options Returns Type Description DfmEngineBuilder CreateBuilder(String, String, Options, IReadOnlyList<String>) Declaration public static DfmEngineBuilder CreateBuilder(string baseDir, string templateDir, Options options, IReadOnlyList<string> fallbackFolders) Parameters Type Name Description String baseDir String templateDir Options options IReadOnlyList < String > fallbackFolders Returns Type Description DfmEngineBuilder CreateDefaultOptions() Declaration public static Options CreateDefaultOptions() Returns Type Description Options Markup(String, String, Options, String, String, ImmutableDictionary<String, String>, HashSet<String>) Declaration public static string Markup(string baseDir, string templateDir, Options options, string src, string path = null, ImmutableDictionary<string, string> tokens = null, HashSet<string> dependency = null) Parameters Type Name Description String baseDir String templateDir Options options String src String path System.Collections.Immutable.ImmutableDictionary < String , String > tokens HashSet < String > dependency Returns Type Description String Markup(String, String, IReadOnlyList<String>, String, ImmutableDictionary<String, String>, HashSet<String>) Declaration public static string Markup(string baseDir, string src, IReadOnlyList<string> fallbackFolders, string path = null, ImmutableDictionary<string, string> tokens = null, HashSet<string> dependency = null) Parameters Type Name Description String baseDir String src IReadOnlyList < String > fallbackFolders String path System.Collections.Immutable.ImmutableDictionary < String , String > tokens HashSet < String > dependency Returns Type Description String Markup(String, String, ImmutableDictionary<String, String>, HashSet<String>) Declaration public static string Markup(string src, string path = null, ImmutableDictionary<string, string> tokens = null, HashSet<string> dependency = null) Parameters Type Name Description String src String path System.Collections.Immutable.ImmutableDictionary < String , String > tokens HashSet < String > dependency Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.FileCacheLite.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.FileCacheLite.html",
    "title": "Class FileCacheLite | DocFX website",
    "keywords": "Class FileCacheLite Inheritance Object FileCacheLite Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class FileCacheLite : IDisposable Constructors FileCacheLite(IEqualityComparer<String>) Declaration public FileCacheLite(IEqualityComparer<string> keyComparer) Parameters Type Name Description IEqualityComparer < String > keyComparer Fields Default Declaration public static readonly FileCacheLite Default Field Value Type Description FileCacheLite Methods Add(String, String) Declaration public void Add(string key, string value) Parameters Type Name Description String key String value Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Get(String) Declaration public string Get(string key) Parameters Type Name Description String key Returns Type Description String Remove(String) Declaration public bool Remove(string key) Parameters Type Name Description String key Returns Type Description Boolean TryGet(String, out String) Declaration public bool TryGet(string key, out string value) Parameters Type Name Description String key String value Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.DefaultFileAbstractLayer.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.DefaultFileAbstractLayer.html",
    "title": "Class DefaultFileAbstractLayer | DocFX website",
    "keywords": "Class DefaultFileAbstractLayer Inheritance Object DefaultFileAbstractLayer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class DefaultFileAbstractLayer : IFileAbstractLayer Properties CanRead Declaration public bool CanRead { get; } Property Value Type Description Boolean Implements IFileAbstractLayer.CanRead CanWrite Declaration public bool CanWrite { get; } Property Value Type Description Boolean Implements IFileAbstractLayer.CanWrite Methods Copy(String, String) Declaration public void Copy(string sourceFileName, string destFileName) Parameters Type Name Description String sourceFileName String destFileName Implements IFileAbstractLayer.Copy(String, String) Create(String) Declaration public Stream Create(string file) Parameters Type Name Description String file Returns Type Description Stream Implements IFileAbstractLayer.Create(String) Exists(String) Declaration public bool Exists(string file) Parameters Type Name Description String file Returns Type Description Boolean Implements IFileAbstractLayer.Exists(String) GetAllInputFiles() Declaration public IEnumerable<string> GetAllInputFiles() Returns Type Description IEnumerable < String > Implements IFileAbstractLayer.GetAllInputFiles() GetOutputPhysicalPath(String) Declaration public string GetOutputPhysicalPath(string file) Parameters Type Name Description String file Returns Type Description String GetPhysicalPath(String) Declaration public string GetPhysicalPath(string file) Parameters Type Name Description String file Returns Type Description String Implements IFileAbstractLayer.GetPhysicalPath(String) GetProperties(String) Declaration public ImmutableDictionary<string, string> GetProperties(string file) Parameters Type Name Description String file Returns Type Description System.Collections.Immutable.ImmutableDictionary < String , String > Implements IFileAbstractLayer.GetProperties(String) OpenRead(String) Declaration public Stream OpenRead(string file) Parameters Type Name Description String file Returns Type Description Stream Implements IFileAbstractLayer.OpenRead(String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) FileAbstractLayerExtensions.OpenReadText(IFileAbstractLayer, String) FileAbstractLayerExtensions.ReadAllText(IFileAbstractLayer, String) FileAbstractLayerExtensions.ReadAllLines(IFileAbstractLayer, String) FileAbstractLayerExtensions.CreateText(IFileAbstractLayer, String) FileAbstractLayerExtensions.WriteAllText(IFileAbstractLayer, String, String) FileAbstractLayerExtensions.HasProperty(IFileAbstractLayer, String, String) FileAbstractLayerExtensions.GetProperty(IFileAbstractLayer, String, String) FileAbstractLayerExtensions.GetAllPhysicalPaths(IFileAbstractLayer)"
  },
  "api/Microsoft.DocAsCode.Plugins.DependencyItemSourceType.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.DependencyItemSourceType.html",
    "title": "Class DependencyItemSourceType | DocFX website",
    "keywords": "Class DependencyItemSourceType Inheritance Object DependencyItemSourceType Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public static class DependencyItemSourceType Fields File Declaration public const string File = \"file\" Field Value Type Description String Uid Declaration public const string Uid = \"uid\" Field Value Type Description String"
  },
  "api/Microsoft.DocAsCode.Plugins.DependencyTransitivity.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.DependencyTransitivity.html",
    "title": "Enum DependencyTransitivity | DocFX website",
    "keywords": "Enum DependencyTransitivity Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public enum DependencyTransitivity Fields Name Description All None SameType Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.TreeItemRestructure.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.TreeItemRestructure.html",
    "title": "Class TreeItemRestructure | DocFX website",
    "keywords": "Class TreeItemRestructure Inheritance Object TreeItemRestructure Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class TreeItemRestructure Properties ActionType Declaration public TreeItemActionType ActionType { get; set; } Property Value Type Description TreeItemActionType Key Declaration public string Key { get; set; } Property Value Type Description String RestructuredItems Declaration public IImmutableList<TreeItem> RestructuredItems { get; set; } Property Value Type Description System.Collections.Immutable.IImmutableList < TreeItem > SourceFiles Specifies which files trigger the restructure Declaration public IImmutableList<FileAndType> SourceFiles { get; set; } Property Value Type Description System.Collections.Immutable.IImmutableList < FileAndType > TypeOfKey Declaration public TreeItemKeyType TypeOfKey { get; set; } Property Value Type Description TreeItemKeyType Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.TreeNavigator.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.TreeNavigator.html",
    "title": "Class TreeNavigator | DocFX website",
    "keywords": "Class TreeNavigator Inheritance Object TreeNavigator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class TreeNavigator Constructors TreeNavigator(TreeItem) Declaration public TreeNavigator(TreeItem tree) Parameters Type Name Description TreeItem tree Properties Current Declaration public TreeItem Current { get; } Property Value Type Description TreeItem Methods AppendChild(TreeItem) Declaration public bool AppendChild(TreeItem child) Parameters Type Name Description TreeItem child Returns Type Description Boolean MoveTo(Func<TreeItem, Boolean>) Declaration public bool MoveTo(Func<TreeItem, bool> comparer) Parameters Type Name Description Func < TreeItem , Boolean > comparer Returns Type Description Boolean MoveToChild(Func<TreeItem, Boolean>) Declaration public bool MoveToChild(Func<TreeItem, bool> comparer) Parameters Type Name Description Func < TreeItem , Boolean > comparer Returns Type Description Boolean MoveToFirstChild() Declaration public bool MoveToFirstChild() Returns Type Description Boolean MoveToParent() Declaration public bool MoveToParent() Returns Type Description Boolean RemoveChild(Func<TreeItem, Boolean>) Declaration public bool RemoveChild(Func<TreeItem, bool> comparer) Parameters Type Name Description Func < TreeItem , Boolean > comparer Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.UidDefinition.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.UidDefinition.html",
    "title": "Class UidDefinition | DocFX website",
    "keywords": "Class UidDefinition Inheritance Object UidDefinition Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class UidDefinition Constructors UidDefinition(String, String, Nullable<Int32>, Nullable<Int32>) Declaration [JsonConstructor] public UidDefinition(string name, string file, int ? line = null, int ? column = null) Parameters Type Name Description String name String file Nullable < Int32 > line Nullable < Int32 > column Properties Column Declaration [JsonProperty(\"column\")] public int ? Column { get; } Property Value Type Description Nullable < Int32 > File Declaration [JsonProperty(\"file\")] public string File { get; } Property Value Type Description String Line Declaration [JsonProperty(\"line\")] public int ? Line { get; } Property Value Type Description Nullable < Int32 > Name Declaration [JsonProperty(\"name\")] public string Name { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.VersionInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.VersionInfo.html",
    "title": "Class VersionInfo | DocFX website",
    "keywords": "Class VersionInfo Inheritance Object VersionInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class VersionInfo Properties VersionFolder Declaration [JsonProperty(\"version_folder\")] public string VersionFolder { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.XRefSpec.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.XRefSpec.html",
    "title": "Class XRefSpec | DocFX website",
    "keywords": "Class XRefSpec Inheritance Object XRefSpec Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public sealed class XRefSpec : IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Constructors XRefSpec() Declaration public XRefSpec() XRefSpec(XRefSpec) Declaration public XRefSpec(XRefSpec spec) Parameters Type Name Description XRefSpec spec XRefSpec(IDictionary<String, String>) Declaration public XRefSpec(IDictionary<string, string> dictionary) Parameters Type Name Description IDictionary < String , String > dictionary Fields CommentIdKey Declaration public const string CommentIdKey = \"commentId\" Field Value Type Description String HrefKey Declaration public const string HrefKey = \"href\" Field Value Type Description String NameKey Declaration public const string NameKey = \"name\" Field Value Type Description String UidKey Declaration public const string UidKey = \"uid\" Field Value Type Description String Properties CommentId Declaration public string CommentId { get; set; } Property Value Type Description String Count Declaration public int Count { get; } Property Value Type Description Int32 Implements ICollection<T>.Count Href Declaration public string Href { get; set; } Property Value Type Description String IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Implements ICollection<T>.IsReadOnly Item[String] Declaration public string this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description String Implements IDictionary<TKey, TValue>.Item[TKey] Keys Declaration public ICollection<string> Keys { get; } Property Value Type Description ICollection < String > Implements IDictionary<TKey, TValue>.Keys Name Declaration public string Name { get; set; } Property Value Type Description String Uid Declaration public string Uid { get; set; } Property Value Type Description String Values Declaration public ICollection<string> Values { get; } Property Value Type Description ICollection < String > Implements IDictionary<TKey, TValue>.Values Methods Add(String, String) Declaration public void Add(string key, string value) Parameters Type Name Description String key String value Implements IDictionary<TKey, TValue>.Add(TKey, TValue) Clear() Declaration public void Clear() Implements ICollection<T>.Clear() ContainsKey(String) Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean Implements IDictionary<TKey, TValue>.ContainsKey(TKey) GetEnumerator() Declaration public IEnumerator<KeyValuePair<string, string>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < String , String >> Implements IEnumerable<T>.GetEnumerator() Merge(XRefSpec, XRefSpec) Merge two xref spec (right overwrite left). Declaration public static XRefSpec Merge(XRefSpec left, XRefSpec right) Parameters Type Name Description XRefSpec left XRefSpec right Returns Type Description XRefSpec Remove(String) Declaration public bool Remove(string key) Parameters Type Name Description String key Returns Type Description Boolean Implements IDictionary<TKey, TValue>.Remove(TKey) ToReadOnly() Declaration public XRefSpec ToReadOnly() Returns Type Description XRefSpec TryGetValue(String, out String) Declaration public bool TryGetValue(string key, out string value) Parameters Type Name Description String key String value Returns Type Description Boolean Implements IDictionary<TKey, TValue>.TryGetValue(TKey, TValue) Operators Addition(XRefSpec, XRefSpec) Declaration public static XRefSpec operator +(XRefSpec left, XRefSpec right) Parameters Type Name Description XRefSpec left XRefSpec right Returns Type Description XRefSpec Explicit Interface Implementations ICollection<KeyValuePair<String, String>>.Add(KeyValuePair<String, String>) Declaration void ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string> item) Parameters Type Name Description KeyValuePair < String , String > item Implements ICollection<T>.Add(T) ICollection<KeyValuePair<String, String>>.Contains(KeyValuePair<String, String>) Declaration bool ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string> item) Parameters Type Name Description KeyValuePair < String , String > item Returns Type Description Boolean Implements ICollection<T>.Contains(T) ICollection<KeyValuePair<String, String>>.CopyTo(KeyValuePair<String, String>[], Int32) Declaration void ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair < String , String >[] array Int32 arrayIndex Implements ICollection<T>.CopyTo(T[], Int32) ICollection<KeyValuePair<String, String>>.Remove(KeyValuePair<String, String>) Declaration bool ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string> item) Parameters Type Name Description KeyValuePair < String , String > item Returns Type Description Boolean Implements ICollection<T>.Remove(T) IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements IEnumerable.GetEnumerator() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Plugins.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.html",
    "title": "Namespace Microsoft.DocAsCode.Plugins | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Plugins Classes DefaultFileAbstractLayer DependencyItemSourceType DependencyType DependencyTypeName DocumentException DocumentExceptionExtensions EnvironmentContext FileAbstractLayerExtensions FileAndType FileIncrementalInfo FileModel HomepageInfo IncrementalInfo IncrementalStatus Manifest ManifestItem ManifestItemCollection MarkdownServiceParameters MarkupResult ModelWithCache ObservableDictionary<TKey, TValue> OutputFileCollection OutputFileInfo PropertyChangedEventArgs<T> RootedFileAbstractLayer SaveResult SourceFileInfo SubCommandRunningContext TocInfo TreeItem TreeItemRestructure TreeNavigator UidDefinition VersionInfo XRefSpec Structs LinkSourceInfo Interfaces ICanTraceContextInfoBuildStep ICustomHrefGenerator ICustomMarkdownTagValidator Contract interface for custom validate tag in markdown IDocumentBuildContext IDocumentBuildStep IDocumentProcessor IFileAbstractLayer IFileLinkInfo IHasIncrementalContext Declare some object has incremental build context. IHostService IInputMetadataValidator IMarkdownService IMarkdownServiceProvider IPostProcessor IPostProcessorHost ISubCommand ISubCommandController ISubCommandCreator ISupportIncrementalBuildStep Declare a build step can support incremental build. ISupportIncrementalDocumentProcessor Declare a document processor can support incremental build. ISupportIncrementalPostProcessor Enums BuildPhase DependencyTransitivity DocumentType IncrementalPhase ProcessingPriority SubCommandParseOption TreeItemActionType TreeItemKeyType"
  },
  "api/Microsoft.DocAsCode.SubCommands.CommandOptionAttribute.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.CommandOptionAttribute.html",
    "title": "Class CommandOptionAttribute | DocFX website",
    "keywords": "Class CommandOptionAttribute Inheritance Object Attribute System.Composition.ExportAttribute CommandOptionAttribute Inherited Members System.Composition.ExportAttribute.ContractName System.Composition.ExportAttribute.ContractType Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.SubCommands Assembly :docfx.dll Syntax [MetadataAttribute] [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class CommandOptionAttribute : ExportAttribute, _Attribute Constructors CommandOptionAttribute(String, String) Declaration public CommandOptionAttribute(string name, string helpText) Parameters Type Name Description String name String helpText Properties HelpText Declaration public string HelpText { get; } Property Value Type Description String Name Declaration public string Name { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.SubCommands.MetadataMergeParameters.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.MetadataMergeParameters.html",
    "title": "Class MetadataMergeParameters | DocFX website",
    "keywords": "Class MetadataMergeParameters Inheritance Object MetadataMergeParameters Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.SubCommands Assembly :docfx.dll Syntax public class MetadataMergeParameters Properties FileMetadata Declaration public FileMetadata FileMetadata { get; set; } Property Value Type Description FileMetadata Files Declaration public FileCollection Files { get; set; } Property Value Type Description FileCollection Metadata Declaration public ImmutableDictionary<string, object> Metadata { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > OutputBaseDir Declaration public string OutputBaseDir { get; set; } Property Value Type Description String TocMetadata Declaration public ImmutableList<string> TocMetadata { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableList < String > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockToken.html",
    "title": "Class AzureBlockquoteBlockToken | DocFX website",
    "keywords": "Class AzureBlockquoteBlockToken Inheritance Object MarkdownBlockquoteBlockToken AzureBlockquoteBlockToken Inherited Members MarkdownBlockquoteBlockToken.Rule MarkdownBlockquoteBlockToken.Context MarkdownBlockquoteBlockToken.Tokens MarkdownBlockquoteBlockToken.SourceInfo MarkdownBlockquoteBlockToken.Rewrite(IMarkdownRewriteEngine) MarkdownBlockquoteBlockToken.GetChildren() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureBlockquoteBlockToken : MarkdownBlockquoteBlockToken, IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownBlockquoteBlockToken> Constructors AzureBlockquoteBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public AzureBlockquoteBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> tokens, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens SourceInfo sourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarkdownRenderer.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarkdownRenderer.html",
    "title": "Class AzureMarkdownRenderer | DocFX website",
    "keywords": "Class AzureMarkdownRenderer Inheritance Object MarkdownRenderer DfmMarkdownRenderer AzureMarkdownRenderer Inherited Members DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmSectionBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownListItemBlockToken, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMarkdownRenderer : DfmMarkdownRenderer Methods Render(IMarkdownRenderer, AzureIncludeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, AzureIncludeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render AzureIncludeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, AzureIncludeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, AzureIncludeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render AzureIncludeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer Render(IMarkdownRenderer, AzureVideoBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, AzureVideoBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render AzureVideoBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockRule.html",
    "title": "Class AzureMigrationIncludeBlockRule | DocFX website",
    "keywords": "Class AzureMigrationIncludeBlockRule Inheritance Object AzureMigrationIncludeBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeBlockRule : IMarkdownRule Properties AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockRule.html",
    "title": "Class AzureNoteBlockRule | DocFX website",
    "keywords": "Class AzureNoteBlockRule Inheritance Object AzureNoteBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureNoteBlockRule : IMarkdownRule Properties AzureNoteRegex Declaration public virtual Regex AzureNoteRegex { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.html",
    "title": "Namespace Microsoft.DocAsCode.AzureMarkdownRewriters | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.AzureMarkdownRewriters Classes AzureBlockquoteBlockRule AzureBlockquoteBlockToken AzureEngineBuilder AzureFileInfo AzureHtmlMetadataBlockRule AzureHtmlMetadataBlockToken AzureIncludeBasicToken AzureIncludeBlockRule AzureIncludeBlockToken AzureIncludeInlineRule AzureIncludeInlineToken AzureMarkdownRenderer AzureMarked AzureMigrationEngineBuilder AzureMigrationHtmlMetadataBlockRule AzureMigrationIncludeBasicToken AzureMigrationIncludeBlockRule AzureMigrationIncludeBlockToken AzureMigrationIncludeInlineRule AzureMigrationIncludeInlineToken AzureMigrationMarked AzureMigrationVideoBlockRule AzureNoteBlockRule AzureNoteBlockToken AzureSelectorBlockRule AzureSelectorBlockToken AzureVideoBlockRule AzureVideoBlockToken AzureVideoInfo"
  },
  "api/Microsoft.DocAsCode.Build.Common.FileModelPropertySerialization.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.FileModelPropertySerialization.html",
    "title": "Class FileModelPropertySerialization | DocFX website",
    "keywords": "Class FileModelPropertySerialization Inheritance Object FileModelPropertySerialization Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public static class FileModelPropertySerialization Methods Deserialize(Stream, IFormatter, Func<Stream, Object>, Func<Stream, IDictionary<String, Object>>, Action<Stream, FileModel>) Declaration public static FileModel Deserialize(Stream stream, IFormatter formatter, Func<Stream, object> contentDeserializer, Func<Stream, IDictionary<string, object>> propertyDeserializer, Action<Stream, FileModel> otherDeserializer) Parameters Type Name Description Stream stream IFormatter formatter Func < Stream , Object > contentDeserializer Func < Stream , IDictionary < String , Object >> propertyDeserializer Action < Stream , FileModel > otherDeserializer Returns Type Description FileModel Serialize(FileModel, Stream, Action<Object, Stream>, Action<IDictionary<String, Object>, Stream>, Action<FileModel, Stream>) Declaration public static void Serialize(FileModel model, Stream stream, Action<object, Stream> contentSerializer, Action<IDictionary<string, object>, Stream> propertySerializer, Action<FileModel, Stream> otherSerializer) Parameters Type Name Description FileModel model Stream stream Action < Object , Stream > contentSerializer Action < IDictionary < String , Object >, Stream > propertySerializer Action < FileModel , Stream > otherSerializer"
  },
  "api/Microsoft.DocAsCode.Build.Common.IModelAttributeHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.IModelAttributeHandler.html",
    "title": "Interface IModelAttributeHandler | DocFX website",
    "keywords": "Interface IModelAttributeHandler Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public interface IModelAttributeHandler Methods Handle(Object, HandleModelAttributesContext) Declaration object Handle(object obj, HandleModelAttributesContext context) Parameters Type Name Description Object obj HandleModelAttributesContext context Returns Type Description Object Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.UniqueIdentityReferenceHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.UniqueIdentityReferenceHandler.html",
    "title": "Class UniqueIdentityReferenceHandler | DocFX website",
    "keywords": "Class UniqueIdentityReferenceHandler Inheritance Object UniqueIdentityReferenceHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class UniqueIdentityReferenceHandler : IModelAttributeHandler Methods Handle(Object, HandleModelAttributesContext) Declaration public object Handle(object obj, HandleModelAttributesContext context) Parameters Type Name Description Object obj HandleModelAttributesContext context Returns Type Description Object Implements IModelAttributeHandler.Handle(Object, HandleModelAttributesContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateSettings.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateSettings.html",
    "title": "Class ApplyTemplateSettings | DocFX website",
    "keywords": "Class ApplyTemplateSettings Inheritance Object ApplyTemplateSettings Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class ApplyTemplateSettings Constructors ApplyTemplateSettings(String, String) Declaration public ApplyTemplateSettings(string inputFolder, string outputFolder) Parameters Type Name Description String inputFolder String outputFolder ApplyTemplateSettings(String, String, String, Boolean) Declaration public ApplyTemplateSettings(string inputFolder, string outputFolder, string debugOutputFolder, bool debugMode) Parameters Type Name Description String inputFolder String outputFolder String debugOutputFolder Boolean debugMode Fields DefaultRawModelExportSettings Declaration public static readonly ExportSettings DefaultRawModelExportSettings Field Value Type Description ExportSettings DefaultViewModelExportSettings Declaration public static readonly ExportSettings DefaultViewModelExportSettings Field Value Type Description ExportSettings Properties DebugMode Declaration public bool DebugMode { get; } Property Value Type Description Boolean HrefGenerator Declaration public ICustomHrefGenerator HrefGenerator { get; set; } Property Value Type Description ICustomHrefGenerator InputFolder Declaration public string InputFolder { get; } Property Value Type Description String Options Declaration public ApplyTemplateOptions Options { get; } Property Value Type Description ApplyTemplateOptions OutputFolder Declaration public string OutputFolder { get; } Property Value Type Description String RawModelExportSettings Declaration public ExportSettings RawModelExportSettings { get; set; } Property Value Type Description ExportSettings RawModelExportSettingsForDebug Declaration public ExportSettings RawModelExportSettingsForDebug { get; set; } Property Value Type Description ExportSettings TransformDocument Declaration public bool TransformDocument { get; set; } Property Value Type Description Boolean ViewModelExportSettings Declaration public ExportSettings ViewModelExportSettings { get; set; } Property Value Type Description ExportSettings ViewModelExportSettingsForDebug Declaration public ExportSettings ViewModelExportSettingsForDebug { get; set; } Property Value Type Description ExportSettings Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ArchiveResourceCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ArchiveResourceCollection.html",
    "title": "Class ArchiveResourceCollection | DocFX website",
    "keywords": "Class ArchiveResourceCollection Inheritance Object ResourceCollection ArchiveResourceCollection Inherited Members ResourceCollection.GetResources(String) ResourceCollection.GetResourceStreams(String) ResourceCollection.Dispose() ResourceCollection.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ArchiveResourceCollection : ResourceCollection, IDisposable Constructors ArchiveResourceCollection(Stream, String) Declaration public ArchiveResourceCollection(Stream stream, string name) Parameters Type Name Description Stream stream String name Properties IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceCollection.IsEmpty Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceCollection.Name Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceCollection.Names Methods Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides ResourceCollection.Dispose(Boolean) GetResource(String) Declaration public override string GetResource(string name) Parameters Type Name Description String name Returns Type Description String Overrides ResourceCollection.GetResource(String) GetResourceStream(String) TODO: This is not thread safe, only expose GetResource in interface Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceCollection.GetResourceStream(String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.FileMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.FileMetadata.html",
    "title": "Class FileMetadata | DocFX website",
    "keywords": "Class FileMetadata Inheritance Object Dictionary < String , System.Collections.Immutable.ImmutableArray < FileMetadataItem >> FileMetadata Inherited Members Dictionary<String, ImmutableArray<FileMetadataItem>>.Add(String, ImmutableArray<FileMetadataItem>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>) Dictionary<String, ImmutableArray<FileMetadataItem>>.Clear() Dictionary<String, ImmutableArray<FileMetadataItem>>.ContainsKey(String) Dictionary<String, ImmutableArray<FileMetadataItem>>.ContainsValue(ImmutableArray<FileMetadataItem>) Dictionary<String, ImmutableArray<FileMetadataItem>>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.GetEnumerator() Dictionary<String, ImmutableArray<FileMetadataItem>>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, ImmutableArray<FileMetadataItem>>.OnDeserialization(Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.Remove(String) Dictionary<String, ImmutableArray<FileMetadataItem>>.TryGetValue(String, ImmutableArray<FileMetadataItem>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>[], System.Int32) Dictionary<String, ImmutableArray<FileMetadataItem>>.ICollection.CopyTo(Array, Int32) Dictionary<String, ImmutableArray<FileMetadataItem>>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Add(Object, Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Contains(Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.GetEnumerator() Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Remove(Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.Comparer Dictionary<String, ImmutableArray<FileMetadataItem>>.Count Dictionary<String, ImmutableArray<FileMetadataItem>>.Keys System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Keys System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Keys Dictionary<String, ImmutableArray<FileMetadataItem>>.Values System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Values System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Values Dictionary<String, ImmutableArray<FileMetadataItem>>.Item[String] System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.IsReadOnly Dictionary<String, ImmutableArray<FileMetadataItem>>.ICollection.IsSynchronized Dictionary<String, ImmutableArray<FileMetadataItem>>.ICollection.SyncRoot Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.IsFixedSize Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.IsReadOnly Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Keys Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Values Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class FileMetadata : Dictionary<string, ImmutableArray<FileMetadataItem>>, IDictionary<string, ImmutableArray<FileMetadataItem>>, ICollection<KeyValuePair<string, ImmutableArray<FileMetadataItem>>>, IDictionary, ICollection, IReadOnlyDictionary<string, ImmutableArray<FileMetadataItem>>, IReadOnlyCollection<KeyValuePair<string, ImmutableArray<FileMetadataItem>>>, IEnumerable<KeyValuePair<string, ImmutableArray<FileMetadataItem>>>, IEnumerable, ISerializable, IDeserializationCallback Constructors FileMetadata(String) Declaration public FileMetadata(string baseDir) Parameters Type Name Description String baseDir FileMetadata(String, IDictionary<String, ImmutableArray<FileMetadataItem>>) Declaration public FileMetadata(string baseDir, IDictionary<string, ImmutableArray<FileMetadataItem>> dictionary) Parameters Type Name Description String baseDir IDictionary < String , System.Collections.Immutable.ImmutableArray < FileMetadataItem >> dictionary Properties BaseDir Declaration public string BaseDir { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.FileMetadataItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.FileMetadataItem.html",
    "title": "Class FileMetadataItem | DocFX website",
    "keywords": "Class FileMetadataItem Inheritance Object FileMetadataItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class FileMetadataItem Constructors FileMetadataItem(GlobMatcher, String, Object) Declaration public FileMetadataItem(GlobMatcher glob, string key, object value) Parameters Type Name Description GlobMatcher glob String key Object value Properties Glob Declaration public GlobMatcher Glob { get; } Property Value Type Description GlobMatcher Key Declaration public string Key { get; } Property Value Type Description String Value Declaration public object Value { get; } Property Value Type Description Object Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeList.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeList.html",
    "title": "Class ChangeList | DocFX website",
    "keywords": "Class ChangeList Inheritance Object ChangeList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ChangeList : IEnumerable<ChangeItem>, IEnumerable Properties From Declaration public string From { get; set; } Property Value Type Description String To Declaration public string To { get; set; } Property Value Type Description String Methods Add(String, ChangeKind) Declaration public void Add(string filePath, ChangeKind kind) Parameters Type Name Description String filePath ChangeKind kind GetCreatedFiles() Declaration public IEnumerable<string> GetCreatedFiles() Returns Type Description IEnumerable < String > GetDeletedFiles() Declaration public IEnumerable<string> GetDeletedFiles() Returns Type Description IEnumerable < String > GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator Implements IEnumerable.GetEnumerator() GetUpdatedFiles() Declaration public IEnumerable<string> GetUpdatedFiles() Returns Type Description IEnumerable < String > Parse(String, String) Declaration public static ChangeList Parse(string tsvFile, string baseDir) Parameters Type Name Description String tsvFile String baseDir Returns Type Description ChangeList Explicit Interface Implementations IEnumerable<ChangeItem>.GetEnumerator() Declaration IEnumerator<ChangeItem> IEnumerable<ChangeItem>.GetEnumerator() Returns Type Description IEnumerator < ChangeItem > Implements IEnumerable<T>.GetEnumerator() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyGraph.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyGraph.html",
    "title": "Class DependencyGraph | DocFX website",
    "keywords": "Class DependencyGraph Inheritance Object DependencyGraph Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class DependencyGraph Properties DependencyTypes Declaration public IReadOnlyDictionary<string, DependencyType> DependencyTypes { get; } Property Value Type Description IReadOnlyDictionary < String , DependencyType > FromNodes Declaration public IEnumerable<string> FromNodes { get; } Property Value Type Description IEnumerable < String > ReferenceReportedBys Declaration public IEnumerable<string> ReferenceReportedBys { get; } Property Value Type Description IEnumerable < String > ReportedBys Declaration public IEnumerable<string> ReportedBys { get; } Property Value Type Description IEnumerable < String > ToNodes Declaration public IEnumerable<string> ToNodes { get; } Property Value Type Description IEnumerable < String > Methods GetAllDependencyFrom(String) Declaration public HashSet<DependencyItem> GetAllDependencyFrom(string from) Parameters Type Name Description String from Returns Type Description HashSet < DependencyItem > GetAllDependencyTo(String) Declaration public HashSet<DependencyItem> GetAllDependencyTo(string to) Parameters Type Name Description String to Returns Type Description HashSet < DependencyItem > GetAllDependentNodes() Declaration public HashSet<string> GetAllDependentNodes() Returns Type Description HashSet < String > GetAllIncludeDependencyFrom(String) Declaration public HashSet<string> GetAllIncludeDependencyFrom(string from) Parameters Type Name Description String from Returns Type Description HashSet < String > GetDependencyFrom(String) Declaration public HashSet<DependencyItem> GetDependencyFrom(string from) Parameters Type Name Description String from Returns Type Description HashSet < DependencyItem > GetDependencyReportedBy(String) Declaration public HashSet<DependencyItem> GetDependencyReportedBy(string reportedBy) Parameters Type Name Description String reportedBy Returns Type Description HashSet < DependencyItem > GetDependencyTo(String) Declaration public HashSet<DependencyItem> GetDependencyTo(string to) Parameters Type Name Description String to Returns Type Description HashSet < DependencyItem > GetReferenceReportedBy(String) Declaration public HashSet<ReferenceItem> GetReferenceReportedBy(string reportedBy) Parameters Type Name Description String reportedBy Returns Type Description HashSet < ReferenceItem > HasDependencyFrom(String) Declaration public bool HasDependencyFrom(string from) Parameters Type Name Description String from Returns Type Description Boolean HasDependencyReportedBy(String) Declaration public bool HasDependencyReportedBy(string reportedBy) Parameters Type Name Description String reportedBy Returns Type Description Boolean Load(TextReader) Declaration public static DependencyGraph Load(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description DependencyGraph RegisterDependencyType(DependencyType) Declaration public void RegisterDependencyType(DependencyType dt) Parameters Type Name Description DependencyType dt RegisterDependencyType(IEnumerable<DependencyType>) Declaration public void RegisterDependencyType(IEnumerable<DependencyType> dts) Parameters Type Name Description IEnumerable < DependencyType > dts ReportDependency(DependencyItem) Declaration public void ReportDependency(DependencyItem dependency) Parameters Type Name Description DependencyItem dependency ReportDependency(IEnumerable<DependencyItem>) Declaration public void ReportDependency(IEnumerable<DependencyItem> dependencies) Parameters Type Name Description IEnumerable < DependencyItem > dependencies ReportReference(ReferenceItem) Declaration public void ReportReference(ReferenceItem reference) Parameters Type Name Description ReferenceItem reference ReportReference(IEnumerable<ReferenceItem>) Declaration public void ReportReference(IEnumerable<ReferenceItem> references) Parameters Type Name Description IEnumerable < ReferenceItem > references ResolveReference() Declaration public void ResolveReference() Save(TextWriter) Declaration public void Save(TextWriter writer) Parameters Type Name Description TextWriter writer Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessInfo.html",
    "title": "Class PostProcessInfo | DocFX website",
    "keywords": "Class PostProcessInfo Inheritance Object PostProcessInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class PostProcessInfo Fields FileName Declaration public const string FileName = \"postprocess.info\" Field Value Type Description String Properties ManifestItems Deserialized manifest items. Declaration [JsonIgnore] public List<ManifestItem> ManifestItems { get; set; } Property Value Type Description List < ManifestItem > ManifestItemsFile The file link for the manifest items file. Declaration public string ManifestItemsFile { get; set; } Property Value Type Description String MessageInfo Deserialized log message information. Declaration [JsonIgnore] public BuildMessageInfo MessageInfo { get; } Property Value Type Description BuildMessageInfo MessageInfoFile The file link for the log message file. Declaration public string MessageInfoFile { get; set; } Property Value Type Description String PostProcessorInfos The post processor information. Declaration public List<PostProcessorInfo> PostProcessorInfos { get; set; } Property Value Type Description List < PostProcessorInfo > PostProcessOutputs Deserialized post process outputs. Declaration [JsonIgnore] public PostProcessOutputs PostProcessOutputs { get; } Property Value Type Description PostProcessOutputs PostProcessOutputsFile The file link for post process outputs (type is PostProcessOutputs ). Declaration public string PostProcessOutputsFile { get; set; } Property Value Type Description String Methods SaveManifest(String) Declaration public void SaveManifest(string baseDir) Parameters Type Name Description String baseDir Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessorInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessorInfo.html",
    "title": "Class PostProcessorInfo | DocFX website",
    "keywords": "Class PostProcessorInfo Inheritance Object ProcessorInfoBase PostProcessorInfo Inherited Members ProcessorInfoBase.Name ProcessorInfoBase.IncrementalContextHash Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class PostProcessorInfo : ProcessorInfoBase Properties ContextInfoFile Declaration public string ContextInfoFile { get; set; } Property Value Type Description String Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ResourceFileExceedsMaxDepthException.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ResourceFileExceedsMaxDepthException.html",
    "title": "Class ResourceFileExceedsMaxDepthException | DocFX website",
    "keywords": "Class ResourceFileExceedsMaxDepthException Inheritance Object Exception DocfxException ResourceFileExceedsMaxDepthException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class ResourceFileExceedsMaxDepthException : DocfxException, ISerializable, _Exception Constructors ResourceFileExceedsMaxDepthException(Int32, String, String) Declaration public ResourceFileExceedsMaxDepthException(int maxDepth, string fileName, string resourceName) Parameters Type Name Description Int32 maxDepth String fileName String resourceName ResourceFileExceedsMaxDepthException(SerializationInfo, StreamingContext) Declaration protected ResourceFileExceedsMaxDepthException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Properties DirectoryName Declaration public string DirectoryName { get; } Property Value Type Description String MaxDepth Declaration public int MaxDepth { get; } Property Value Type Description Int32 ResourceName Declaration public string ResourceName { get; } Property Value Type Description String Methods GetObjectData(SerializationInfo, StreamingContext) Declaration [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)] public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Overrides Exception.GetObjectData(SerializationInfo, StreamingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ResourceFinder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ResourceFinder.html",
    "title": "Class ResourceFinder | DocFX website",
    "keywords": "Class ResourceFinder Inheritance Object ResourceFinder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class ResourceFinder Constructors ResourceFinder(Assembly, String, String) Declaration public ResourceFinder(Assembly assembly, string rootNamespace, string baseDirectory = null) Parameters Type Name Description Assembly assembly String rootNamespace String baseDirectory Methods Find(String) Search in order: Inside Embedded Resources a. ZIP file with provided name Inside OverrideFolder, NOTE sub-folders are NOT included a. Folder with provided name b. ZIP file with provided name Declaration public ResourceCollection Find(string name) Parameters Type Name Description String name The resource name provided Returns Type Description ResourceCollection If found, return the resource collection; if not, return null Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateResourceInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateResourceInfo.html",
    "title": "Class TemplateResourceInfo | DocFX website",
    "keywords": "Class TemplateResourceInfo Inheritance Object TemplateResourceInfo Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class TemplateResourceInfo Constructors TemplateResourceInfo(String) Declaration public TemplateResourceInfo(string resourceKey) Parameters Type Name Description String resourceKey Properties ResourceKey Declaration public string ResourceKey { get; } Property Value Type Description String Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateType.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateType.html",
    "title": "Enum TemplateType | DocFX website",
    "keywords": "Enum TemplateType Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public enum TemplateType Fields Name Description Auxiliary Auxiliary template type means documents processed by this template will not be referenced by other documents Default Primary Primary template type means documents processed by this template will be responsible for hyperlink Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefSpecUidComparer.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefSpecUidComparer.html",
    "title": "Class XRefSpecUidComparer | DocFX website",
    "keywords": "Class XRefSpecUidComparer Inheritance Object Comparer < XRefSpec > XRefSpecUidComparer Inherited Members Comparer<XRefSpec>.Create(Comparison<XRefSpec>) Comparer<XRefSpec>.IComparer.Compare(Object, Object) Comparer<XRefSpec>.Default Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class XRefSpecUidComparer : Comparer<XRefSpec>, IComparer, IComparer<XRefSpec> Fields Instance Declaration public static readonly XRefSpecUidComparer Instance Field Value Type Description XRefSpecUidComparer Methods Compare(XRefSpec, XRefSpec) Declaration public override int Compare(XRefSpec x, XRefSpec y) Parameters Type Name Description XRefSpec x XRefSpec y Returns Type Description Int32 Overrides System.Collections.Generic.Comparer<Microsoft.DocAsCode.Plugins.XRefSpec>.Compare(Microsoft.DocAsCode.Plugins.XRefSpec, Microsoft.DocAsCode.Plugins.XRefSpec) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization.TypeInspectors | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization.TypeInspectors Classes EmitTypeInspector ExtensibleNamingConventionTypeInspector ExtensibleReadableAndWritablePropertiesTypeInspector ExtensibleTypeInspectorSkeleton ExtensibleYamlAttributesTypeInspector Applies the YamlDotNet.Serialization.YamlMemberAttribute to another YamlDotNet.Serialization.ITypeInspector . Interfaces IExtensibleTypeInspector"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockRule.html",
    "title": "Class AzureBlockquoteBlockRule | DocFX website",
    "keywords": "Class AzureBlockquoteBlockRule Inheritance Object MarkdownBlockquoteBlockRule AzureBlockquoteBlockRule Inherited Members MarkdownBlockquoteBlockRule.Blockquote MarkdownBlockquoteBlockRule.BlockquoteMatcher Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureBlockquoteBlockRule : MarkdownBlockquoteBlockRule, IMarkdownRule Fields _azureLeadingBlankRegex Declaration public static readonly Regex _azureLeadingBlankRegex Field Value Type Description Regex Properties LeadingBlockquote Declaration public override Regex LeadingBlockquote { get; } Property Value Type Description Regex Overrides MarkdownBlockquoteBlockRule.LeadingBlockquote Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownBlockquoteBlockRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides MarkdownBlockquoteBlockRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBasicToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBasicToken.html",
    "title": "Class AzureIncludeBasicToken | DocFX website",
    "keywords": "Class AzureIncludeBasicToken Inheritance Object AzureIncludeBasicToken AzureIncludeBlockToken AzureIncludeInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public abstract class AzureIncludeBasicToken : IMarkdownToken Constructors AzureIncludeBasicToken(IMarkdownRule, IMarkdownContext, String, String, String, ImmutableArray<IMarkdownToken>, String, SourceInfo) Declaration protected AzureIncludeBasicToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, ImmutableArray<IMarkdownToken> tokens, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens String raw SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Name Declaration public string Name { get; } Property Value Type Description String Raw Declaration public string Raw { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Src Declaration public string Src { get; } Property Value Type Description String Title Declaration public string Title { get; } Property Value Type Description String Tokens Declaration public ImmutableArray<IMarkdownToken> Tokens { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationMarked.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationMarked.html",
    "title": "Class AzureMigrationMarked | DocFX website",
    "keywords": "Class AzureMigrationMarked Inheritance Object AzureMigrationMarked Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationMarked Methods Markup(String, String, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureVideoInfo>) Declaration public static string Markup(string src, string path = null, IReadOnlyDictionary<string, AzureFileInfo> azureMarkdownFileInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureResourceFileInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureIncludeMarkdownFileInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureIncludeResourceFileInfoMapping = null, IReadOnlyDictionary<string, AzureVideoInfo> azureVideoInfoMapping = null) Parameters Type Name Description String src String path IReadOnlyDictionary < String , AzureFileInfo > azureMarkdownFileInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureResourceFileInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureIncludeMarkdownFileInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureIncludeResourceFileInfoMapping IReadOnlyDictionary < String , AzureVideoInfo > azureVideoInfoMapping Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoInfo.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoInfo.html",
    "title": "Class AzureVideoInfo | DocFX website",
    "keywords": "Class AzureVideoInfo Inheritance Object AzureVideoInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureVideoInfo Properties Height Indicate the video height Declaration public int Height { get; set; } Property Value Type Description Int32 Id Indicate the azure video id Declaration public string Id { get; set; } Property Value Type Description String Link Indicate the azure video link Declaration public string Link { get; set; } Property Value Type Description String Width Indicate the video width Declaration public int Width { get; set; } Property Value Type Description Int32 Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.DisposableDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.DisposableDocumentProcessor.html",
    "title": "Class DisposableDocumentProcessor | DocFX website",
    "keywords": "Class DisposableDocumentProcessor Inheritance Object DisposableDocumentProcessor ReferenceDocumentProcessorBase ConceptualDocumentProcessor ResourceDocumentProcessor TocDocumentProcessor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class DisposableDocumentProcessor : IDocumentProcessor, IDisposable Properties BuildSteps Declaration public abstract IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Implements IDocumentProcessor.BuildSteps Name Declaration public abstract string Name { get; } Property Value Type Description String Implements IDocumentProcessor.Name Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() GetProcessingPriority(FileAndType) Declaration public abstract ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Implements IDocumentProcessor.GetProcessingPriority(FileAndType) Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public abstract FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Implements IDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) Save(FileModel) Declaration public abstract SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Implements IDocumentProcessor.Save(FileModel) UpdateHref(FileModel, IDocumentBuildContext) Declaration public virtual void UpdateHref(FileModel model, IDocumentBuildContext context) Parameters Type Name Description FileModel model IDocumentBuildContext context Implements IDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.html",
    "title": "Class HandleGenericItemsHelper | DocFX website",
    "keywords": "Class HandleGenericItemsHelper Inheritance Object HandleGenericItemsHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class HandleGenericItemsHelper Methods EnumerateIDictionary(Object, Func<Object, Object>) Declaration public static bool EnumerateIDictionary(object currentObj, Func<object, object> handler) Parameters Type Name Description Object currentObj Func < Object , Object > handler Returns Type Description Boolean EnumerateIEnumerable(Object, Func<Object, Object>) Declaration public static bool EnumerateIEnumerable(object currentObj, Func<object, object> handler) Parameters Type Name Description Object currentObj Func < Object , Object > handler Returns Type Description Boolean EnumerateIReadonlyDictionary(Object, Func<Object, Object>) Declaration public static bool EnumerateIReadonlyDictionary(object currentObj, Func<object, object> handler) Parameters Type Name Description Object currentObj Func < Object , Object > handler Returns Type Description Boolean HandleIDictionary(Object, Func<Object, Object>) Declaration public static bool HandleIDictionary(object currentObj, Func<object, object> handler) Parameters Type Name Description Object currentObj Func < Object , Object > handler Returns Type Description Boolean HandleIList(Object, Func<Object, Object>) Declaration public static bool HandleIList(object currentObj, Func<object, object> handler) Parameters Type Name Description Object currentObj Func < Object , Object > handler Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.ReferenceDocumentProcessorBase.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.ReferenceDocumentProcessorBase.html",
    "title": "Class ReferenceDocumentProcessorBase | DocFX website",
    "keywords": "Class ReferenceDocumentProcessorBase Base document processor for reference. Inheritance Object DisposableDocumentProcessor ReferenceDocumentProcessorBase ManagedReferenceDocumentProcessor RestApiDocumentProcessor Inherited Members DisposableDocumentProcessor.Name DisposableDocumentProcessor.BuildSteps DisposableDocumentProcessor.GetProcessingPriority(FileAndType) DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class ReferenceDocumentProcessorBase : DisposableDocumentProcessor, IDocumentProcessor, IDisposable Properties ProcessedDocumentType Declaration protected abstract string ProcessedDocumentType { get; } Property Value Type Description String Methods Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides DisposableDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) LoadArticle(FileAndType, ImmutableDictionary<String, Object>) Declaration protected abstract FileModel LoadArticle(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel LoadOverwrite(FileAndType, ImmutableDictionary<String, Object>) Declaration protected virtual FileModel LoadOverwrite(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides DisposableDocumentProcessor.Save(FileModel) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ValidateConceptualDocumentMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ValidateConceptualDocumentMetadata.html",
    "title": "Class ValidateConceptualDocumentMetadata | DocFX website",
    "keywords": "Class ValidateConceptualDocumentMetadata Inheritance Object BaseDocumentBuildStep ValidateConceptualDocumentMetadata Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ConceptualDocuments Assembly :Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(\"ConceptualDocumentProcessor\", typeof (IDocumentBuildStep))] public class ValidateConceptualDocumentMetadata : BaseDocumentBuildStep, ISupportIncrementalBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Implements IDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Implements IDocumentBuildStep.Name Methods Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) Implements IDocumentBuildStep.Build(FileModel, IHostService) CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > Implements ISupportIncrementalBuildStep.GetDependencyTypesToRegister() GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep.GetIncrementalContextHash() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.DfmJsonTokenTreeServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DfmJsonTokenTreeServiceProvider.html",
    "title": "Class DfmJsonTokenTreeServiceProvider | DocFX website",
    "keywords": "Class DfmJsonTokenTreeServiceProvider Inheritance Object DfmJsonTokenTreeServiceProvider Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"dfmJsonTokenTree\", typeof (IMarkdownServiceProvider))] public class DfmJsonTokenTreeServiceProvider : IMarkdownServiceProvider Properties TokenTreeValidator Declaration [ImportMany] public IEnumerable<IMarkdownTokenTreeValidator> TokenTreeValidator { get; set; } Property Value Type Description IEnumerable < IMarkdownTokenTreeValidator > Methods CreateMarkdownService(MarkdownServiceParameters) Declaration public IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService Implements IMarkdownServiceProvider.CreateMarkdownService(MarkdownServiceParameters) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.DfmLegacyServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DfmLegacyServiceProvider.html",
    "title": "Class DfmLegacyServiceProvider | DocFX website",
    "keywords": "Class DfmLegacyServiceProvider Inheritance Object DfmServiceProvider DfmLegacyServiceProvider Inherited Members DfmServiceProvider.CreateMarkdownService(MarkdownServiceParameters) DfmServiceProvider.TokenTreeValidator DfmServiceProvider.DfmRendererPartProviders DfmServiceProvider.DfmEngineCustomizers Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"dfm\", typeof (IMarkdownServiceProvider))] [Export(\"dfm-2.13\", typeof (IMarkdownServiceProvider))] public class DfmLegacyServiceProvider : DfmServiceProvider, IMarkdownServiceProvider Properties LegacyMode Declaration protected override bool LegacyMode { get; } Property Value Type Description Boolean Overrides DfmServiceProvider.LegacyMode Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.HtmlPostProcessContext.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.HtmlPostProcessContext.html",
    "title": "Class HtmlPostProcessContext | DocFX website",
    "keywords": "Class HtmlPostProcessContext Inheritance Object HtmlPostProcessContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class HtmlPostProcessContext Constructors HtmlPostProcessContext(IPostProcessorHost) Declaration public HtmlPostProcessContext(IPostProcessorHost host) Parameters Type Name Description IPostProcessorHost host Properties PostProcessorHost Declaration [JsonIgnore] public IPostProcessorHost PostProcessorHost { get; } Property Value Type Description IPostProcessorHost Methods Load<T>(String, Func<Stream, T>) Declaration public T Load<T>(string contextName, Func<Stream, T> loader) Parameters Type Name Description String contextName Func < Stream , T> loader Returns Type Description T Type Parameters Name Description T Save() Declaration public void Save() Save(String, Action<Stream>) Declaration public void Save(string contextName, Action<Stream> saver) Parameters Type Name Description String contextName Action < Stream > saver Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.IHtmlDocumentHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.IHtmlDocumentHandler.html",
    "title": "Interface IHtmlDocumentHandler | DocFX website",
    "keywords": "Interface IHtmlDocumentHandler Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public interface IHtmlDocumentHandler Methods Handle(HtmlDocument, ManifestItem, String, String) Declaration void Handle(HtmlDocument document, ManifestItem manifestItem, string inputFile, string outputFile) Parameters Type Name Description HtmlAgilityPack.HtmlDocument document ManifestItem manifestItem String inputFile String outputFile LoadContext(HtmlPostProcessContext) Declaration void LoadContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context PostHandle(Manifest) Declaration Manifest PostHandle(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest PreHandle(Manifest) Declaration Manifest PreHandle(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest SaveContext(HtmlPostProcessContext) Declaration void SaveContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem.html",
    "title": "Class FileAttributeItem | DocFX website",
    "keywords": "Class FileAttributeItem Inheritance Object FileAttributeItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class FileAttributeItem Properties File The file path Declaration public string File { get; set; } Property Value Type Description String IsFromSource Whether the file is from source or dependency Declaration public bool IsFromSource { get; set; } Property Value Type Description Boolean LastModifiedTime Last modified time Declaration public DateTime LastModifiedTime { get; set; } Property Value Type Description DateTime MD5 MD5 string of the file content Declaration public string MD5 { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributes.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributes.html",
    "title": "Class FileAttributes | DocFX website",
    "keywords": "Class FileAttributes Inheritance Object Dictionary < String , FileAttributeItem > FileAttributes Inherited Members Dictionary<String, FileAttributeItem>.Add(String, FileAttributeItem) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>) Dictionary<String, FileAttributeItem>.Clear() Dictionary<String, FileAttributeItem>.ContainsKey(String) Dictionary<String, FileAttributeItem>.ContainsValue(FileAttributeItem) Dictionary<String, FileAttributeItem>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.GetEnumerator() Dictionary<String, FileAttributeItem>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, FileAttributeItem>.OnDeserialization(Object) Dictionary<String, FileAttributeItem>.Remove(String) Dictionary<String, FileAttributeItem>.TryGetValue(String, FileAttributeItem) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>[], System.Int32) Dictionary<String, FileAttributeItem>.ICollection.CopyTo(Array, Int32) Dictionary<String, FileAttributeItem>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, FileAttributeItem>.IDictionary.Add(Object, Object) Dictionary<String, FileAttributeItem>.IDictionary.Contains(Object) Dictionary<String, FileAttributeItem>.IDictionary.GetEnumerator() Dictionary<String, FileAttributeItem>.IDictionary.Remove(Object) Dictionary<String, FileAttributeItem>.Comparer Dictionary<String, FileAttributeItem>.Count Dictionary<String, FileAttributeItem>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.Keys Dictionary<String, FileAttributeItem>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.Values Dictionary<String, FileAttributeItem>.Item[String] System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.IsReadOnly Dictionary<String, FileAttributeItem>.ICollection.IsSynchronized Dictionary<String, FileAttributeItem>.ICollection.SyncRoot Dictionary<String, FileAttributeItem>.IDictionary.IsFixedSize Dictionary<String, FileAttributeItem>.IDictionary.IsReadOnly Dictionary<String, FileAttributeItem>.IDictionary.Keys Dictionary<String, FileAttributeItem>.IDictionary.Values Dictionary<String, FileAttributeItem>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class FileAttributes : Dictionary<string, FileAttributeItem>, IDictionary<string, FileAttributeItem>, ICollection<KeyValuePair<string, FileAttributeItem>>, IDictionary, ICollection, IReadOnlyDictionary<string, FileAttributeItem>, IReadOnlyCollection<KeyValuePair<string, FileAttributeItem>>, IEnumerable<KeyValuePair<string, FileAttributeItem>>, IEnumerable, ISerializable, IDeserializationCallback Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorInfoBase.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorInfoBase.html",
    "title": "Class ProcessorInfoBase | DocFX website",
    "keywords": "Class ProcessorInfoBase Inheritance Object ProcessorInfoBase PostProcessorInfo ProcessorInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class ProcessorInfoBase Properties IncrementalContextHash The context hash for incremental. Declaration public string IncrementalContextHash { get; set; } Property Value Type Description String Name The name of processor. Declaration public string Name { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorStepInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorStepInfo.html",
    "title": "Class ProcessorStepInfo | DocFX website",
    "keywords": "Class ProcessorStepInfo Inheritance Object ProcessorStepInfo Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ProcessorStepInfo Properties ContextInfoFile The file link for context info. Declaration public string ContextInfoFile { get; set; } Property Value Type Description String IncrementalContextHash The context hash for incremental. Declaration public string IncrementalContextHash { get; set; } Property Value Type Description String Name The name of processor step. Declaration public string Name { get; set; } Property Value Type Description String Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Template.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Template.html",
    "title": "Class Template | DocFX website",
    "keywords": "Class Template Inheritance Object Template Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class Template Constructors Template(String, DocumentBuildContext, TemplateRendererResource, TemplatePreprocessorResource, ResourceCollection, Int32) Declaration public Template(string name, DocumentBuildContext context, TemplateRendererResource templateResource, TemplatePreprocessorResource scriptResource, ResourceCollection resourceCollection, int maxParallelism) Parameters Type Name Description String name DocumentBuildContext context TemplateRendererResource templateResource TemplatePreprocessorResource scriptResource ResourceCollection resourceCollection Int32 maxParallelism Properties ContainsGetOptions Declaration public bool ContainsGetOptions { get; } Property Value Type Description Boolean ContainsModelTransformation Declaration public bool ContainsModelTransformation { get; } Property Value Type Description Boolean ContainsTemplateRenderer Declaration public bool ContainsTemplateRenderer { get; } Property Value Type Description Boolean Extension Declaration public string Extension { get; } Property Value Type Description String Name Declaration public string Name { get; } Property Value Type Description String Resources Declaration public IEnumerable<TemplateResourceInfo> Resources { get; } Property Value Type Description IEnumerable < TemplateResourceInfo > ScriptName Declaration public string ScriptName { get; } Property Value Type Description String TemplateType Declaration public TemplateType TemplateType { get; } Property Value Type Description TemplateType Type Declaration public string Type { get; } Property Value Type Description String Methods GetOptions(Object) exports.getOptions = function (model) { return { bookmarks : { uid1: \"bookmark1\" }, isShared: true } } Declaration public TransformModelOptions GetOptions(object model) Parameters Type Name Description Object model Returns Type Description TransformModelOptions Transform(Object) Transform from view model to the final result using template Supported template languages are mustache and liquid Declaration public string Transform(object model) Parameters Type Name Description Object model The input view model Returns Type Description String The output after applying template TransformModel(Object) Transform from raw model to view model TODO: refactor to merge model and attrs into one input model Declaration public object TransformModel(object model) Parameters Type Name Description Object model The raw model Returns Type Description Object The view model Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateBundle.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateBundle.html",
    "title": "Class TemplateBundle | DocFX website",
    "keywords": "Class TemplateBundle Inheritance Object TemplateBundle Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateBundle Constructors TemplateBundle(String, IEnumerable<Template>) Declaration public TemplateBundle(string documentType, IEnumerable<Template> templates) Parameters Type Name Description String documentType IEnumerable < Template > templates Properties DocumentType Declaration public string DocumentType { get; } Property Value Type Description String Extension Declaration public string Extension { get; } Property Value Type Description String Resources Declaration public IEnumerable<TemplateResourceInfo> Resources { get; } Property Value Type Description IEnumerable < TemplateResourceInfo > Templates Declaration public IEnumerable<Template> Templates { get; } Property Value Type Description IEnumerable < Template > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ValidateBookmark.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ValidateBookmark.html",
    "title": "Class ValidateBookmark | DocFX website",
    "keywords": "Class ValidateBookmark Inheritance Object HtmlDocumentHandler ValidateBookmark Inherited Members HtmlDocumentHandler.Context HtmlDocumentHandler.PreHandleCore(Manifest) HtmlDocumentHandler.SetContext(HtmlPostProcessContext) HtmlDocumentHandler.Handle(HtmlDocument, ManifestItem, String, String) HtmlDocumentHandler.PostHandle(Manifest) HtmlDocumentHandler.PreHandle(Manifest) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ValidateBookmark : HtmlDocumentHandler, IHtmlDocumentHandler Methods HandleCore(HtmlDocument, ManifestItem, String, String) Declaration protected override void HandleCore(HtmlDocument document, ManifestItem manifestItem, string inputFile, string outputFile) Parameters Type Name Description HtmlAgilityPack.HtmlDocument document ManifestItem manifestItem String inputFile String outputFile Overrides HtmlDocumentHandler.HandleCore(HtmlDocument, ManifestItem, String, String) LoadContext(HtmlPostProcessContext) Declaration public override void LoadContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context Overrides HtmlDocumentHandler.LoadContext(HtmlPostProcessContext) PostHandleCore(Manifest) Declaration protected override Manifest PostHandleCore(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest Overrides HtmlDocumentHandler.PostHandleCore(Manifest) SaveContext(HtmlPostProcessContext) Declaration public override void SaveContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context Overrides HtmlDocumentHandler.SaveContext(HtmlPostProcessContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchive.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchive.html",
    "title": "Class XRefArchive | DocFX website",
    "keywords": "Class XRefArchive Inheritance Object XRefArchive Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class XRefArchive : IXRefContainer, IDisposable Fields MajorFileName Declaration public const string MajorFileName = \"xrefmap.yml\" Field Value Type Description String Properties Entries Declaration public ImmutableList<string> Entries { get; } Property Value Type Description System.Collections.Immutable.ImmutableList < String > Methods CreateMajor(XRefMap) Declaration public string CreateMajor(XRefMap map) Parameters Type Name Description XRefMap map Returns Type Description String CreateMinor(XRefMap, IEnumerable<String>) Declaration public string CreateMinor(XRefMap map, IEnumerable<string> names) Parameters Type Name Description XRefMap map IEnumerable < String > names Returns Type Description String Delete(String) Declaration public void Delete(string name) Parameters Type Name Description String name DeleteMajor() Declaration public void DeleteMajor() Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Get(String) Declaration public XRefMap Get(string name) Parameters Type Name Description String name Returns Type Description XRefMap GetMajor() Declaration public XRefMap GetMajor() Returns Type Description XRefMap GetReader() Declaration public IXRefContainerReader GetReader() Returns Type Description IXRefContainerReader Implements IXRefContainer.GetReader() HasEntry(String) Declaration public bool HasEntry(string name) Parameters Type Name Description String name Returns Type Description Boolean Open(String, XRefArchiveMode) Declaration public static XRefArchive Open(string file, XRefArchiveMode mode) Parameters Type Name Description String file XRefArchiveMode mode Returns Type Description XRefArchive Update(String, XRefMap) Declaration public void Update(string name, XRefMap map) Parameters Type Name Description String name XRefMap map UpdateMajor(XRefMap) Declaration public void UpdateMajor(XRefMap map) Parameters Type Name Description XRefMap map Explicit Interface Implementations IXRefContainer.GetRedirections() Declaration IEnumerable<XRefMapRedirection> IXRefContainer.GetRedirections() Returns Type Description IEnumerable < XRefMapRedirection > Implements IXRefContainer.GetRedirections() IXRefContainer.IsEmbeddedRedirections Declaration bool IXRefContainer.IsEmbeddedRedirections { get; } Returns Type Description Boolean Implements IXRefContainer.IsEmbeddedRedirections Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutputUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutputUtility.html",
    "title": "Class ApiBuildOutputUtility | DocFX website",
    "keywords": "Class ApiBuildOutputUtility Inheritance Object ApiBuildOutputUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax public static class ApiBuildOutputUtility Methods GetApiNames(String, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiNames GetApiNames(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiNames GetHref(String, String) Declaration public static string GetHref(string url, string altText = null) Parameters Type Name Description String url String altText Returns Type Description String GetReferenceViewModel(String, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiReferenceBuildOutput GetReferenceViewModel(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiReferenceBuildOutput GetReferenceViewModel(String, Dictionary<String, ApiReferenceBuildOutput>, String[], Int32) Declaration public static ApiReferenceBuildOutput GetReferenceViewModel(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages, int index) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Int32 index Returns Type Description ApiReferenceBuildOutput GetSpec(String, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static List<ApiLanguageValuePair> GetSpec(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description List < ApiLanguageValuePair > GetXref(String, String, String) Declaration public static string GetXref(string uid, string text = null, string alt = null) Parameters Type Name Description String uid String text String alt Returns Type Description String TransformToLanguagePairList(String, SortedList<String, String>, String[]) Declaration public static List<ApiLanguageValuePair> TransformToLanguagePairList(string defaultValue, SortedList<string, string> values, string[] supportedLanguages) Parameters Type Name Description String defaultValue SortedList < String , String > values String [] supportedLanguages Returns Type Description List < ApiLanguageValuePair >"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiExceptionInfoBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiExceptionInfoBuildOutput.html",
    "title": "Class ApiExceptionInfoBuildOutput | DocFX website",
    "keywords": "Class ApiExceptionInfoBuildOutput Inheritance Object ApiExceptionInfoBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiExceptionInfoBuildOutput Properties Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames Methods Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages FromModel(ExceptionInfo) Declaration public static ApiExceptionInfoBuildOutput FromModel(ExceptionInfo model) Parameters Type Name Description ExceptionInfo model Returns Type Description ApiExceptionInfoBuildOutput FromModel(ExceptionInfo, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiExceptionInfoBuildOutput FromModel(ExceptionInfo model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description ExceptionInfo model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiExceptionInfoBuildOutput Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.ValidateResourceMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.ValidateResourceMetadata.html",
    "title": "Class ValidateResourceMetadata | DocFX website",
    "keywords": "Class ValidateResourceMetadata Inheritance Object BaseDocumentBuildStep ValidateResourceMetadata Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ResourceFiles Assembly :Microsoft.DocAsCode.Build.ResourceFiles.dll Syntax [Export(\"ResourceDocumentProcessor\", typeof (IDocumentBuildStep))] public class ValidateResourceMetadata : BaseDocumentBuildStep, ISupportIncrementalBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Implements IDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Implements IDocumentBuildStep.Name Methods Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) Implements IDocumentBuildStep.Build(FileModel, IHostService) CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > Implements ISupportIncrementalBuildStep.GetDependencyTypesToRegister() GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep.GetIncrementalContextHash() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ResourceFiles | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ResourceFiles Classes ResourceDocumentProcessor ValidateResourceMetadata Interfaces IResourceFileConfig"
  },
  "api/Microsoft.DocAsCode.CascadableOptions.html": {
    "href": "api/Microsoft.DocAsCode.CascadableOptions.html",
    "title": "Class CascadableOptions | DocFX website",
    "keywords": "Class CascadableOptions Inheritance Object CascadableOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class CascadableOptions Properties ForceRebuild Declaration [Option('f', \"force\")] public bool ForceRebuild { get; set; } Property Value Type Description Boolean Log Declaration [Option('l', \"log\", HelpText = \"Specify the file name to save processing log\")] public string Log { get; set; } Property Value Type Description String LogLevel Declaration [Option(\"logLevel\", HelpText = \"Specify to which log level will be logged. By default log level >= Info will be logged. The acceptable value could be Verbose, Info, Warning, Error.\")] public LogLevel? LogLevel { get; set; } Property Value Type Description Nullable < LogLevel > Port Declaration [Option('p', \"port\", HelpText = \"Specify the port of the hosted website\")] public int ? Port { get; set; } Property Value Type Description Nullable < Int32 > PreserveRawInlineComments Declaration [Option(\"raw\", HelpText = \"Preserve the existing xml comment tags inside 'summary' triple slash comments\")] public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean RootOutputFolder Declaration [Option('o', \"output\")] public string RootOutputFolder { get; set; } Property Value Type Description String Serve Declaration [Option('s', \"serve\", HelpText = \"Host the generated documentation to a website\")] public bool Serve { get; set; } Property Value Type Description Boolean Templates Declaration [OptionList('t', \"template\", Separator = ',', HelpText = \"Specifies the template name to apply to. If not specified, output YAML file will not be transformed.\")] public List<string> Templates { get; set; } Property Value Type Description List < String > Themes Declaration [OptionList(\"theme\", Separator = ',', HelpText = \"Specifies which theme to use. By default 'default' theme is offered.\")] public List<string> Themes { get; set; } Property Value Type Description List < String > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.AsyncConcurrentCache-2.html": {
    "href": "api/Microsoft.DocAsCode.Common.AsyncConcurrentCache-2.html",
    "title": "Class AsyncConcurrentCache<TKey, TValue> | DocFX website",
    "keywords": "Class AsyncConcurrentCache<TKey, TValue> An asynchronous wrapper over concurrent dictionary Inheritance Object AsyncConcurrentCache<TKey, TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class AsyncConcurrentCache<TKey, TValue> Type Parameters Name Description TKey Type of keys TValue Type of values Remarks Implementation copied from http://msdn.microsoft.com/en-us/library/hh873173(v=vs.110).aspx , AsyncCache Constructors AsyncConcurrentCache(IEqualityComparer<TKey>) Declaration public AsyncConcurrentCache(IEqualityComparer<TKey> comparer = null) Parameters Type Name Description IEqualityComparer <TKey> comparer Properties Values Gets a list of tasks in cache. Declaration public List<Task<TValue>> Values { get; } Property Value Type Description List < Task <TValue>> Methods GetOrAdd(TKey, Func<TKey, Task<TValue>>, Boolean) Adds a key/value pair to the AsyncConcurrentCache<TKey, TValue> by using the specified function, if the key does not already exist. Declaration public Task<TValue> GetOrAdd(TKey key, Func<TKey, Task<TValue>> valueFactory, bool removeKeyOnFaulted = true) Parameters Type Name Description TKey key The key of the element to add. Func <TKey, Task <TValue>> valueFactory The function used to get a task to generate value for the key Boolean removeKeyOnFaulted A flag indicating whether to remove the key from cache on faulted. Returns Type Description Task <TValue> The task to generate value for the key TryGetValue(TKey, out Task<TValue>) Attempts to get the value associated with the specified key in cache. Declaration public bool TryGetValue(TKey key, out Task<TValue> value) Parameters Type Name Description TKey key The key of the element Task <TValue> value The task to generate value for the key Returns Type Description Boolean true if the task was found; otherwise, false. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.AsyncLogListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.AsyncLogListener.html",
    "title": "Class AsyncLogListener | DocFX website",
    "keywords": "Class AsyncLogListener Inheritance Object AsyncLogListener Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class AsyncLogListener : ILoggerListener, IDisposable Constructors AsyncLogListener() Declaration public AsyncLogListener() AsyncLogListener(CompositeLogListener) Declaration public AsyncLogListener(CompositeLogListener compositeLogListener) Parameters Type Name Description CompositeLogListener compositeLogListener AsyncLogListener(IEnumerable<ILoggerListener>) Declaration public AsyncLogListener(IEnumerable<ILoggerListener> listeners) Parameters Type Name Description IEnumerable < ILoggerListener > listeners Methods AddListener(ILoggerListener) Declaration public void AddListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener AddListeners(IEnumerable<ILoggerListener>) Declaration public void AddListeners(IEnumerable<ILoggerListener> listeners) Parameters Type Name Description IEnumerable < ILoggerListener > listeners Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() FindListener(Predicate<ILoggerListener>) Declaration public ILoggerListener FindListener(Predicate<ILoggerListener> predicate) Parameters Type Name Description Predicate < ILoggerListener > predicate Returns Type Description ILoggerListener Flush() Declaration public void Flush() Implements ILoggerListener.Flush() RemoveAllListeners() Declaration public void RemoveAllListeners() RemoveListener(ILoggerListener) Declaration public void RemoveListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.CircularBuffer-1.html": {
    "href": "api/Microsoft.DocAsCode.Common.CircularBuffer-1.html",
    "title": "Class CircularBuffer<T> | DocFX website",
    "keywords": "Class CircularBuffer<T> Inheritance Object CircularBuffer<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class CircularBuffer<T> Type Parameters Name Description T Constructors CircularBuffer() Declaration public CircularBuffer() CircularBuffer(Int32) Declaration public CircularBuffer(int capacity) Parameters Type Name Description Int32 capacity Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Methods Read() Declaration public T Read() Returns Type Description T Read(T[], Int32, Int32) Declaration public int Read(T[] buffer, int startIndex, int count) Parameters Type Name Description T[] buffer Int32 startIndex Int32 count Returns Type Description Int32 Write(T) Declaration public void Write(T item) Parameters Type Name Description T item Write(T[]) Declaration public void Write(T[] items) Parameters Type Name Description T[] items Write(T[], Int32, Int32) Declaration public void Write(T[] items, int startIndex, int count) Parameters Type Name Description T[] items Int32 startIndex Int32 count Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.MergeOption.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.MergeOption.html",
    "title": "Enum MergeOption | DocFX website",
    "keywords": "Enum MergeOption Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax public enum MergeOption Fields Name Description Ignore Do not merge this property. Merge Standard merge(default behavior): MergeKey Identify merge item in list. MergeNullOrDefault When it is not null or default value in override entity, it is same with merge. When it is null or default value in override entity, it will replace the property to null or default value. Replace Replace it when it is not null or default value in override entity. ReplaceNullOrDefault Always replace. Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.MergeOptionAttribute.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.MergeOptionAttribute.html",
    "title": "Class MergeOptionAttribute | DocFX website",
    "keywords": "Class MergeOptionAttribute Inheritance Object Attribute MergeOptionAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax [AttributeUsage(AttributeTargets.Property, Inherited = true, AllowMultiple = false)] public sealed class MergeOptionAttribute : Attribute, _Attribute Constructors MergeOptionAttribute(MergeOption) Declaration public MergeOptionAttribute(MergeOption option = MergeOption.Merge) Parameters Type Name Description MergeOption option MergeOptionAttribute(Type) Hint merger use custom merge handler. Declaration public MergeOptionAttribute(Type handlerType) Parameters Type Name Description Type handlerType the type of custom merge handler, it should implement IMergeHandler . Properties Handler Declaration public IMergeHandler Handler { get; } Property Value Type Description IMergeHandler Option Declaration public MergeOption Option { get; } Property Value Type Description MergeOption Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.MergerDecorator.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.MergerDecorator.html",
    "title": "Class MergerDecorator | DocFX website",
    "keywords": "Class MergerDecorator Inheritance Object MergerDecorator DictionaryMerger JArrayMerger JObjectMerger KeyedListMerger Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax public abstract class MergerDecorator : IMerger Constructors MergerDecorator(IMerger) Declaration protected MergerDecorator(IMerger inner) Parameters Type Name Description IMerger inner Methods Merge(ref Object, Object, Type, IMergeContext) Declaration public virtual void Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Implements IMerger.Merge(ref Object, Object, Type, IMergeContext) TestKey(Object, Object, Type, IMergeContext) Declaration public virtual bool TestKey(object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Returns Type Description Boolean Implements IMerger.TestKey(Object, Object, Type, IMergeContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.EntityMergers.MergerFacade.html": {
    "href": "api/Microsoft.DocAsCode.Common.EntityMergers.MergerFacade.html",
    "title": "Class MergerFacade | DocFX website",
    "keywords": "Class MergerFacade Inheritance Object MergerFacade Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common.EntityMergers Assembly :Microsoft.DocAsCode.Common.dll Syntax public class MergerFacade Constructors MergerFacade(IMerger) Declaration public MergerFacade(IMerger merger) Parameters Type Name Description IMerger merger Methods Merge<T>(ref T, T, IReadOnlyDictionary<String, Object>) Declaration public void Merge<T>(ref T source, T overrides, IReadOnlyDictionary<string, object> data = null)where T : class Parameters Type Name Description T source T overrides IReadOnlyDictionary < String , Object > data Type Parameters Name Description T Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.LogLevel.html": {
    "href": "api/Microsoft.DocAsCode.Common.LogLevel.html",
    "title": "Enum LogLevel | DocFX website",
    "keywords": "Enum LogLevel Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public enum LogLevel Fields Name Description Diagnostic Error Info Verbose Warning Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.LruList-1.html": {
    "href": "api/Microsoft.DocAsCode.Common.LruList-1.html",
    "title": "Class LruList<T> | DocFX website",
    "keywords": "Class LruList<T> Inheritance Object LruList<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class LruList<T> Type Parameters Name Description T Constructors LruList(Int32, Action<T>, IEqualityComparer<T>) Declaration protected LruList(int capacity, Action<T> onRemoving, IEqualityComparer<T> comparer) Parameters Type Name Description Int32 capacity Action <T> onRemoving IEqualityComparer <T> comparer Methods Access(T) Declaration public void Access(T item) Parameters Type Name Description T item AccessNoCheck(T) Declaration protected virtual void AccessNoCheck(T item) Parameters Type Name Description T item Contains(T) Declaration public virtual bool Contains(T item) Parameters Type Name Description T item Returns Type Description Boolean Create(Int32, Action<T>, IEqualityComparer<T>) Declaration public static LruList<T> Create(int capacity, Action<T> onRemoving = null, IEqualityComparer<T> comparer = null) Parameters Type Name Description Int32 capacity Action <T> onRemoving IEqualityComparer <T> comparer Returns Type Description LruList <T> CreateSynchronized(Int32, Action<T>, IEqualityComparer<T>) Declaration public static LruList<T> CreateSynchronized(int capacity, Action<T> onRemoving = null, IEqualityComparer<T> comparer = null) Parameters Type Name Description Int32 capacity Action <T> onRemoving IEqualityComparer <T> comparer Returns Type Description LruList <T> TryFind(Func<T, Boolean>, out T) Declaration public virtual bool TryFind(Func<T, bool> func, out T item) Parameters Type Name Description Func <T, Boolean > func T item Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ManifestFileHelper.html": {
    "href": "api/Microsoft.DocAsCode.Common.ManifestFileHelper.html",
    "title": "Class ManifestFileHelper | DocFX website",
    "keywords": "Class ManifestFileHelper Inheritance Object ManifestFileHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class ManifestFileHelper Methods AddFile(Manifest, ManifestItem, String, String) Declaration public static void AddFile(this Manifest manifest, ManifestItem item, string extension, string targetRelativePath) Parameters Type Name Description Manifest manifest ManifestItem item String extension String targetRelativePath AddFile(Manifest, String, String, String) Declaration public static bool AddFile(this Manifest manifest, string sourceFilePath, string extension, string targetRelativePath) Parameters Type Name Description Manifest manifest String sourceFilePath String extension String targetRelativePath Returns Type Description Boolean Dereference(Manifest, String, Int32) Declaration public static void Dereference(this Manifest manifest, string manifestFolder, int parallelism) Parameters Type Name Description Manifest manifest String manifestFolder Int32 parallelism Modify(Manifest, Action<Manifest>) Declaration public static void Modify(this Manifest manifest, Action<Manifest> action) Parameters Type Name Description Manifest manifest Action < Manifest > action Modify<T>(Manifest, Func<Manifest, T>) Declaration public static T Modify<T>(this Manifest manifest, Func<Manifest, T> func) Parameters Type Name Description Manifest manifest Func < Manifest , T> func Returns Type Description T Type Parameters Name Description T RemoveFile(Manifest, ManifestItem, String) Declaration public static bool RemoveFile(this Manifest manifest, ManifestItem item, string extension) Parameters Type Name Description Manifest manifest ManifestItem item String extension Returns Type Description Boolean RemoveFile(Manifest, String, String) Declaration public static bool RemoveFile(this Manifest manifest, string sourceFilePath, string extension) Parameters Type Name Description Manifest manifest String sourceFilePath String extension Returns Type Description Boolean Shrink(Manifest, String, Int32) Declaration public static void Shrink(this Manifest manifest, string incrementalFolder, int parallism = 0) Parameters Type Name Description Manifest manifest String incrementalFolder Int32 parallism Shrink(IEnumerable<ManifestItem>, String, Int32) Declaration public static void Shrink(this IEnumerable<ManifestItem> items, string incrementalFolder, int parallism = 0) Parameters Type Name Description IEnumerable < ManifestItem > items String incrementalFolder Int32 parallism"
  },
  "api/Microsoft.DocAsCode.Common.ManifestFileReader.html": {
    "href": "api/Microsoft.DocAsCode.Common.ManifestFileReader.html",
    "title": "Class ManifestFileReader | DocFX website",
    "keywords": "Class ManifestFileReader Inheritance Object ManifestFileReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ManifestFileReader : IFileReader Constructors ManifestFileReader(Manifest, String) Declaration public ManifestFileReader(Manifest manifest, string manifestFolder) Parameters Type Name Description Manifest manifest String manifestFolder Properties Manifest Declaration public Manifest Manifest { get; } Property Value Type Description Manifest ManifestFolder Declaration public string ManifestFolder { get; } Property Value Type Description String Methods EnumerateFiles() Declaration public IEnumerable<RelativePath> EnumerateFiles() Returns Type Description IEnumerable < RelativePath > Implements IFileReader.EnumerateFiles() FindFile(RelativePath) Declaration public PathMapping? FindFile(RelativePath file) Parameters Type Name Description RelativePath file Returns Type Description Nullable < PathMapping > Implements IFileReader.FindFile(RelativePath) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.YamlUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.YamlUtility.html",
    "title": "Class YamlUtility | DocFX website",
    "keywords": "Class YamlUtility Expresses static methods for creating, moving, and enumerating through directories and subdirectories. This class cannot be inherited. To browse the .NET Framework source code for this type, see the Reference Source Refer to @Microsoft.DocAsCode.EntityModel.ProjectLevelCache to see what to do with Files Inheritance Object YamlUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class YamlUtility Remarks THIS is remarks overriden in MARKDWON file Methods ConvertTo<T>(Object) Declaration public static T ConvertTo<T>(object obj) Parameters Type Name Description Object obj Returns Type Description T Type Parameters Name Description T Deserialize<T>(TextReader) Declaration public static T Deserialize<T>(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description T Type Parameters Name Description T Deserialize<T>(String) Declaration public static T Deserialize<T>(string path) Parameters Type Name Description String path Returns Type Description T Type Parameters Name Description T Serialize(TextWriter, Object) Declaration public static void Serialize(TextWriter writer, object graph) Parameters Type Name Description TextWriter writer Object graph Serialize(TextWriter, Object, String) Declaration public static void Serialize(TextWriter writer, object graph, string comments) Parameters Type Name Description TextWriter writer Object graph String comments Serialize(String, Object) Declaration public static void Serialize(string path, object graph) Parameters Type Name Description String path Object graph Serialize(String, Object, String) Declaration public static void Serialize(string path, object graph, string comments) Parameters Type Name Description String path Object graph String comments"
  },
  "api/Microsoft.DocAsCode.Common.html": {
    "href": "api/Microsoft.DocAsCode.Common.html",
    "title": "Namespace Microsoft.DocAsCode.Common | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Common Classes AsyncConcurrentCache<TKey, TValue> An asynchronous wrapper over concurrent dictionary AsyncLogListener CircularBuffer<T> CircularStream CollectionExtensions CollectionUtility CommandInfo CommandUtility CompositeDictionary CompositeDictionary.Builder CompositeLogListener CompositeStream Write-only composite stream. CompositionUtility ComputerResource ComputerResourceCollection ConsoleLogListener ConsoleUtility ConvertToObjectHelper CrossAppDomainListener FileAbstractLayer FileAbstractLayerBuilder FileAbstractLayerExtensions FilePathComparer FileWriterBase HtmlLogListener HtmlLogListener.ReportItem JObjectDictionaryToObjectDictionaryConverter JsonUtility LinkFileReader LinkFileWriter Logger LoggerFileScope LoggerPhaseScope LruList<T> ManifestFileHelper ManifestFileReader ManifestFileWriter ManifestUtility PathUtility PerformanceScope ProcessDetail RealFileReader RealFileWriter RelativePath relative path ReplayLogListener Replay log on flushing. ReportLogListener ReportLogListener.ReportItem ResourceLease<T> ResourcePool ResourcePoolAsyncManager<TResource> ResourcePoolManager<TResource> StringExtension TaskHelper TreeIterator UriUtility XHtmlWriter YamlMime YamlUtility Structs PathMapping Interfaces IFileReader File reader. IFileWriter File writer. ILoggerListener ILogItem ISupportRandomFileWriter File writer. Enums ComputerResourceType HtmlLogListener.MessageSeverity LogLevel ReportLogListener.MessageSeverity"
  },
  "api/Microsoft.DocAsCode.CustomAssemblyTextAttribute.html": {
    "href": "api/Microsoft.DocAsCode.CustomAssemblyTextAttribute.html",
    "title": "Class CustomAssemblyTextAttribute | DocFX website",
    "keywords": "Class CustomAssemblyTextAttribute Inheritance Object Attribute CustomAssemblyTextAttribute AssemblyLicenseAttribute AssemblyUsageAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public abstract class CustomAssemblyTextAttribute : Attribute, _Attribute Constructors CustomAssemblyTextAttribute(String[]) Declaration public CustomAssemblyTextAttribute(params string[] lines) Parameters Type Name Description String [] lines Properties Value Declaration public string Value { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.DevLang.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.DevLang.html",
    "title": "Class Constants.DevLang | DocFX website",
    "keywords": "Class Constants.DevLang Inheritance Object Constants.DevLang Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class DevLang Fields CSharp Declaration public const string CSharp = \"csharp\" Field Value Type Description String VB Declaration public const string VB = \"vb\" Field Value Type Description String"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.NamedArgumentInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.NamedArgumentInfo.html",
    "title": "Class NamedArgumentInfo | DocFX website",
    "keywords": "Class NamedArgumentInfo Inheritance Object NamedArgumentInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class NamedArgumentInfo Properties Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public object Value { get; set; } Property Value Type Description Object Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.PageViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.PageViewModel.html",
    "title": "Class PageViewModel | DocFX website",
    "keywords": "Class PageViewModel Inheritance Object PageViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class PageViewModel Properties Items Declaration [YamlMember(Alias = \"items\")] [JsonProperty(\"items\")] public List<ItemViewModel> Items { get; set; } Property Value Type Description List < ItemViewModel > Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > References Declaration [YamlMember(Alias = \"references\")] [JsonProperty(\"references\")] public List<ReferenceViewModel> References { get; set; } Property Value Type Description List < ReferenceViewModel > ShouldSkipMarkup Declaration [YamlMember(Alias = \"shouldSkipMarkup\")] [JsonProperty(\"shouldSkipMarkup\")] public bool ShouldSkipMarkup { get; set; } Property Value Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxDetailViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxDetailViewModel.html",
    "title": "Class SyntaxDetailViewModel | DocFX website",
    "keywords": "Class SyntaxDetailViewModel Inheritance Object SyntaxDetailViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class SyntaxDetailViewModel Properties Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public string Content { get; set; } Property Value Type Description String ContentForCSharp Declaration [YamlIgnore] [JsonIgnore] public string ContentForCSharp { get; set; } Property Value Type Description String ContentForVB Declaration [YamlIgnore] [JsonIgnore] public string ContentForVB { get; set; } Property Value Type Description String Contents Declaration [ExtensibleMember(\"content.\")] [JsonIgnore] public SortedList<string, string> Contents { get; set; } Property Value Type Description SortedList < String , String > Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ApiParameter> Parameters { get; set; } Property Value Type Description List < ApiParameter > Return Declaration [YamlMember(Alias = \"return\")] [JsonProperty(\"return\")] public ApiParameter Return { get; set; } Property Value Type Description ApiParameter TypeParameters Declaration [YamlMember(Alias = \"typeParameters\")] [JsonProperty(\"typeParameters\")] public List<ApiParameter> TypeParameters { get; set; } Property Value Type Description List < ApiParameter > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxLanguage.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxLanguage.html",
    "title": "Enum SyntaxLanguage | DocFX website",
    "keywords": "Enum SyntaxLanguage Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax public enum SyntaxLanguage Fields Name Description CPlusPlus CSharp Default FSharp Javascript VB Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmEngineBuilder.html",
    "title": "Class DfmEngineBuilder | DocFX website",
    "keywords": "Class DfmEngineBuilder Inheritance Object MarkdownEngineBuilder GfmEngineBuilder DfmEngineBuilder Inherited Members GfmEngineBuilder.BuildRules() GfmEngineBuilder.BuildBlockRules() GfmEngineBuilder.BuildInlineRules() MarkdownEngineBuilder.Options MarkdownEngineBuilder.BlockRules MarkdownEngineBuilder.InlineRules MarkdownEngineBuilder.Rewriter MarkdownEngineBuilder.TokenTreeValidator MarkdownEngineBuilder.CreateParseContext() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmEngineBuilder : GfmEngineBuilder Constructors DfmEngineBuilder(Options, String, String, IReadOnlyList<String>) Declaration public DfmEngineBuilder(Options options, string baseDir = null, string templateDir = null, IReadOnlyList<string> fallbackFolders = null) Parameters Type Name Description Options options String baseDir String templateDir IReadOnlyList < String > fallbackFolders Methods CreateDfmEngine(Object) Declaration public DfmEngine CreateDfmEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description DfmEngine CreateEngine(Object) Declaration public override IMarkdownEngine CreateEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description IMarkdownEngine Overrides MarkdownEngineBuilder.CreateEngine(Object) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFallbackHelper.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFallbackHelper.html",
    "title": "Class DfmFallbackHelper | DocFX website",
    "keywords": "Class DfmFallbackHelper Inheritance Object DfmFallbackHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public static class DfmFallbackHelper Methods GetFilePathWithFallback(String, IMarkdownContext) Get file path with fallback Declaration public static Tuple<string, bool> GetFilePathWithFallback(string relativePath, IMarkdownContext context) Parameters Type Name Description String relativePath original relative path in markdown. IMarkdownContext context markdown context Returns Type Description Tuple < String , Boolean > item1: acutal file path. item: true if it hit fallback file. Otherwise false"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockHelper.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockHelper.html",
    "title": "Class DfmFencesBlockHelper | DocFX website",
    "keywords": "Class DfmFencesBlockHelper Inheritance Object DfmFencesBlockHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public static class DfmFencesBlockHelper Methods GenerateReferenceNotFoundErrorMessage(IMarkdownRenderer, DfmFencesBlockToken) Declaration [Obsolete] public static string GenerateReferenceNotFoundErrorMessage(IMarkdownRenderer renderer, DfmFencesBlockToken token) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesBlockToken token Returns Type Description String GenerateReferenceNotFoundErrorMessage(IMarkdownRenderer, DfmFencesToken) Declaration public static string GenerateReferenceNotFoundErrorMessage(IMarkdownRenderer renderer, DfmFencesToken token) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesToken token Returns Type Description String GetRenderedFencesBlockString(DfmFencesBlockToken, Options, String, String[]) Declaration [Obsolete] public static string GetRenderedFencesBlockString(DfmFencesBlockToken token, Options options, string errorMessage, string[] codeLines = null) Parameters Type Name Description DfmFencesBlockToken token Options options String errorMessage String [] codeLines Returns Type Description String GetRenderedFencesBlockString(DfmFencesToken, Options, String, String[]) Declaration public static string GetRenderedFencesBlockString(DfmFencesToken token, Options options, string errorMessage, string[] codeLines = null) Parameters Type Name Description DfmFencesToken token Options options String errorMessage String [] codeLines Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockPathQueryOption.html",
    "title": "Class DfmFencesBlockPathQueryOption | DocFX website",
    "keywords": "Class DfmFencesBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption FullFileBlockPathQueryOption LineRangeBlockPathQueryOption MultipleLineRangeBlockPathQueryOption TagNameBlockPathQueryOption Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public abstract class DfmFencesBlockPathQueryOption : IDfmFencesBlockPathQueryOption Properties DedentLength Declaration public int ? DedentLength { get; set; } Property Value Type Description Nullable < Int32 > Implements IDfmFencesBlockPathQueryOption.DedentLength ErrorMessage Declaration public string ErrorMessage { get; protected set; } Property Value Type Description String Implements IDfmFencesBlockPathQueryOption.ErrorMessage HighlightLines Declaration public string HighlightLines { get; set; } Property Value Type Description String Implements IDfmFencesBlockPathQueryOption.HighlightLines Methods CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>) Declaration protected bool CheckLineRange(int totalLines, int ? startLine, int ? endLine) Parameters Type Name Description Int32 totalLines Nullable < Int32 > startLine Nullable < Int32 > endLine Returns Type Description Boolean GetQueryLines(String[]) Declaration public abstract IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > Implements IDfmFencesBlockPathQueryOption.GetQueryLines(String[]) ValidateAndPrepare(String[], DfmFencesToken) Declaration public abstract bool ValidateAndPrepare(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description Boolean Implements IDfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesToken) ValidateHighlightLinesAndDedentLength(Int32) Declaration public bool ValidateHighlightLinesAndDedentLength(int totalLines) Parameters Type Name Description Int32 totalLines Returns Type Description Boolean Implements IDfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.FlatNameCodeSnippetExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.FlatNameCodeSnippetExtractor.html",
    "title": "Class FlatNameCodeSnippetExtractor | DocFX website",
    "keywords": "Class FlatNameCodeSnippetExtractor Flat name extrator works for snippet name exists in both start and end line representations E.g., comment representation needs snippet name exists in both start and end line comment Inheritance Object CodeSnippetRegexExtractor FlatNameCodeSnippetExtractor Inherited Members CodeSnippetRegexExtractor.GetAll(String[]) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class FlatNameCodeSnippetExtractor : CodeSnippetRegexExtractor, ICodeSnippetExtractor Constructors FlatNameCodeSnippetExtractor(Regex, Regex) Declaration public FlatNameCodeSnippetExtractor(Regex startLineRegex, Regex endLineRegex) Parameters Type Name Description Regex startLineRegex Regex endLineRegex Methods ResolveCodeSnippetTags(String[]) Declaration protected override List<CodeSnippetTag> ResolveCodeSnippetTags(string[] lines) Parameters Type Name Description String [] lines Returns Type Description List < CodeSnippetTag > Overrides CodeSnippetRegexExtractor.ResolveCodeSnippetTags(String[]) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.FullFileBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.FullFileBlockPathQueryOption.html",
    "title": "Class FullFileBlockPathQueryOption | DocFX website",
    "keywords": "Class FullFileBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption FullFileBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class FullFileBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Methods GetQueryLines(String[]) Declaration public override IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[]) ValidateAndPrepare(String[], DfmFencesToken) Declaration public override bool ValidateAndPrepare(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description Boolean Overrides DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesToken) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.ICodeSnippetExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.ICodeSnippetExtractor.html",
    "title": "Interface ICodeSnippetExtractor | DocFX website",
    "keywords": "Interface ICodeSnippetExtractor Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public interface ICodeSnippetExtractor Methods GetAll(String[]) Declaration Dictionary<string, DfmTagNameResolveResult> GetAll(string[] lines) Parameters Type Name Description String [] lines Returns Type Description Dictionary < String , DfmTagNameResolveResult > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmBlockSpecialSplitToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmBlockSpecialSplitToken.html",
    "title": "Interface IDfmBlockSpecialSplitToken | DocFX website",
    "keywords": "Interface IDfmBlockSpecialSplitToken Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmBlockSpecialSplitToken Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.html",
    "title": "Namespace Microsoft.DocAsCode.Exceptions | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Exceptions Classes DocfxException DocfxInitException DocfxMetadataException ExtractMetadataException InvalidOptionException PluginDirectoryAlreadyExistsException PluginException"
  },
  "api/Microsoft.DocAsCode.FileItems.html": {
    "href": "api/Microsoft.DocAsCode.FileItems.html",
    "title": "Class FileItems | DocFX website",
    "keywords": "Class FileItems Inheritance Object List < String > FileItems Inherited Members System.Collections.Generic.List<System.String>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.String>.System.Collections.IList.set_Item(System.Int32, System.Object) List<String>.Add(String) List<String>.IList.Add(Object) List<String>.AddRange(IEnumerable<String>) List<String>.AsReadOnly() List<String>.BinarySearch(Int32, Int32, String, IComparer<String>) List<String>.BinarySearch(String) List<String>.BinarySearch(String, IComparer<String>) List<String>.Clear() List<String>.Contains(String) List<String>.IList.Contains(Object) List<String>.ConvertAll<TOutput>(Converter<String, TOutput>) List<String>.CopyTo(String[]) List<String>.ICollection.CopyTo(Array, Int32) List<String>.CopyTo(Int32, String[], Int32, Int32) List<String>.CopyTo(String[], Int32) List<String>.Exists(Predicate<String>) List<String>.Find(Predicate<String>) List<String>.FindAll(Predicate<String>) List<String>.FindIndex(Predicate<String>) List<String>.FindIndex(Int32, Predicate<String>) List<String>.FindIndex(Int32, Int32, Predicate<String>) List<String>.FindLast(Predicate<String>) List<String>.FindLastIndex(Predicate<String>) List<String>.FindLastIndex(Int32, Predicate<String>) List<String>.FindLastIndex(Int32, Int32, Predicate<String>) List<String>.ForEach(Action<String>) List<String>.GetEnumerator() List<String>.IEnumerable<String>.GetEnumerator() List<String>.IEnumerable.GetEnumerator() List<String>.GetRange(Int32, Int32) List<String>.IndexOf(String) List<String>.IList.IndexOf(Object) List<String>.IndexOf(String, Int32) List<String>.IndexOf(String, Int32, Int32) List<String>.Insert(Int32, String) List<String>.IList.Insert(Int32, Object) List<String>.InsertRange(Int32, IEnumerable<String>) List<String>.LastIndexOf(String) List<String>.LastIndexOf(String, Int32) List<String>.LastIndexOf(String, Int32, Int32) List<String>.Remove(String) List<String>.IList.Remove(Object) List<String>.RemoveAll(Predicate<String>) List<String>.RemoveAt(Int32) List<String>.RemoveRange(Int32, Int32) List<String>.Reverse() List<String>.Reverse(Int32, Int32) List<String>.Sort() List<String>.Sort(IComparer<String>) List<String>.Sort(Int32, Int32, IComparer<String>) List<String>.Sort(Comparison<String>) List<String>.ToArray() List<String>.TrimExcess() List<String>.TrueForAll(Predicate<String>) List<String>.Capacity List<String>.Count List<String>.IList.IsFixedSize List<String>.ICollection<String>.IsReadOnly List<String>.IList.IsReadOnly List<String>.ICollection.IsSynchronized List<String>.ICollection.SyncRoot List<String>.Item[Int32] List<String>.IList.Item[Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] public class FileItems : List<string>, IList<string>, ICollection<string>, IList, ICollection, IReadOnlyList<string>, IReadOnlyCollection<string>, IEnumerable<string>, IEnumerable Constructors FileItems(IEnumerable<String>) Declaration public FileItems(IEnumerable<string> files) Parameters Type Name Description IEnumerable < String > files FileItems(String) Declaration public FileItems(string file) Parameters Type Name Description String file Operators Explicit(String to FileItems) Declaration public static explicit operator FileItems(string input) Parameters Type Name Description String input Returns Type Description FileItems Extension Methods CollectionExtensions.Merge<TItem, TResult>(IReadOnlyList<IEnumerable<TItem>>, IComparer<TItem>, Func<List<TItem>, TResult>) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) PathUtility.CopyFilesToFolder(IEnumerable<String>, String, String, Boolean, Action<String>, Func<String, Boolean>) StringExtension.ToDelimitedString(IEnumerable<String>, String) StringExtension.GetNormalizedFullPathKey(IEnumerable<String>) StringExtension.GetNormalizedFullPathList(IEnumerable<String>) StringExtension.GetNormalizedPathList(IEnumerable<String>) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>) DocumentExceptionExtensions.RunAll<TElement, TResult>(IReadOnlyList<TElement>, Func<TElement, TResult>) DocumentExceptionExtensions.RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>) DocumentExceptionExtensions.RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>, Int32)"
  },
  "api/Microsoft.DocAsCode.FileMapping.html": {
    "href": "api/Microsoft.DocAsCode.FileMapping.html",
    "title": "Class FileMapping | DocFX website",
    "keywords": "Class FileMapping FileMapping supports two forms: Array form This form supports multiple file mappings, and also allows additional properties per mapping. e.g. \"key\": [ {\"files\": [\"file1\", \"file2\"], \"dest\": \"dest1\"}, {\"files\": \"file3\", \"dest\": \"dest2\"}, {\"files\": [\"file4\", \"file5\"], \"exclude\": [\"file5\"], \"src\": \"folder1\"}, {\"files\": \"Example.yml\", \"src\": \"v1.0\", \"dest\":\"v1.0/api\", \"version\": \"v1.0\"}, {\"files\": \"Example.yml\", \"src\": \"v2.0\", \"dest\":\"v2.0/api\", \"version\": \"v2.0\"} ] Compact form This form supports multiple file patterns in an array e.g. projects: [\"file1\", \"file2\"] Inheritance Object FileMapping Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [JsonConverter(typeof (FileMappingConverter))] [Serializable] public class FileMapping Constructors FileMapping() Declaration public FileMapping() FileMapping(FileMappingItem) Declaration public FileMapping(FileMappingItem item) Parameters Type Name Description FileMappingItem item FileMapping(IEnumerable<FileMappingItem>) Declaration public FileMapping(IEnumerable<FileMappingItem> items) Parameters Type Name Description IEnumerable < FileMappingItem > items Properties Expanded Declaration public bool Expanded { get; set; } Property Value Type Description Boolean Items Declaration public IReadOnlyList<FileMappingItem> Items { get; } Property Value Type Description IReadOnlyList < FileMappingItem > RootTocPath The RootTocPath of the current version, specified in FileMappingItems. If different FileMappingItems in same version have different RootTocPath, the behavior is undetermined. Declaration public string RootTocPath { get; } Property Value Type Description String Methods Add(FileMappingItem) Should not merge FileMappingItems even if they are using the same name, because other propertes also matters, e.g. src, exclude. Declaration public void Add(FileMappingItem item) Parameters Type Name Description FileMappingItem item Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.FileMappingConverter.html": {
    "href": "api/Microsoft.DocAsCode.FileMappingConverter.html",
    "title": "Class FileMappingConverter | DocFX website",
    "keywords": "Class FileMappingConverter Inheritance Object Newtonsoft.Json.JsonConverter FileMappingConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class FileMappingConverter : JsonConverter Methods CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownEngine.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownEngine.html",
    "title": "Interface IMarkdownEngine | DocFX website",
    "keywords": "Interface IMarkdownEngine Markdown engine Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownEngine Properties Parser Get the parser (it can read markdown text, then return markdown tokens). Declaration IMarkdownParser Parser { get; } Property Value Type Description IMarkdownParser Renderer Get the renderer (it can read markdown token, then return text e.g. html). Declaration IMarkdownRenderer Renderer { get; } Property Value Type Description IMarkdownRenderer RewriteEngine Get the rewriter (it can read markdown tokens, then rewrite them and return). Declaration IMarkdownRewriteEngine RewriteEngine { get; } Property Value Type Description IMarkdownRewriteEngine TokenTreeValidator Get the token tree validator. Declaration IMarkdownTokenTreeValidator TokenTreeValidator { get; set; } Property Value Type Description IMarkdownTokenTreeValidator Methods Mark(SourceInfo, IMarkdownContext) Mark markdown text. Declaration StringBuffer Mark(SourceInfo sourceInfo, IMarkdownContext context = null) Parameters Type Name Description SourceInfo sourceInfo The line info for markdown text. IMarkdownContext context The markdown context contains rules. Returns Type Description StringBuffer Rendered text. Markup(String, String) Mark markdown text. Declaration string Markup(string markdown, string file = null) Parameters Type Name Description String markdown The markdown text. String file The file of markdown. Returns Type Description String Rendered text. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownExpression.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownExpression.html",
    "title": "Interface IMarkdownExpression | DocFX website",
    "keywords": "Interface IMarkdownExpression Inherited Members IMarkdownToken.Rule IMarkdownToken.Context IMarkdownToken.SourceInfo Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownExpression : IMarkdownToken Methods GetChildren() Declaration IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownParser.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownParser.html",
    "title": "Interface IMarkdownParser | DocFX website",
    "keywords": "Interface IMarkdownParser Markdown parser. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownParser Properties Context Get the current markdown context. Declaration IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Links Get the No. links. Declaration Dictionary<string, LinkObj> Links { get; } Property Value Type Description Dictionary < String , LinkObj > Options Get the Options . Declaration Options Options { get; } Property Value Type Description Options Methods SwitchContext(IMarkdownContext) Switch the markdown context. Declaration IMarkdownContext SwitchContext(IMarkdownContext context) Parameters Type Name Description IMarkdownContext context New context. Returns Type Description IMarkdownContext The old context. Tokenize(SourceInfo) Tokenize the markdown text. Declaration ImmutableArray<IMarkdownToken> Tokenize(SourceInfo sourceInfo) Parameters Type Name Description SourceInfo sourceInfo Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > A list of IMarkdownToken . Extension Methods MarkdownParserExtensions.SwitchContext(IMarkdownParser, String, Object) MarkdownParserExtensions.SwitchContext(IMarkdownParser, IReadOnlyDictionary<String, Object>) MarkdownParserExtensions.TokenizeInline(IMarkdownParser, SourceInfo) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownParsingContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownParsingContext.html",
    "title": "Interface IMarkdownParsingContext | DocFX website",
    "keywords": "Interface IMarkdownParsingContext Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownParsingContext Properties CurrentMarkdown Declaration string CurrentMarkdown { get; } Property Value Type Description String File Declaration string File { get; } Property Value Type Description String IsInParagraph Declaration bool IsInParagraph { get; set; } Property Value Type Description Boolean LineNumber Declaration int LineNumber { get; } Property Value Type Description Int32 Markdown Declaration string Markdown { get; } Property Value Type Description String Methods Consume(Int32) Declaration SourceInfo Consume(int charCount) Parameters Type Name Description Int32 charCount Returns Type Description SourceInfo Match(Matcher) Declaration MatchResult Match(Matcher matcher) Parameters Type Name Description Matcher matcher Returns Type Description MatchResult Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRenderer.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRenderer.html",
    "title": "Interface IMarkdownRenderer | DocFX website",
    "keywords": "Interface IMarkdownRenderer Markdown renderer. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownRenderer Properties Engine Get the markdown engine. Declaration IMarkdownEngine Engine { get; } Property Value Type Description IMarkdownEngine Links Get the No. links. Declaration Dictionary<string, LinkObj> Links { get; } Property Value Type Description Dictionary < String , LinkObj > Options Get the Options . Declaration Options Options { get; } Property Value Type Description Options Methods Render(IMarkdownToken) Render a token. Declaration StringBuffer Render(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token The token to render. Returns Type Description StringBuffer The text. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRewritable-1.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRewritable-1.html",
    "title": "Interface IMarkdownRewritable<T> | DocFX website",
    "keywords": "Interface IMarkdownRewritable<T> Markdown rewritable (for object contains IMarkdownToken ). Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownRewritable<out T> Type Parameters Name Description T The type of implement this interface. Methods Rewrite(IMarkdownRewriteEngine) Rewrite object with IMarkdownRewriteEngine Declaration T Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine The rewrite engine Returns Type Description T The rewritten object. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRewriteEngine.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRewriteEngine.html",
    "title": "Interface IMarkdownRewriteEngine | DocFX website",
    "keywords": "Interface IMarkdownRewriteEngine Markdown rewrite engine. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownRewriteEngine Properties Engine Get markdown engine. Declaration IMarkdownEngine Engine { get; } Property Value Type Description IMarkdownEngine Methods Complete() Declaration void Complete() GetParents() Declaration ImmutableArray<IMarkdownToken> GetParents() Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > GetVariable(String) Declaration object GetVariable(string name) Parameters Type Name Description String name Returns Type Description Object HasPostProcess(String) Declaration bool HasPostProcess(string name) Parameters Type Name Description String name Returns Type Description Boolean HasVariable(String) Declaration bool HasVariable(string name) Parameters Type Name Description String name Returns Type Description Boolean Initialize() Declaration void Initialize() RemovePostProcess(String) Declaration void RemovePostProcess(string name) Parameters Type Name Description String name RemoveVariable(String) Declaration void RemoveVariable(string name) Parameters Type Name Description String name Rewrite(ImmutableArray<IMarkdownToken>) Rewrite markdown tokens. Declaration ImmutableArray<IMarkdownToken> Rewrite(ImmutableArray<IMarkdownToken> tokens) Parameters Type Name Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Source markdown tokens. Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Rewritten markdown tokens. SetPostProcess(String, Action<IMarkdownRewriteEngine>) Declaration void SetPostProcess(string name, Action<IMarkdownRewriteEngine> action) Parameters Type Name Description String name Action < IMarkdownRewriteEngine > action SetVariable(String, Object) Declaration void SetVariable(string name, object value) Parameters Type Name Description String name Object value Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRule.html",
    "title": "Interface IMarkdownRule | DocFX website",
    "keywords": "Interface IMarkdownRule Markdown rule. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownRule Properties Name Get the name of rule. Declaration string Name { get; } Property Value Type Description String Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Try match this rule. Declaration IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser The markdown parser. IMarkdownParsingContext context The context for parser, contains markdown text, line number and file. Returns Type Description IMarkdownToken If matched, an instance of IMarkdownToken should be return, otherwise null. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IFilterVisitor.html",
    "title": "Interface IFilterVisitor | DocFX website",
    "keywords": "Interface IFilterVisitor Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public interface IFilterVisitor Methods CanVisitApi(ISymbol, Boolean, IFilterVisitor) Declaration bool CanVisitApi(ISymbol symbol, bool wantProtectedMember = true, IFilterVisitor outer = null) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Declaration bool CanVisitAttribute(ISymbol symbol, bool wantProtectedMember = true, IFilterVisitor outer = null) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) FilterVisitorExtensions.WithConfig(IFilterVisitor, String) FilterVisitorExtensions.WithConfig(IFilterVisitor, ConfigFilterRule) FilterVisitorExtensions.WithCache(IFilterVisitor)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IResolverPipeline.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IResolverPipeline.html",
    "title": "Interface IResolverPipeline | DocFX website",
    "keywords": "Interface IResolverPipeline Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public interface IResolverPipeline Methods Run(MetadataModel, ResolverContext) Declaration void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ITripleSlashCommentParserContext.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ITripleSlashCommentParserContext.html",
    "title": "Interface ITripleSlashCommentParserContext | DocFX website",
    "keywords": "Interface ITripleSlashCommentParserContext Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public interface ITripleSlashCommentParserContext Properties AddReferenceDelegate Declaration Action<string, string> AddReferenceDelegate { get; set; } Property Value Type Description Action < String , String > PreserveRawInlineComments Declaration bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean Source Declaration SourceDetail Source { get; set; } Property Value Type Description SourceDetail Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutCheckAndCleanup.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutCheckAndCleanup.html",
    "title": "Class LayoutCheckAndCleanup | DocFX website",
    "keywords": "Class LayoutCheckAndCleanup Inheritance Object LayoutCheckAndCleanup Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class LayoutCheckAndCleanup : IResolverPipeline Methods Run(MetadataModel, ResolverContext) The yaml layout should be namespace -- class level -- method level Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutItem.html",
    "title": "Enum LayoutItem | DocFX website",
    "keywords": "Enum LayoutItem Defines the layout for an API page Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public enum LayoutItem Fields Name Description Exception ExternalComments Hierarchy InlineComments MemberTable SeeAlso Syntax Title Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.LinkItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.LinkItem.html",
    "title": "Class LinkItem | DocFX website",
    "keywords": "Class LinkItem Inheritance Object LinkItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class LinkItem Properties DisplayName Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string DisplayName { get; set; } Property Value Type Description String DisplayNamesWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string DisplayNamesWithType { get; set; } Property Value Type Description String DisplayQualifiedNames Declaration [YamlMember(Alias = \"qualifiedName\")] [JsonProperty(\"qualifiedName\")] public string DisplayQualifiedNames { get; set; } Property Value Type Description String Href The url path for current source, should be resolved at some late stage Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String IsExternalPath The external path for current source if it is not locally available Declaration [YamlMember(Alias = \"isExternal\")] [JsonProperty(\"isExternal\")] public bool IsExternalPath { get; set; } Property Value Type Description Boolean Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String Methods Clone() Declaration public LinkItem Clone() Returns Type Description LinkItem Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) YamlViewModelExtensions.ToSpecViewModel(LinkItem)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.MergeCommentsHelper.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.MergeCommentsHelper.html",
    "title": "Class MergeCommentsHelper | DocFX website",
    "keywords": "Class MergeCommentsHelper Inheritance Object MergeCommentsHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class MergeCommentsHelper Methods MergeComments(IEnumerable<MetadataItem>, IEnumerable<String>) Declaration public static void MergeComments(IEnumerable<MetadataItem> items, IEnumerable<string> commentFiles) Parameters Type Name Description IEnumerable < MetadataItem > items IEnumerable < String > commentFiles"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem.html",
    "title": "Class MetadataItem | DocFX website",
    "keywords": "Class MetadataItem Inheritance Object MetadataItem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class MetadataItem : ICloneable Properties AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] [MergeOption(MergeOption.Ignore)] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String CommentModel Declaration [YamlIgnore] [JsonIgnore] public TripleSlashCommentModel CommentModel { get; set; } Property Value Type Description TripleSlashCommentModel DerivedClasses Declaration [YamlMember(Alias = \"derivedClasses\")] [JsonProperty(\"derivedClasses\")] public List<string> DerivedClasses { get; set; } Property Value Type Description List < String > DisplayNames Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public SortedList<SyntaxLanguage, string> DisplayNames { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > DisplayNamesWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public SortedList<SyntaxLanguage, string> DisplayNamesWithType { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > DisplayQualifiedNames Declaration [YamlMember(Alias = \"qualifiedName\")] [JsonProperty(\"qualifiedName\")] public SortedList<SyntaxLanguage, string> DisplayQualifiedNames { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ExceptionInfo> Exceptions { get; set; } Property Value Type Description List < ExceptionInfo > ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<string> ExtensionMethods { get; set; } Property Value Type Description List < String > Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<string> Implements { get; set; } Property Value Type Description List < String > Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<string> Inheritance { get; set; } Property Value Type Description List < String > InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<string> InheritedMembers { get; set; } Property Value Type Description List < String > IsExplicitInterfaceImplementation Declaration [YamlMember(Alias = \"isEii\")] [JsonProperty(\"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean IsInheritDoc Declaration [YamlIgnore] [JsonIgnore] public bool IsInheritDoc { get; set; } Property Value Type Description Boolean IsInvalid Declaration [YamlIgnore] [JsonIgnore] public bool IsInvalid { get; set; } Property Value Type Description Boolean Items Declaration [YamlMember(Alias = \"items\")] [JsonProperty(\"items\")] public List<MetadataItem> Items { get; set; } Property Value Type Description List < MetadataItem > Language Declaration [YamlMember(Alias = \"language\")] [JsonProperty(\"language\")] public SyntaxLanguage Language { get; set; } Property Value Type Description SyntaxLanguage Layout Declaration public List<LayoutItem> Layout { get; set; } Property Value Type Description List < LayoutItem > Modifiers Declaration [YamlMember(Alias = \"modifiers\")] [JsonProperty(\"modifiers\")] public SortedList<SyntaxLanguage, List<string>> Modifiers { get; set; } Property Value Type Description SortedList < SyntaxLanguage , List < String >> Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public string NamespaceName { get; set; } Property Value Type Description String Overload Declaration [YamlMember(Alias = \"overload\")] [JsonProperty(\"overload\")] public string Overload { get; set; } Property Value Type Description String Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public string Overridden { get; set; } Property Value Type Description String Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public MetadataItem Parent { get; set; } Property Value Type Description MetadataItem RawComment Declaration [YamlIgnore] [JsonIgnore] public string RawComment { get; set; } Property Value Type Description String References Declaration [YamlMember(Alias = \"references\")] [JsonProperty(\"references\")] public Dictionary<string, ReferenceItem> References { get; set; } Property Value Type Description Dictionary < String , ReferenceItem > Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<LinkInfo> SeeAlsos { get; set; } Property Value Type Description List < LinkInfo > Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<LinkInfo> Sees { get; set; } Property Value Type Description List < LinkInfo > Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public SyntaxDetail Syntax { get; set; } Property Value Type Description SyntaxDetail Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public MemberType Type { get; set; } Property Value Type Description MemberType Methods Clone() Declaration public object Clone() Returns Type Description Object Implements ICloneable.Clone() CopyInheritedData(MetadataItem) Declaration public void CopyInheritedData(MetadataItem src) Parameters Type Name Description MetadataItem src ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) YamlViewModelExtensions.ShrinkToSimpleToc(MetadataItem) YamlViewModelExtensions.ShrinkToSimpleTocWithNamespaceNotEmpty(MetadataItem) YamlViewModelExtensions.ToTocViewModel(MetadataItem) YamlViewModelExtensions.ToTocItemViewModel(MetadataItem) YamlViewModelExtensions.ToPageViewModel(MetadataItem) YamlViewModelExtensions.ToItemViewModel(MetadataItem)"
  },
  "api/Microsoft.DocAsCode.Plugins.IDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IDocumentProcessor.html",
    "title": "Interface IDocumentProcessor | DocFX website",
    "keywords": "Interface IDocumentProcessor Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IDocumentProcessor Properties BuildSteps Declaration IEnumerable<IDocumentBuildStep> BuildSteps { get; } Property Value Type Description IEnumerable < IDocumentBuildStep > Name Declaration string Name { get; } Property Value Type Description String Methods GetProcessingPriority(FileAndType) Declaration ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Load(FileAndType, ImmutableDictionary<String, Object>) Declaration FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Save(FileModel) Declaration SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult UpdateHref(FileModel, IDocumentBuildContext) Declaration void UpdateHref(FileModel model, IDocumentBuildContext context) Parameters Type Name Description FileModel model IDocumentBuildContext context Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IFileAbstractLayer.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IFileAbstractLayer.html",
    "title": "Interface IFileAbstractLayer | DocFX website",
    "keywords": "Interface IFileAbstractLayer Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IFileAbstractLayer Properties CanRead Declaration bool CanRead { get; } Property Value Type Description Boolean CanWrite Declaration bool CanWrite { get; } Property Value Type Description Boolean Methods Copy(String, String) Declaration void Copy(string sourceFileName, string destFileName) Parameters Type Name Description String sourceFileName String destFileName Create(String) Declaration Stream Create(string file) Parameters Type Name Description String file Returns Type Description Stream Exists(String) Declaration bool Exists(string file) Parameters Type Name Description String file Returns Type Description Boolean GetAllInputFiles() Declaration IEnumerable<string> GetAllInputFiles() Returns Type Description IEnumerable < String > GetPhysicalPath(String) Declaration string GetPhysicalPath(string file) Parameters Type Name Description String file Returns Type Description String GetProperties(String) Declaration ImmutableDictionary<string, string> GetProperties(string file) Parameters Type Name Description String file Returns Type Description System.Collections.Immutable.ImmutableDictionary < String , String > OpenRead(String) Declaration Stream OpenRead(string file) Parameters Type Name Description String file Returns Type Description Stream Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) FileAbstractLayerExtensions.OpenReadText(IFileAbstractLayer, String) FileAbstractLayerExtensions.ReadAllText(IFileAbstractLayer, String) FileAbstractLayerExtensions.ReadAllLines(IFileAbstractLayer, String) FileAbstractLayerExtensions.CreateText(IFileAbstractLayer, String) FileAbstractLayerExtensions.WriteAllText(IFileAbstractLayer, String, String) FileAbstractLayerExtensions.HasProperty(IFileAbstractLayer, String, String) FileAbstractLayerExtensions.GetProperty(IFileAbstractLayer, String, String) FileAbstractLayerExtensions.GetAllPhysicalPaths(IFileAbstractLayer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IFileLinkInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IFileLinkInfo.html",
    "title": "Interface IFileLinkInfo | DocFX website",
    "keywords": "Interface IFileLinkInfo Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IFileLinkInfo Properties FileLinkInDest The file link in dest folder. Declaration string FileLinkInDest { get; } Property Value Type Description String FileLinkInSource The file link in source folder. Declaration string FileLinkInSource { get; } Property Value Type Description String FromFileInDest The path of link from file in dest folder. Declaration string FromFileInDest { get; } Property Value Type Description String FromFileInSource The path of link from file in source folder. Declaration string FromFileInSource { get; } Property Value Type Description String Href The href. Declaration string Href { get; } Property Value Type Description String ToFileInDest The path of link to file in dest folder. Declaration string ToFileInDest { get; } Property Value Type Description String ToFileInSource The path of link to file in source folder. Declaration string ToFileInSource { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IHasIncrementalContext.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IHasIncrementalContext.html",
    "title": "Interface IHasIncrementalContext | DocFX website",
    "keywords": "Interface IHasIncrementalContext Declare some object has incremental build context. Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IHasIncrementalContext Methods GetIncrementalContextHash() Get the hash of incremental context, if it is different from latest one then full build. Declaration string GetIncrementalContextHash() Returns Type Description String the hash. Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IHostService.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IHostService.html",
    "title": "Interface IHostService | DocFX website",
    "keywords": "Interface IHostService Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IHostService Properties HasMetadataValidation Declaration bool HasMetadataValidation { get; } Property Value Type Description Boolean IncrementalInfos Declaration ImmutableDictionary<string, FileIncrementalInfo> IncrementalInfos { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , FileIncrementalInfo > Processor Get current IDocumentProcessor . Declaration IDocumentProcessor Processor { get; } Property Value Type Description IDocumentProcessor SourceFiles Declaration ImmutableDictionary<string, FileAndType> SourceFiles { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , FileAndType > TableOfContentRestructions Declaration ImmutableList<TreeItemRestructure> TableOfContentRestructions { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableList < TreeItemRestructure > VersionName current version's name, String.Empty for default version Declaration string VersionName { get; } Property Value Type Description String VersionOutputFolder current version's output base folder Declaration string VersionOutputFolder { get; } Property Value Type Description String Methods GetAllUids() Declaration ImmutableHashSet<string> GetAllUids() Returns Type Description System.Collections.Immutable.ImmutableHashSet < String > GetModels(Nullable<DocumentType>) Declaration ImmutableList<FileModel> GetModels(DocumentType? type = null) Parameters Type Name Description Nullable < DocumentType > type Returns Type Description System.Collections.Immutable.ImmutableList < FileModel > LogDiagnostic(String, String, String) Declaration void LogDiagnostic(string message, string file = null, string line = null) Parameters Type Name Description String message String file String line LogError(String, String, String) Declaration void LogError(string message, string file = null, string line = null) Parameters Type Name Description String message String file String line LogInfo(String, String, String) Declaration void LogInfo(string message, string file = null, string line = null) Parameters Type Name Description String message String file String line LogVerbose(String, String, String) Declaration void LogVerbose(string message, string file = null, string line = null) Parameters Type Name Description String message String file String line LogWarning(String, String, String) Declaration void LogWarning(string message, string file = null, string line = null) Parameters Type Name Description String message String file String line LookupByUid(String) Declaration ImmutableList<FileModel> LookupByUid(string uid) Parameters Type Name Description String uid Returns Type Description System.Collections.Immutable.ImmutableList < FileModel > Markup(String, FileAndType) Declaration MarkupResult Markup(string markdown, FileAndType ft) Parameters Type Name Description String markdown FileAndType ft Returns Type Description MarkupResult Markup(String, FileAndType, Boolean) Declaration MarkupResult Markup(string markdown, FileAndType ft, bool omitParse) Parameters Type Name Description String markdown FileAndType ft Boolean omitParse Returns Type Description MarkupResult Parse(MarkupResult, FileAndType) Declaration MarkupResult Parse(MarkupResult markupResult, FileAndType ft) Parameters Type Name Description MarkupResult markupResult FileAndType ft Returns Type Description MarkupResult ReportDependencyFrom(FileModel, String, String) report dependency from Declaration void ReportDependencyFrom(FileModel currentFileModel, string from, string type) Parameters Type Name Description FileModel currentFileModel filemodel of 'to' node String from 'from' node's file path from working directory or file path relative to 'to' filemodel String type dependency type ReportDependencyFrom(FileModel, String, String, String) report dependency from Declaration void ReportDependencyFrom(FileModel currentFileModel, string from, string fromType, string type) Parameters Type Name Description FileModel currentFileModel filemodel of 'to' node String from 'from' node's value String fromType 'from' node's type, it could be file or reference type String type dependency type ReportDependencyTo(FileModel, String, String) report dependency to Declaration void ReportDependencyTo(FileModel currentFileModel, string to, string type) Parameters Type Name Description FileModel currentFileModel filemodel of 'from' node String to 'to' node's file path from working directory or file path relative to 'from' filemodel String type dependency type ReportDependencyTo(FileModel, String, String, String) report dependency to Declaration void ReportDependencyTo(FileModel currentFileModel, string to, string toType, string type) Parameters Type Name Description FileModel currentFileModel filemodel of 'from' node String to 'to' node's value String toType 'to' node's type, it could be file or reference type String type dependency type ReportReference(FileModel, String, String) report reference Declaration void ReportReference(FileModel currentFileModel, string reference, string referenceType) Parameters Type Name Description FileModel currentFileModel filemodel String reference the reference that the 'filemodel' could provide String referenceType the type of the reference ValidateInputMetadata(String, ImmutableDictionary<String, Object>) Declaration void ValidateInputMetadata(string file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description String file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IInputMetadataValidator.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IInputMetadataValidator.html",
    "title": "Interface IInputMetadataValidator | DocFX website",
    "keywords": "Interface IInputMetadataValidator Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IInputMetadataValidator Methods Validate(String, ImmutableDictionary<String, Object>) Declaration void Validate(string sourceFile, ImmutableDictionary<string, object> metadata) Parameters Type Name Description String sourceFile System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IMarkdownService.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IMarkdownService.html",
    "title": "Interface IMarkdownService | DocFX website",
    "keywords": "Interface IMarkdownService Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IMarkdownService Methods Markup(String, String) Declaration MarkupResult Markup(string src, string path) Parameters Type Name Description String src String path Returns Type Description MarkupResult Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IMarkdownServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IMarkdownServiceProvider.html",
    "title": "Interface IMarkdownServiceProvider | DocFX website",
    "keywords": "Interface IMarkdownServiceProvider Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IMarkdownServiceProvider Methods CreateMarkdownService(MarkdownServiceParameters) Declaration IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AssemblyUsageAttribute.html": {
    "href": "api/Microsoft.DocAsCode.AssemblyUsageAttribute.html",
    "title": "Class AssemblyUsageAttribute | DocFX website",
    "keywords": "Class AssemblyUsageAttribute Inheritance Object Attribute CustomAssemblyTextAttribute AssemblyUsageAttribute Inherited Members CustomAssemblyTextAttribute.Value Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class AssemblyUsageAttribute : CustomAssemblyTextAttribute, _Attribute Constructors AssemblyUsageAttribute(String[]) Declaration public AssemblyUsageAttribute(params string[] lines) Parameters Type Name Description String [] lines Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationEngineBuilder.html",
    "title": "Class AzureMigrationEngineBuilder | DocFX website",
    "keywords": "Class AzureMigrationEngineBuilder Inheritance Object MarkdownEngineBuilder GfmEngineBuilder AzureMigrationEngineBuilder Inherited Members MarkdownEngineBuilder.Options MarkdownEngineBuilder.BlockRules MarkdownEngineBuilder.InlineRules MarkdownEngineBuilder.Rewriter MarkdownEngineBuilder.TokenTreeValidator MarkdownEngineBuilder.CreateParseContext() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationEngineBuilder : GfmEngineBuilder Constructors AzureMigrationEngineBuilder(Options) Declaration public AzureMigrationEngineBuilder(Options options) Parameters Type Name Description Options options Methods BuildBlockRules() Declaration protected override void BuildBlockRules() Overrides GfmEngineBuilder.BuildBlockRules() BuildInlineRules() Declaration protected override void BuildInlineRules() Overrides GfmEngineBuilder.BuildInlineRules() BuildRules() Declaration protected override void BuildRules() Overrides GfmEngineBuilder.BuildRules() CreateEngine(Object) Declaration public override IMarkdownEngine CreateEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description IMarkdownEngine Overrides MarkdownEngineBuilder.CreateEngine(Object) CreateRewriters() Declaration protected void CreateRewriters() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationHtmlMetadataBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationHtmlMetadataBlockRule.html",
    "title": "Class AzureMigrationHtmlMetadataBlockRule | DocFX website",
    "keywords": "Class AzureMigrationHtmlMetadataBlockRule Inheritance Object AzureMigrationHtmlMetadataBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationHtmlMetadataBlockRule : IMarkdownRule Properties AzureHtmlMetadataRegex Declaration public virtual Regex AzureHtmlMetadataRegex { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockToken.html",
    "title": "Class AzureSelectorBlockToken | DocFX website",
    "keywords": "Class AzureSelectorBlockToken Inheritance Object AzureSelectorBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureSelectorBlockToken : IMarkdownToken Constructors AzureSelectorBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public AzureSelectorBlockToken(IMarkdownRule rule, IMarkdownContext context, string selectorType, string selectorConditions, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String selectorType String selectorConditions SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SelectorConditions Declaration public string SelectorConditions { get; } Property Value Type Description String SelectorType Declaration public string SelectorType { get; } Property Value Type Description String SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.ApplyOverwriteDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.ApplyOverwriteDocument.html",
    "title": "Class ApplyOverwriteDocument | DocFX website",
    "keywords": "Class ApplyOverwriteDocument Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument ApplyOverwriteDocumentForMref ApplyOverwriteDocumentForRestApi Inherited Members BaseDocumentBuildStep.Name BaseDocumentBuildStep.BuildOrder BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class ApplyOverwriteDocument : BaseDocumentBuildStep, IDocumentBuildStep Constructors ApplyOverwriteDocument() Declaration protected ApplyOverwriteDocument() Methods ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) Declaration protected abstract void ApplyOverwrite(IHostService host, List<FileModel> overwrites, string uid, List<FileModel> articles) Parameters Type Name Description IHostService host List < FileModel > overwrites String uid List < FileModel > articles ApplyOverwrite<T>(IHostService, List<FileModel>, String, List<FileModel>, Func<FileModel, String, IHostService, IEnumerable<T>>, Func<FileModel, String, IHostService, IEnumerable<T>>) Declaration protected void ApplyOverwrite<T>(IHostService host, List<FileModel> overwrites, string uid, List<FileModel> articles, Func<FileModel, string, IHostService, IEnumerable<T>> getItemsFromOverwriteDocument, Func<FileModel, string, IHostService, IEnumerable<T>> getItemsToOverwrite)where T : class, IOverwriteDocumentViewModel Parameters Type Name Description IHostService host List < FileModel > overwrites String uid List < FileModel > articles Func < FileModel , String , IHostService , IEnumerable <T>> getItemsFromOverwriteDocument Func < FileModel , String , IHostService , IEnumerable <T>> getItemsToOverwrite Type Parameters Name Description T ApplyOverwrites(ImmutableList<FileModel>, IHostService) Declaration protected virtual void ApplyOverwrites(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host GetMerger() Declaration protected virtual IMerger GetMerger() Returns Type Description IMerger Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Overrides BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIDictionaryItems-2.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIDictionaryItems-2.html",
    "title": "Class HandleGenericItemsHelper.EnumerateIDictionaryItems<TKey, TValue> | DocFX website",
    "keywords": "Class HandleGenericItemsHelper.EnumerateIDictionaryItems<TKey, TValue> Inheritance Object HandleGenericItemsHelper.EnumerateIDictionaryItems<TKey, TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public sealed class EnumerateIDictionaryItems<TKey, TValue> : HandleGenericItemsHelper.IHandleItems Type Parameters Name Description TKey TValue Constructors EnumerateIDictionaryItems(IDictionary<TKey, TValue>) Declaration public EnumerateIDictionaryItems(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict Methods Handle(Func<Object, Object>) Declaration public void Handle(Func<object, object> enumerate) Parameters Type Name Description Func < Object , Object > enumerate Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.MarkdownContentHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.MarkdownContentHandler.html",
    "title": "Class MarkdownContentHandler | DocFX website",
    "keywords": "Class MarkdownContentHandler Inheritance Object MarkdownContentHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class MarkdownContentHandler : IModelAttributeHandler Methods Handle(Object, HandleModelAttributesContext) Declaration public object Handle(object obj, HandleModelAttributesContext context) Parameters Type Name Description Object obj HandleModelAttributesContext context Returns Type Description Object Implements IModelAttributeHandler.Handle(Object, HandleModelAttributesContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.YamlHtmlPart.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.YamlHtmlPart.html",
    "title": "Class YamlHtmlPart | DocFX website",
    "keywords": "Class YamlHtmlPart Inheritance Object YamlHtmlPart Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class YamlHtmlPart Properties Conceptual Declaration public string Conceptual { get; set; } Property Value Type Description String EndLine Declaration public int EndLine { get; set; } Property Value Type Description Int32 FileLinkSources Declaration public ImmutableDictionary<string, ImmutableList<LinkSourceInfo>> FileLinkSources { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , System.Collections.Immutable.ImmutableList < LinkSourceInfo >> Html Declaration public string Html { get; set; } Property Value Type Description String LinkToFiles Declaration public ImmutableArray<string> LinkToFiles { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > LinkToUids Declaration public ImmutableHashSet<string> LinkToUids { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableHashSet < String > Origin Declaration public MarkupResult Origin { get; set; } Property Value Type Description MarkupResult SourceFile Declaration public string SourceFile { get; set; } Property Value Type Description String StartLine Declaration public int StartLine { get; set; } Property Value Type Description Int32 UidLinkSources Declaration public ImmutableDictionary<string, ImmutableList<LinkSourceInfo>> UidLinkSources { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , System.Collections.Immutable.ImmutableList < LinkSourceInfo >> YamlHeader Declaration public ImmutableDictionary<string, object> YamlHeader { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Methods SplitYamlHtml(MarkupResult) Declaration public static IList<YamlHtmlPart> SplitYamlHtml(MarkupResult origin) Parameters Type Name Description MarkupResult origin Returns Type Description IList < YamlHtmlPart > ToMarkupResult() Declaration public MarkupResult ToMarkupResult() Returns Type Description MarkupResult Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ConceptualDocuments | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ConceptualDocuments Classes BuildConceptualDocument ConceptualDocumentProcessor CountWord ValidateConceptualDocumentMetadata"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateOptions.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateOptions.html",
    "title": "Enum ApplyTemplateOptions | DocFX website",
    "keywords": "Enum ApplyTemplateOptions Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Flags] public enum ApplyTemplateOptions Fields Name Description All ExportRawModel ExportViewModel None TransformDocument Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ExtractSearchIndex.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ExtractSearchIndex.html",
    "title": "Class ExtractSearchIndex | DocFX website",
    "keywords": "Class ExtractSearchIndex Inheritance Object ExtractSearchIndex Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"ExtractSearchIndex\", typeof (IPostProcessor))] public class ExtractSearchIndex : IPostProcessor Fields IndexFileName Declaration public const string IndexFileName = \"index.json\" Field Value Type Description String Properties Name Declaration public string Name { get; } Property Value Type Description String Methods PrepareMetadata(ImmutableDictionary<String, Object>) Declaration public ImmutableDictionary<string, object> PrepareMetadata(ImmutableDictionary<string, object> metadata) Parameters Type Name Description System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Implements IPostProcessor.PrepareMetadata(ImmutableDictionary<String, Object>) Process(Manifest, String) Declaration public Manifest Process(Manifest manifest, string outputFolder) Parameters Type Name Description Manifest manifest String outputFolder Returns Type Description Manifest Implements IPostProcessor.Process(Manifest, String) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.FileCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.FileCollection.html",
    "title": "Class FileCollection | DocFX website",
    "keywords": "Class FileCollection Inheritance Object FileCollection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class FileCollection Constructors FileCollection(FileCollection) Declaration public FileCollection(FileCollection collection) Parameters Type Name Description FileCollection collection FileCollection(String) Declaration public FileCollection(string defaultBaseDir) Parameters Type Name Description String defaultBaseDir Properties Count Declaration public int Count { get; } Property Value Type Description Int32 DefaultBaseDir Declaration public string DefaultBaseDir { get; set; } Property Value Type Description String Methods Add(DocumentType, IEnumerable<String>, String, String) Declaration public void Add(DocumentType type, IEnumerable<string> files, string sourceDir = null, string destinationDir = null) Parameters Type Name Description DocumentType type IEnumerable < String > files String sourceDir String destinationDir Add(DocumentType, String, IEnumerable<String>, String, String) Declaration public void Add(DocumentType type, string baseDir, IEnumerable<string> files, string sourceDir = null, string destinationDir = null) Parameters Type Name Description DocumentType type String baseDir IEnumerable < String > files String sourceDir String destinationDir EnumerateFiles() Declaration public IEnumerable<FileAndType> EnumerateFiles() Returns Type Description IEnumerable < FileAndType > RemoveAll(Predicate<FileAndType>) Declaration public void RemoveAll(Predicate<FileAndType> match) Parameters Type Name Description Predicate < FileAndType > match Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeKind.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeKind.html",
    "title": "Enum ChangeKind | DocFX website",
    "keywords": "Enum ChangeKind Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public enum ChangeKind Fields Name Description Created Deleted None Updated Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeKindWithDependency.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeKindWithDependency.html",
    "title": "Enum ChangeKindWithDependency | DocFX website",
    "keywords": "Enum ChangeKindWithDependency Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public enum ChangeKindWithDependency Fields Name Description Created Deleted DependencyUpdated None Updated Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockRule.html",
    "title": "Class AzureHtmlMetadataBlockRule | DocFX website",
    "keywords": "Class AzureHtmlMetadataBlockRule Inheritance Object AzureHtmlMetadataBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureHtmlMetadataBlockRule : IMarkdownRule Properties AzureHtmlMetadataRegex Declaration public virtual Regex AzureHtmlMetadataRegex { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarked.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarked.html",
    "title": "Class AzureMarked | DocFX website",
    "keywords": "Class AzureMarked Inheritance Object AzureMarked Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMarked Methods Markup(String, String, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureVideoInfo>, IReadOnlyDictionary<String, AzureFileInfo>) Declaration public static string Markup(string src, string path = null, IReadOnlyDictionary<string, AzureFileInfo> azureMarkdownFileInfoMapping = null, IReadOnlyDictionary<string, AzureVideoInfo> azureVideoInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureResourceFileInfoMapping = null) Parameters Type Name Description String src String path IReadOnlyDictionary < String , AzureFileInfo > azureMarkdownFileInfoMapping IReadOnlyDictionary < String , AzureVideoInfo > azureVideoInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureResourceFileInfoMapping Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineToken.html",
    "title": "Class AzureMigrationIncludeInlineToken | DocFX website",
    "keywords": "Class AzureMigrationIncludeInlineToken Inheritance Object AzureMigrationIncludeBasicToken AzureMigrationIncludeInlineToken Inherited Members AzureMigrationIncludeBasicToken.Rule AzureMigrationIncludeBasicToken.Context AzureMigrationIncludeBasicToken.Name AzureMigrationIncludeBasicToken.Src AzureMigrationIncludeBasicToken.Title AzureMigrationIncludeBasicToken.SourceInfo Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeInlineToken : AzureMigrationIncludeBasicToken, IMarkdownToken Constructors AzureMigrationIncludeInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration public AzureMigrationIncludeInlineToken(IMarkdownRule rule, IMarkdownContext context, string name, string src, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String src String title SourceInfo sourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockRule.html",
    "title": "Class AzureVideoBlockRule | DocFX website",
    "keywords": "Class AzureVideoBlockRule Inheritance Object AzureVideoBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureVideoBlockRule : IMarkdownRule Properties AzureVideoRegex Declaration public virtual Regex AzureVideoRegex { get; } Property Value Type Description Regex Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.BaseModelAttributeHandler-1.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.BaseModelAttributeHandler-1.html",
    "title": "Class BaseModelAttributeHandler<T> | DocFX website",
    "keywords": "Class BaseModelAttributeHandler<T> Inheritance Object BaseModelAttributeHandler<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class BaseModelAttributeHandler<T> : IModelAttributeHandler where T : Attribute Type Parameters Name Description T Constructors BaseModelAttributeHandler(Type, IModelAttributeHandler) Declaration protected BaseModelAttributeHandler(Type type, IModelAttributeHandler handler) Parameters Type Name Description Type type IModelAttributeHandler handler Fields Handler Declaration protected readonly IModelAttributeHandler Handler Field Value Type Description IModelAttributeHandler Methods GetProps(Type) Declaration protected virtual IEnumerable<BaseModelAttributeHandler<T>.PropInfo> GetProps(Type type) Parameters Type Name Description Type type Returns Type Description IEnumerable < BaseModelAttributeHandler.PropInfo <>> Handle(Object, HandleModelAttributesContext) Declaration public object Handle(object obj, HandleModelAttributesContext context) Parameters Type Name Description Object obj HandleModelAttributesContext context Returns Type Description Object Implements IModelAttributeHandler.Handle(Object, HandleModelAttributesContext) HandleCurrent(Object, Object, PropertyInfo, HandleModelAttributesContext) Declaration protected abstract object HandleCurrent(object currentObj, object declaringObject, PropertyInfo currentPropertyInfo, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj Object declaringObject PropertyInfo currentPropertyInfo HandleModelAttributesContext context Returns Type Description Object HandleDictionaryType(Object, HandleModelAttributesContext) By default enumerate Dictionary's value if it does not have defined Attribute Declaration protected virtual object HandleDictionaryType(object currentObj, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj HandleModelAttributesContext context Returns Type Description Object HandleIEnumerableType(Object, HandleModelAttributesContext) By default enumerate Enumerable type if it does not have defined Attribute Declaration protected virtual object HandleIEnumerableType(object currentObj, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj HandleModelAttributesContext context Returns Type Description Object ProcessNonPrimitiveType(Object, HandleModelAttributesContext) By default step into NonPrimitive type if it does not have defined Attribute Declaration protected virtual object ProcessNonPrimitiveType(object currentObj, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj HandleModelAttributesContext context Returns Type Description Object ProcessPrimitiveType(Object, HandleModelAttributesContext) By default skip Primitive type if it does not have defined Attribute Declaration protected virtual object ProcessPrimitiveType(object currentObj, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj HandleModelAttributesContext context Returns Type Description Object ShouldHandle(Object, Object, BaseModelAttributeHandler<T>.PropInfo, HandleModelAttributesContext) Declaration protected virtual bool ShouldHandle(object currentObj, object declaringObject, BaseModelAttributeHandler<T>.PropInfo currentPropInfo, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj Object declaringObject BaseModelAttributeHandler.PropInfo <> currentPropInfo HandleModelAttributesContext context Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.HandleIDictionaryItems-2.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.HandleIDictionaryItems-2.html",
    "title": "Class HandleGenericItemsHelper.HandleIDictionaryItems<TKey, TValue> | DocFX website",
    "keywords": "Class HandleGenericItemsHelper.HandleIDictionaryItems<TKey, TValue> Inheritance Object HandleGenericItemsHelper.HandleIDictionaryItems<TKey, TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public sealed class HandleIDictionaryItems<TKey, TValue> : HandleGenericItemsHelper.IHandleItems Type Parameters Name Description TKey TValue Constructors HandleIDictionaryItems(IDictionary<TKey, TValue>) Declaration public HandleIDictionaryItems(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict Methods Handle(Func<Object, Object>) Declaration public void Handle(Func<object, object> handler) Parameters Type Name Description Func < Object , Object > handler Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentModel.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentModel.html",
    "title": "Class OverwriteDocumentModel | DocFX website",
    "keywords": "Class OverwriteDocumentModel Inheritance Object OverwriteDocumentModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax [Serializable] public class OverwriteDocumentModel Properties Conceptual The markdown content from the overwrite document Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String Documentation The details for current overwrite document, containing the start/end line numbers, file path, and git info. Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail FileLinkSources Link sources information for file Declaration [YamlIgnore] [JsonIgnore] public Dictionary<string, List<LinkSourceInfo>> FileLinkSources { get; set; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> LinkToFiles Links to other files Declaration [YamlIgnore] [JsonIgnore] public HashSet<string> LinkToFiles { get; set; } Property Value Type Description HashSet < String > LinkToUids Links to other Uids Declaration [YamlIgnore] [JsonIgnore] public HashSet<string> LinkToUids { get; set; } Property Value Type Description HashSet < String > Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Uid The uid for this overwrite document, as defined in YAML header Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String UidLinkSources Link sources information for Uid Declaration [YamlIgnore] [JsonIgnore] public Dictionary<string, List<LinkSourceInfo>> UidLinkSources { get; set; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> Methods ConvertTo<T>() Declaration public T ConvertTo<T>()where T : class Returns Type Description T Type Parameters Name Description T Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ConceptualDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ConceptualDocumentProcessor.html",
    "title": "Class ConceptualDocumentProcessor | DocFX website",
    "keywords": "Class ConceptualDocumentProcessor Inheritance Object DisposableDocumentProcessor ConceptualDocumentProcessor Inherited Members DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ConceptualDocuments Assembly :Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(typeof (IDocumentProcessor))] public class ConceptualDocumentProcessor : DisposableDocumentProcessor, IDisposable, ISupportIncrementalDocumentProcessor, IDocumentProcessor Constructors ConceptualDocumentProcessor() Declaration public ConceptualDocumentProcessor() Properties BuildSteps Declaration [ImportMany(\"ConceptualDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps Implements IDocumentProcessor.BuildSteps Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Implements IDocumentProcessor.Name Methods DeserializeModel(Stream) Declaration protected virtual object DeserializeModel(Stream stream) Parameters Type Name Description Stream stream Returns Type Description Object DeserializeProperties(Stream) Declaration protected virtual IDictionary<string, object> DeserializeProperties(Stream stream) Parameters Type Name Description Stream stream Returns Type Description IDictionary < String , Object > GetIncrementalContextHash() Declaration public virtual string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalDocumentProcessor.GetIncrementalContextHash() GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Overrides DisposableDocumentProcessor.GetProcessingPriority(FileAndType) Implements IDocumentProcessor.GetProcessingPriority(FileAndType) GetSerializer() Declaration protected virtual JsonSerializer GetSerializer() Returns Type Description Newtonsoft.Json.JsonSerializer Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides DisposableDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) Implements IDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) LoadIntermediateModel(Stream) Declaration public virtual FileModel LoadIntermediateModel(Stream stream) Parameters Type Name Description Stream stream Returns Type Description FileModel Implements ISupportIncrementalDocumentProcessor.LoadIntermediateModel(Stream) Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides DisposableDocumentProcessor.Save(FileModel) Implements IDocumentProcessor.Save(FileModel) SaveIntermediateModel(FileModel, Stream) Declaration public virtual void SaveIntermediateModel(FileModel model, Stream stream) Parameters Type Name Description FileModel model Stream stream Implements ISupportIncrementalDocumentProcessor.SaveIntermediateModel(FileModel, Stream) SerializeModel(Object, Stream) Declaration protected virtual void SerializeModel(object model, Stream stream) Parameters Type Name Description Object model Stream stream SerializeProperties(IDictionary<String, Object>, Stream) Declaration protected virtual void SerializeProperties(IDictionary<string, object> properties, Stream stream) Parameters Type Name Description IDictionary < String , Object > properties Stream stream Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.html",
    "title": "Class DfmServiceProvider | DocFX website",
    "keywords": "Class DfmServiceProvider Inheritance Object DfmServiceProvider DfmLegacyServiceProvider Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"dfm-latest\", typeof (IMarkdownServiceProvider))] [Export(\"dfm-2.15\", typeof (IMarkdownServiceProvider))] public class DfmServiceProvider : IMarkdownServiceProvider Properties DfmEngineCustomizers Declaration [ImportMany] public IEnumerable<IDfmEngineCustomizer> DfmEngineCustomizers { get; set; } Property Value Type Description IEnumerable < IDfmEngineCustomizer > DfmRendererPartProviders Declaration [ImportMany] public IEnumerable<IDfmCustomizedRendererPartProvider> DfmRendererPartProviders { get; set; } Property Value Type Description IEnumerable < IDfmCustomizedRendererPartProvider > LegacyMode Declaration protected virtual bool LegacyMode { get; } Property Value Type Description Boolean TokenTreeValidator Declaration [ImportMany] public IEnumerable<IMarkdownTokenTreeValidator> TokenTreeValidator { get; set; } Property Value Type Description IEnumerable < IMarkdownTokenTreeValidator > Methods CreateMarkdownService(MarkdownServiceParameters) Declaration public IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService Implements IMarkdownServiceProvider.CreateMarkdownService(MarkdownServiceParameters) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildContext.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildContext.html",
    "title": "Class DocumentBuildContext | DocFX website",
    "keywords": "Class DocumentBuildContext Inheritance Object DocumentBuildContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class DocumentBuildContext : IDocumentBuildContext Constructors DocumentBuildContext(String) Declaration public DocumentBuildContext(string buildOutputFolder) Parameters Type Name Description String buildOutputFolder DocumentBuildContext(String, IEnumerable<FileAndType>, ImmutableArray<String>, ImmutableArray<String>, Int32, String) Declaration public DocumentBuildContext(string buildOutputFolder, IEnumerable<FileAndType> allSourceFiles, ImmutableArray<string> externalReferencePackages, ImmutableArray<string> xrefMaps, int maxParallelism, string baseFolder) Parameters Type Name Description String buildOutputFolder IEnumerable < FileAndType > allSourceFiles System.Collections.Immutable.ImmutableArray < String > externalReferencePackages System.Collections.Immutable.ImmutableArray < String > xrefMaps Int32 maxParallelism String baseFolder DocumentBuildContext(String, IEnumerable<FileAndType>, ImmutableArray<String>, ImmutableArray<String>, Int32, String, String, ApplyTemplateSettings, String) Declaration public DocumentBuildContext(string buildOutputFolder, IEnumerable<FileAndType> allSourceFiles, ImmutableArray<string> externalReferencePackages, ImmutableArray<string> xrefMaps, int maxParallelism, string baseFolder, string versionName, ApplyTemplateSettings applyTemplateSetting, string rootTocPath) Parameters Type Name Description String buildOutputFolder IEnumerable < FileAndType > allSourceFiles System.Collections.Immutable.ImmutableArray < String > externalReferencePackages System.Collections.Immutable.ImmutableArray < String > xrefMaps Int32 maxParallelism String baseFolder String versionName ApplyTemplateSettings applyTemplateSetting String rootTocPath DocumentBuildContext(String, IEnumerable<FileAndType>, ImmutableArray<String>, ImmutableArray<String>, Int32, String, String, ApplyTemplateSettings, String, String) Declaration public DocumentBuildContext(string buildOutputFolder, IEnumerable<FileAndType> allSourceFiles, ImmutableArray<string> externalReferencePackages, ImmutableArray<string> xrefMaps, int maxParallelism, string baseFolder, string versionName, ApplyTemplateSettings applyTemplateSetting, string rootTocPath, string versionFolder) Parameters Type Name Description String buildOutputFolder IEnumerable < FileAndType > allSourceFiles System.Collections.Immutable.ImmutableArray < String > externalReferencePackages System.Collections.Immutable.ImmutableArray < String > xrefMaps Int32 maxParallelism String baseFolder String versionName ApplyTemplateSettings applyTemplateSetting String rootTocPath String versionFolder Properties AllSourceFiles Declaration public ImmutableDictionary<string, FileAndType> AllSourceFiles { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , FileAndType > ApplyTemplateSettings Declaration public ApplyTemplateSettings ApplyTemplateSettings { get; set; } Property Value Type Description ApplyTemplateSettings BuildOutputFolder Declaration public string BuildOutputFolder { get; } Property Value Type Description String ExternalReferencePackages Declaration public ImmutableArray<string> ExternalReferencePackages { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > FileMap Declaration public ConcurrentDictionary<string, string> FileMap { get; } Property Value Type Description ConcurrentDictionary < String , String > MaxParallelism Declaration public int MaxParallelism { get; } Property Value Type Description Int32 RootTocPath Declaration public string RootTocPath { get; } Property Value Type Description String Implements IDocumentBuildContext.RootTocPath TocMap Declaration public ConcurrentDictionary<string, HashSet<string>> TocMap { get; } Property Value Type Description ConcurrentDictionary < String , HashSet < String >> VersionFolder Declaration public string VersionFolder { get; } Property Value Type Description String Implements IDocumentBuildContext.VersionFolder VersionName Declaration public string VersionName { get; } Property Value Type Description String Implements IDocumentBuildContext.VersionName XRef Declaration public HashSet<string> XRef { get; } Property Value Type Description HashSet < String > XRefMapUrls Declaration public ImmutableArray<string> XRefMapUrls { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > XRefSpecMap Declaration public ConcurrentDictionary<string, XRefSpec> XRefSpecMap { get; } Property Value Type Description ConcurrentDictionary < String , XRefSpec > Methods GetFilePath(String) Declaration public string GetFilePath(string key) Parameters Type Name Description String key Returns Type Description String Implements IDocumentBuildContext.GetFilePath(String) GetTocFileKeySet(String) Declaration public IImmutableList<string> GetTocFileKeySet(string key) Parameters Type Name Description String key Returns Type Description System.Collections.Immutable.IImmutableList < String > Implements IDocumentBuildContext.GetTocFileKeySet(String) GetTocInfo() Declaration public IImmutableList<TocInfo> GetTocInfo() Returns Type Description System.Collections.Immutable.IImmutableList < TocInfo > Implements IDocumentBuildContext.GetTocInfo() GetXrefSpec(String) Declaration public XRefSpec GetXrefSpec(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec Implements IDocumentBuildContext.GetXrefSpec(String) RegisterInternalXrefSpec(XRefSpec) Declaration public void RegisterInternalXrefSpec(XRefSpec xrefSpec) Parameters Type Name Description XRefSpec xrefSpec Implements IDocumentBuildContext.RegisterInternalXrefSpec(XRefSpec) RegisterInternalXrefSpecBookmark(String, String) Declaration public void RegisterInternalXrefSpecBookmark(string uid, string bookmark) Parameters Type Name Description String uid String bookmark Implements IDocumentBuildContext.RegisterInternalXrefSpecBookmark(String, String) RegisterToc(String, String) Declaration public void RegisterToc(string tocFileKey, string fileKey) Parameters Type Name Description String tocFileKey String fileKey Implements IDocumentBuildContext.RegisterToc(String, String) RegisterTocInfo(TocInfo) Declaration public void RegisterTocInfo(TocInfo toc) Parameters Type Name Description TocInfo toc Implements IDocumentBuildContext.RegisterTocInfo(TocInfo) ReportExternalXRefSpec(XRefSpec) Declaration public void ReportExternalXRefSpec(XRefSpec spec) Parameters Type Name Description XRefSpec spec ResolveExternalXRefSpec() Declaration public void ResolveExternalXRefSpec() SetFilePath(String, String) Declaration public void SetFilePath(string key, string filePath) Parameters Type Name Description String key String filePath Implements IDocumentBuildContext.SetFilePath(String, String) UpdateHref(String) Declaration public string UpdateHref(string href) Parameters Type Name Description String href Returns Type Description String UpdateHref(String, RelativePath) Declaration public string UpdateHref(string href, RelativePath fromFile) Parameters Type Name Description String href RelativePath fromFile Returns Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildCacheException.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildCacheException.html",
    "title": "Class BuildCacheException | DocFX website",
    "keywords": "Class BuildCacheException Inheritance Object Exception BuildCacheException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class BuildCacheException : Exception, ISerializable, _Exception Constructors BuildCacheException() Declaration public BuildCacheException() BuildCacheException(String) Declaration public BuildCacheException(string message) Parameters Type Name Description String message BuildCacheException(String, Exception) Declaration public BuildCacheException(string message, Exception inner) Parameters Type Name Description String message Exception inner Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildInfo.html",
    "title": "Class BuildInfo | DocFX website",
    "keywords": "Class BuildInfo Inheritance Object BuildInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class BuildInfo Fields FileName Declaration public const string FileName = \"build.info\" Field Value Type Description String Properties BuildStartTime The build start time for this build. Declaration public DateTime BuildStartTime { get; set; } Property Value Type Description DateTime CommitFromSHA The SHA of the current commit from. Declaration public string CommitFromSHA { get; set; } Property Value Type Description String CommitToSHA The SHA of the current commit to. Declaration public string CommitToSHA { get; set; } Property Value Type Description String DirectoryName The directory name from base dir. Declaration public string DirectoryName { get; set; } Property Value Type Description String DocfxVersion The version of docfx. Declaration public string DocfxVersion { get; set; } Property Value Type Description String PluginHash The hash info for all plugins. Declaration public string PluginHash { get; set; } Property Value Type Description String PostProcessInfo The post process information Declaration public PostProcessInfo PostProcessInfo { get; set; } Property Value Type Description PostProcessInfo TemplateHash The hash info for templates. Declaration public string TemplateHash { get; set; } Property Value Type Description String Versions The file info for each version. Declaration public List<BuildVersionInfo> Versions { get; } Property Value Type Description List < BuildVersionInfo > Methods Load(String) Declaration public static BuildInfo Load(string baseDir) Parameters Type Name Description String baseDir Returns Type Description BuildInfo Save(String) Declaration public void Save(string baseDir) Parameters Type Name Description String baseDir Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileMapItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileMapItem.html",
    "title": "Class FileMapItem | DocFX website",
    "keywords": "Class FileMapItem Inheritance Object Dictionary < String , String > OSPlatformSensitiveDictionary < String > FileMapItem Inherited Members Dictionary<String, String>.Add(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) Dictionary<String, String>.Clear() Dictionary<String, String>.ContainsKey(String) Dictionary<String, String>.ContainsValue(String) Dictionary<String, String>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() Dictionary<String, String>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, String>.OnDeserialization(Object) Dictionary<String, String>.Remove(String) Dictionary<String, String>.TryGetValue(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32) Dictionary<String, String>.ICollection.CopyTo(Array, Int32) Dictionary<String, String>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, String>.IDictionary.Add(Object, Object) Dictionary<String, String>.IDictionary.Contains(Object) Dictionary<String, String>.IDictionary.GetEnumerator() Dictionary<String, String>.IDictionary.Remove(Object) Dictionary<String, String>.Comparer Dictionary<String, String>.Count Dictionary<String, String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys Dictionary<String, String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values Dictionary<String, String>.Item[String] System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly Dictionary<String, String>.ICollection.IsSynchronized Dictionary<String, String>.ICollection.SyncRoot Dictionary<String, String>.IDictionary.IsFixedSize Dictionary<String, String>.IDictionary.IsReadOnly Dictionary<String, String>.IDictionary.Keys Dictionary<String, String>.IDictionary.Values Dictionary<String, String>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class FileMapItem : OSPlatformSensitiveDictionary<string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalIgnoreAttribute.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalIgnoreAttribute.html",
    "title": "Class IncrementalIgnoreAttribute | DocFX website",
    "keywords": "Class IncrementalIgnoreAttribute Inheritance Object Attribute IncrementalIgnoreAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine.Incrementals Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field, AllowMultiple = true, Inherited = true)] public class IncrementalIgnoreAttribute : Attribute, _Attribute Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.InvalidPreprocessorException.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.InvalidPreprocessorException.html",
    "title": "Class InvalidPreprocessorException | DocFX website",
    "keywords": "Class InvalidPreprocessorException Inheritance Object Exception DocfxException InvalidPreprocessorException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class InvalidPreprocessorException : DocfxException, ISerializable, _Exception Constructors InvalidPreprocessorException() Declaration public InvalidPreprocessorException() InvalidPreprocessorException(SerializationInfo, StreamingContext) Declaration protected InvalidPreprocessorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context InvalidPreprocessorException(String) Declaration public InvalidPreprocessorException(string message) Parameters Type Name Description String message InvalidPreprocessorException(String, Exception) Declaration public InvalidPreprocessorException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ITemplatePreprocessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ITemplatePreprocessor.html",
    "title": "Interface ITemplatePreprocessor | DocFX website",
    "keywords": "Interface ITemplatePreprocessor Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public interface ITemplatePreprocessor Properties GetOptionsFunc Declaration Func<object, object> GetOptionsFunc { get; } Property Value Type Description Func < Object , Object > TransformModelFunc Declaration Func<object, object> TransformModelFunc { get; } Property Value Type Description Func < Object , Object > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplatePreprocessorResource.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplatePreprocessorResource.html",
    "title": "Class TemplatePreprocessorResource | DocFX website",
    "keywords": "Class TemplatePreprocessorResource Inheritance Object TemplatePreprocessorResource Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplatePreprocessorResource Constructors TemplatePreprocessorResource(String, String) Declaration public TemplatePreprocessorResource(string resourceName, string content) Parameters Type Name Description String resourceName String content Properties Content Declaration public string Content { get; } Property Value Type Description String ResourceName Declaration public string ResourceName { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateProcessor.html",
    "title": "Class TemplateProcessor | DocFX website",
    "keywords": "Class TemplateProcessor Inheritance Object TemplateProcessor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateProcessor : IDisposable Constructors TemplateProcessor(ResourceCollection, DocumentBuildContext, Int32) TemplateName can be either file or folder If TemplateName is file, it is considered as the default template If TemplateName is a folder, files inside the folder is considered as the template, each file is named after {DocumentType}.{extension} Declaration public TemplateProcessor(ResourceCollection resourceProvider, DocumentBuildContext context, int maxParallelism = 0) Parameters Type Name Description ResourceCollection resourceProvider DocumentBuildContext context Int32 maxParallelism Fields DefaultProcessor Declaration public static readonly TemplateProcessor DefaultProcessor Field Value Type Description TemplateProcessor Properties Tokens Declaration public IDictionary<string, string> Tokens { get; } Property Value Type Description IDictionary < String , String > Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() GetTemplateBundle(String) Declaration public TemplateBundle GetTemplateBundle(string documentType) Parameters Type Name Description String documentType Returns Type Description TemplateBundle TryGetFileExtension(String, out String) Declaration public bool TryGetFileExtension(string documentType, out string fileExtension) Parameters Type Name Description String documentType String fileExtension Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMapRedirection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMapRedirection.html",
    "title": "Class XRefMapRedirection | DocFX website",
    "keywords": "Class XRefMapRedirection Inheritance Object XRefMapRedirection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefMapRedirection Properties Href Declaration [YamlMember(Alias = \"href\")] public string Href { get; set; } Property Value Type Description String UidPrefix Declaration [YamlMember(Alias = \"uidPrefix\")] public string UidPrefix { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefRedirectionReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefRedirectionReader.html",
    "title": "Class XRefRedirectionReader | DocFX website",
    "keywords": "Class XRefRedirectionReader Inheritance Object XRefRedirectionReader XRefArchiveReader XRefMapReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public abstract class XRefRedirectionReader : IXRefContainerReader Constructors XRefRedirectionReader(String, HashSet<String>) Declaration protected XRefRedirectionReader(string majorName, HashSet<string> mapNames) Parameters Type Name Description String majorName HashSet < String > mapNames Methods Find(String) Declaration public XRefSpec Find(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec Implements IXRefContainerReader.Find(String) GetMap(String) Declaration protected abstract IXRefContainer GetMap(string name) Parameters Type Name Description String name Returns Type Description IXRefContainer Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Classes ApiBuildOutput ApiBuildOutputUtility ApiExceptionInfoBuildOutput ApiLanguageValuePair ApiLinkInfoBuildOutput ApiNames ApiParameterBuildOutput ApiReferenceBuildOutput ApiSyntaxBuildOutput"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.FillReferenceInformation.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.FillReferenceInformation.html",
    "title": "Class FillReferenceInformation | DocFX website",
    "keywords": "Class FillReferenceInformation Inheritance Object BaseDocumentBuildStep FillReferenceInformation Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof (IDocumentBuildStep))] public class FillReferenceInformation : BaseDocumentBuildStep, ICanTraceContextInfoBuildStep, ISupportIncrementalBuildStep, IDocumentBuildStep Properties BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Implements IDocumentBuildStep.BuildOrder Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Implements IDocumentBuildStep.Name Methods CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuildStep.CanIncrementalBuild(FileAndType) GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > Implements ISupportIncrementalBuildStep.GetDependencyTypesToRegister() GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep.GetIncrementalContextHash() LoadContext(Stream) Declaration public void LoadContext(Stream stream) Parameters Type Name Description Stream stream Implements ICanTraceContextInfoBuildStep.LoadContext(Stream) Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Overrides BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Implements IDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) SaveContext(Stream) Declaration public void SaveContext(Stream stream) Parameters Type Name Description Stream stream Implements ICanTraceContextInfoBuildStep.SaveContext(Stream) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject.html",
    "title": "Class PathItemObject | DocFX website",
    "keywords": "Class PathItemObject TODO: need a converter Inheritance Object PathItemObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class PathItemObject Properties Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Parameters A list of parameters that are applicable for all the operations described under this path. These parameters can be overridden at the operation level, but cannot be removed there. Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ParameterObject> Parameters { get; set; } Property Value Type Description List < ParameterObject > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathsObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathsObject.html",
    "title": "Class PathsObject | DocFX website",
    "keywords": "Class PathsObject Inheritance Object Dictionary < String , PathItemObject > PathsObject Inherited Members Dictionary<String, PathItemObject>.Add(String, PathItemObject) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>) Dictionary<String, PathItemObject>.Clear() Dictionary<String, PathItemObject>.ContainsKey(String) Dictionary<String, PathItemObject>.ContainsValue(PathItemObject) Dictionary<String, PathItemObject>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.GetEnumerator() Dictionary<String, PathItemObject>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, PathItemObject>.OnDeserialization(Object) Dictionary<String, PathItemObject>.Remove(String) Dictionary<String, PathItemObject>.TryGetValue(String, PathItemObject) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>[], System.Int32) Dictionary<String, PathItemObject>.ICollection.CopyTo(Array, Int32) Dictionary<String, PathItemObject>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, PathItemObject>.IDictionary.Add(Object, Object) Dictionary<String, PathItemObject>.IDictionary.Contains(Object) Dictionary<String, PathItemObject>.IDictionary.GetEnumerator() Dictionary<String, PathItemObject>.IDictionary.Remove(Object) Dictionary<String, PathItemObject>.Comparer Dictionary<String, PathItemObject>.Count Dictionary<String, PathItemObject>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Keys Dictionary<String, PathItemObject>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Values Dictionary<String, PathItemObject>.Item[String] System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.IsReadOnly Dictionary<String, PathItemObject>.ICollection.IsSynchronized Dictionary<String, PathItemObject>.ICollection.SyncRoot Dictionary<String, PathItemObject>.IDictionary.IsFixedSize Dictionary<String, PathItemObject>.IDictionary.IsReadOnly Dictionary<String, PathItemObject>.IDictionary.Keys Dictionary<String, PathItemObject>.IDictionary.Values Dictionary<String, PathItemObject>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class PathsObject : Dictionary<string, PathItemObject>, IDictionary<string, PathItemObject>, ICollection<KeyValuePair<string, PathItemObject>>, IDictionary, ICollection, IReadOnlyDictionary<string, PathItemObject>, IReadOnlyCollection<KeyValuePair<string, PathItemObject>>, IEnumerable<KeyValuePair<string, PathItemObject>>, IEnumerable, ISerializable, IDeserializationCallback Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>)"
  },
  "api/Microsoft.DocAsCode.Common.ComputerResource.html": {
    "href": "api/Microsoft.DocAsCode.Common.ComputerResource.html",
    "title": "Class ComputerResource | DocFX website",
    "keywords": "Class ComputerResource Inheritance Object ComputerResource Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax [Serializable] public sealed class ComputerResource : IDisposable Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() GetAvailableCpuResource() Declaration public static int GetAvailableCpuResource() Returns Type Description Int32 GetAvailableDiskIOResource() Declaration public static int GetAvailableDiskIOResource() Returns Type Description Int32 GetAvailableNetworkIOResource() Declaration public static int GetAvailableNetworkIOResource() Returns Type Description Int32 NewThread() Declaration public static ComputerResource NewThread() Returns Type Description ComputerResource Require(ComputerResourceType) Declaration public static ComputerResource Require(ComputerResourceType type) Parameters Type Name Description ComputerResourceType type Returns Type Description ComputerResource SetResources(ComputerResourceCollection) Declaration public static void SetResources(ComputerResourceCollection resources) Parameters Type Name Description ComputerResourceCollection resources Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ComputerResourceCollection.html": {
    "href": "api/Microsoft.DocAsCode.Common.ComputerResourceCollection.html",
    "title": "Class ComputerResourceCollection | DocFX website",
    "keywords": "Class ComputerResourceCollection Inheritance Object ComputerResourceCollection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ComputerResourceCollection Constructors ComputerResourceCollection(Int32, Int32, Int32) Declaration public ComputerResourceCollection(int cpu = 0, int diskIO = 2, int networkIO = 16) Parameters Type Name Description Int32 cpu Int32 diskIO Int32 networkIO Fields DefaultDiskIOThreshold Declaration public const int DefaultDiskIOThreshold = 2 Field Value Type Description Int32 DefaultNetworkIOThreshold Declaration public const int DefaultNetworkIOThreshold = 16 Field Value Type Description Int32 Properties CpuResource Declaration public SemaphoreSlim CpuResource { get; } Property Value Type Description SemaphoreSlim DiskIOResource Declaration public SemaphoreSlim DiskIOResource { get; } Property Value Type Description SemaphoreSlim NetworkIOResource Declaration public SemaphoreSlim NetworkIOResource { get; } Property Value Type Description SemaphoreSlim Methods RequireResource(ComputerResourceType, ComputerResourceType) Declaration public void RequireResource(ComputerResourceType current, ComputerResourceType target) Parameters Type Name Description ComputerResourceType current ComputerResourceType target Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ComputerResourceType.html": {
    "href": "api/Microsoft.DocAsCode.Common.ComputerResourceType.html",
    "title": "Enum ComputerResourceType | DocFX website",
    "keywords": "Enum ComputerResourceType Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax [Flags] public enum ComputerResourceType Fields Name Description Cpu DiskIO NetworkIO None Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ConsoleLogListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.ConsoleLogListener.html",
    "title": "Class ConsoleLogListener | DocFX website",
    "keywords": "Class ConsoleLogListener Inheritance Object ConsoleLogListener Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class ConsoleLogListener : ILoggerListener, IDisposable Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Flush() Declaration public void Flush() Implements ILoggerListener.Flush() WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.Git.html": {
    "href": "api/Microsoft.DocAsCode.Common.Git.html",
    "title": "Namespace Microsoft.DocAsCode.Common.Git | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Common.Git Classes GitDetail GitException GitRepoInfo GitUtility Enums RepoType"
  },
  "api/Microsoft.DocAsCode.Common.HtmlLogListener.MessageSeverity.html": {
    "href": "api/Microsoft.DocAsCode.Common.HtmlLogListener.MessageSeverity.html",
    "title": "Enum HtmlLogListener.MessageSeverity | DocFX website",
    "keywords": "Enum HtmlLogListener.MessageSeverity Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public enum MessageSeverity Fields Name Description Diagnostic Error Info Verbose Warning Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.HtmlLogListener.ReportItem.html": {
    "href": "api/Microsoft.DocAsCode.Common.HtmlLogListener.ReportItem.html",
    "title": "Class HtmlLogListener.ReportItem | DocFX website",
    "keywords": "Class HtmlLogListener.ReportItem Inheritance Object HtmlLogListener.ReportItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ReportItem Properties DateTime Declaration [JsonProperty(\"date_time\")] public DateTime DateTime { get; set; } Property Value Type Description DateTime File Declaration [JsonProperty(\"file\")] public string File { get; set; } Property Value Type Description String Line Declaration [JsonProperty(\"line\")] public string Line { get; set; } Property Value Type Description String Message Declaration [JsonProperty(\"message\")] public string Message { get; set; } Property Value Type Description String Severity Declaration [JsonProperty(\"message_severity\")] public HtmlLogListener.MessageSeverity Severity { get; set; } Property Value Type Description HtmlLogListener.MessageSeverity Source Declaration [JsonProperty(\"source\")] public string Source { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.HtmlLogListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.HtmlLogListener.html",
    "title": "Class HtmlLogListener | DocFX website",
    "keywords": "Class HtmlLogListener Inheritance Object HtmlLogListener Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class HtmlLogListener : ILoggerListener, IDisposable Constructors HtmlLogListener(StreamWriter) Declaration public HtmlLogListener(StreamWriter writer) Parameters Type Name Description StreamWriter writer HtmlLogListener(String) Declaration public HtmlLogListener(string reportPath) Parameters Type Name Description String reportPath Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Escape(String, Boolean) Declaration public string Escape(string html, bool encode = false) Parameters Type Name Description String html Boolean encode Returns Type Description String Flush() Declaration public void Flush() Implements ILoggerListener.Flush() ReplaceRegex(String, Regex, String) Declaration public string ReplaceRegex(string input, Regex pattern, string replacement) Parameters Type Name Description String input Regex pattern String replacement Returns Type Description String WriteCommonHeader() Declaration public void WriteCommonHeader() WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ReportLogListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.ReportLogListener.html",
    "title": "Class ReportLogListener | DocFX website",
    "keywords": "Class ReportLogListener Inheritance Object ReportLogListener Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class ReportLogListener : ILoggerListener, IDisposable Constructors ReportLogListener(StreamWriter, String, String) Declaration public ReportLogListener(StreamWriter writer, string repoRoot, string root) Parameters Type Name Description StreamWriter writer String repoRoot String root ReportLogListener(String, String, String) Declaration public ReportLogListener(string reportPath, string repoRoot, string root) Parameters Type Name Description String reportPath String repoRoot String root Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Flush() Declaration public void Flush() Implements ILoggerListener.Flush() WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ResourceLease-1.html": {
    "href": "api/Microsoft.DocAsCode.Common.ResourceLease-1.html",
    "title": "Class ResourceLease<T> | DocFX website",
    "keywords": "Class ResourceLease<T> Inheritance Object ResourceLease<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class ResourceLease<T> : IDisposable where T : class Type Parameters Name Description T Properties Resource Declaration public T Resource { get; } Property Value Type Description T Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ResourcePool.html": {
    "href": "api/Microsoft.DocAsCode.Common.ResourcePool.html",
    "title": "Class ResourcePool | DocFX website",
    "keywords": "Class ResourcePool Inheritance Object ResourcePool Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class ResourcePool Methods Create<T>(Func<T>, Int32) Declaration public static ResourcePoolManager<T> Create<T>(Func<T> creator, int maxResourceCount)where T : class Parameters Type Name Description Func <T> creator Int32 maxResourceCount Returns Type Description ResourcePoolManager <T> Type Parameters Name Description T Create<T>(Func<Task<T>>, Int32) Declaration public static ResourcePoolAsyncManager<T> Create<T>(Func<Task<T>> creator, int maxResourceCount)where T : class Parameters Type Name Description Func < Task <T>> creator Int32 maxResourceCount Returns Type Description ResourcePoolAsyncManager <T> Type Parameters Name Description T"
  },
  "api/Microsoft.DocAsCode.Common.ResourcePoolAsyncManager-1.html": {
    "href": "api/Microsoft.DocAsCode.Common.ResourcePoolAsyncManager-1.html",
    "title": "Class ResourcePoolAsyncManager<TResource> | DocFX website",
    "keywords": "Class ResourcePoolAsyncManager<TResource> Inheritance Object ResourcePoolAsyncManager<TResource> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ResourcePoolAsyncManager<TResource> : IDisposable where TResource : class Type Parameters Name Description TResource Constructors ResourcePoolAsyncManager(Func<Task<TResource>>, Int32) Declaration public ResourcePoolAsyncManager(Func<Task<TResource>> creator, int maxResourceCount) Parameters Type Name Description Func < Task <TResource>> creator Int32 maxResourceCount Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Finalize() Declaration protected void Finalize() RentAsync() Declaration public Task<ResourceLease<TResource>> RentAsync() Returns Type Description Task < ResourceLease <TResource>> Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.SourceDetail.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.SourceDetail.html",
    "title": "Class SourceDetail | DocFX website",
    "keywords": "Class SourceDetail Inheritance Object SourceDetail Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class SourceDetail Properties BasePath Declaration [YamlMember(Alias = \"base\")] [JsonProperty(\"base\")] public string BasePath { get; set; } Property Value Type Description String Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public string Content { get; set; } Property Value Type Description String EndLine Declaration [YamlMember(Alias = \"endLine\")] [JsonProperty(\"endLine\")] public int EndLine { get; set; } Property Value Type Description Int32 Href The url path for current source, should be resolved at some late stage Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String IsExternalPath The external path for current source if it is not locally available Declaration [YamlMember(Alias = \"isExternal\")] [JsonProperty(\"isExternal\")] public bool IsExternalPath { get; set; } Property Value Type Description Boolean Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String Path The local path for current source, should be resolved to be relative path at some late stage Declaration [YamlMember(Alias = \"path\")] [JsonProperty(\"path\")] public string Path { get; set; } Property Value Type Description String Remote Declaration [YamlMember(Alias = \"remote\")] [JsonProperty(\"remote\")] public GitDetail Remote { get; set; } Property Value Type Description GitDetail StartLine Declaration [YamlMember(Alias = \"startLine\")] [JsonProperty(\"startLine\")] public int StartLine { get; set; } Property Value Type Description Int32 Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.SpecViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.SpecViewModel.html",
    "title": "Class SpecViewModel | DocFX website",
    "keywords": "Class SpecViewModel Inheritance Object SpecViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class SpecViewModel Properties FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public string FullName { get; set; } Property Value Type Description String Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String IsExternal Declaration [YamlMember(Alias = \"isExternal\")] [JsonProperty(\"isExternal\")] public bool IsExternal { get; set; } Property Value Type Description Boolean Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string NameWithType { get; set; } Property Value Type Description String Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel.html",
    "title": "Class TocItemViewModel | DocFX website",
    "keywords": "Class TocItemViewModel Inheritance Object TocItemViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class TocItemViewModel Properties AggregatedHref Declaration [YamlIgnore] [JsonIgnore] public string AggregatedHref { get; set; } Property Value Type Description String AggregatedUid Declaration [YamlIgnore] [JsonIgnore] public string AggregatedUid { get; set; } Property Value Type Description String DisplayName Declaration [YamlMember(Alias = \"displayName\")] [JsonProperty(\"displayName\")] public string DisplayName { get; set; } Property Value Type Description String Homepage Declaration [YamlMember(Alias = \"homepage\")] [JsonProperty(\"homepage\")] public string Homepage { get; set; } Property Value Type Description String HomepageUid Declaration [YamlMember(Alias = \"homepageUid\")] [JsonProperty(\"homepageUid\")] public string HomepageUid { get; set; } Property Value Type Description String Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String IsHrefUpdated Declaration [YamlIgnore] [JsonIgnore] public bool IsHrefUpdated { get; set; } Property Value Type Description Boolean Items Declaration [YamlMember(Alias = \"items\")] [JsonProperty(\"items\")] public TocViewModel Items { get; set; } Property Value Type Description TocViewModel Metadata Declaration [ExtensibleMember] [JsonIgnore] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String NameForCSharp Declaration [YamlIgnore] [JsonIgnore] public string NameForCSharp { get; set; } Property Value Type Description String NameForVB Declaration [YamlIgnore] [JsonIgnore] public string NameForVB { get; set; } Property Value Type Description String NameInDevLangs Declaration [ExtensibleMember(\"name.\")] [JsonIgnore] public SortedList<string, string> NameInDevLangs { get; } Property Value Type Description SortedList < String , String > OriginalHomepage Declaration [YamlIgnore] [JsonIgnore] public string OriginalHomepage { get; set; } Property Value Type Description String OriginalHref Declaration [YamlIgnore] [JsonIgnore] public string OriginalHref { get; set; } Property Value Type Description String OriginalTocHref Declaration [YamlIgnore] [JsonIgnore] public string OriginalTocHref { get; set; } Property Value Type Description String OriginalTopicHref Declaration [YamlIgnore] [JsonIgnore] public string OriginalTopicHref { get; set; } Property Value Type Description String TocHref Declaration [YamlMember(Alias = \"tocHref\")] [JsonProperty(\"tocHref\")] public string TocHref { get; set; } Property Value Type Description String TopicHref Declaration [YamlMember(Alias = \"topicHref\")] [JsonProperty(\"topicHref\")] public string TopicHref { get; set; } Property Value Type Description String TopicUid Declaration [YamlMember(Alias = \"topicUid\")] [JsonProperty(\"topicUid\")] public string TopicUid { get; set; } Property Value Type Description String Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.TocViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.TocViewModel.html",
    "title": "Class TocViewModel | DocFX website",
    "keywords": "Class TocViewModel Inheritance Object List < TocItemViewModel > TocViewModel Inherited Members System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.set_Item(System.Int32, System.Object) List<TocItemViewModel>.Add(TocItemViewModel) List<TocItemViewModel>.IList.Add(Object) List<TocItemViewModel>.AddRange(IEnumerable<TocItemViewModel>) List<TocItemViewModel>.AsReadOnly() List<TocItemViewModel>.BinarySearch(Int32, Int32, TocItemViewModel, IComparer<TocItemViewModel>) List<TocItemViewModel>.BinarySearch(TocItemViewModel) List<TocItemViewModel>.BinarySearch(TocItemViewModel, IComparer<TocItemViewModel>) List<TocItemViewModel>.Clear() List<TocItemViewModel>.Contains(TocItemViewModel) List<TocItemViewModel>.IList.Contains(Object) List<TocItemViewModel>.ConvertAll<TOutput>(Converter<TocItemViewModel, TOutput>) List<TocItemViewModel>.CopyTo(TocItemViewModel[]) List<TocItemViewModel>.ICollection.CopyTo(Array, Int32) List<TocItemViewModel>.CopyTo(Int32, TocItemViewModel[], Int32, Int32) List<TocItemViewModel>.CopyTo(TocItemViewModel[], Int32) List<TocItemViewModel>.Exists(Predicate<TocItemViewModel>) List<TocItemViewModel>.Find(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindAll(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindIndex(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindIndex(Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.FindIndex(Int32, Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLast(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLastIndex(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLastIndex(Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLastIndex(Int32, Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.ForEach(Action<TocItemViewModel>) List<TocItemViewModel>.GetEnumerator() List<TocItemViewModel>.IEnumerable<TocItemViewModel>.GetEnumerator() List<TocItemViewModel>.IEnumerable.GetEnumerator() List<TocItemViewModel>.GetRange(Int32, Int32) List<TocItemViewModel>.IndexOf(TocItemViewModel) List<TocItemViewModel>.IList.IndexOf(Object) List<TocItemViewModel>.IndexOf(TocItemViewModel, Int32) List<TocItemViewModel>.IndexOf(TocItemViewModel, Int32, Int32) List<TocItemViewModel>.Insert(Int32, TocItemViewModel) List<TocItemViewModel>.IList.Insert(Int32, Object) List<TocItemViewModel>.InsertRange(Int32, IEnumerable<TocItemViewModel>) List<TocItemViewModel>.LastIndexOf(TocItemViewModel) List<TocItemViewModel>.LastIndexOf(TocItemViewModel, Int32) List<TocItemViewModel>.LastIndexOf(TocItemViewModel, Int32, Int32) List<TocItemViewModel>.Remove(TocItemViewModel) List<TocItemViewModel>.IList.Remove(Object) List<TocItemViewModel>.RemoveAll(Predicate<TocItemViewModel>) List<TocItemViewModel>.RemoveAt(Int32) List<TocItemViewModel>.RemoveRange(Int32, Int32) List<TocItemViewModel>.Reverse() List<TocItemViewModel>.Reverse(Int32, Int32) List<TocItemViewModel>.Sort() List<TocItemViewModel>.Sort(IComparer<TocItemViewModel>) List<TocItemViewModel>.Sort(Int32, Int32, IComparer<TocItemViewModel>) List<TocItemViewModel>.Sort(Comparison<TocItemViewModel>) List<TocItemViewModel>.ToArray() List<TocItemViewModel>.TrimExcess() List<TocItemViewModel>.TrueForAll(Predicate<TocItemViewModel>) List<TocItemViewModel>.Capacity List<TocItemViewModel>.Count List<TocItemViewModel>.IList.IsFixedSize List<TocItemViewModel>.ICollection<TocItemViewModel>.IsReadOnly List<TocItemViewModel>.IList.IsReadOnly List<TocItemViewModel>.ICollection.IsSynchronized List<TocItemViewModel>.ICollection.SyncRoot List<TocItemViewModel>.Item[Int32] List<TocItemViewModel>.IList.Item[Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class TocViewModel : List<TocItemViewModel>, IList<TocItemViewModel>, ICollection<TocItemViewModel>, IList, ICollection, IReadOnlyList<TocItemViewModel>, IReadOnlyCollection<TocItemViewModel>, IEnumerable<TocItemViewModel>, IEnumerable Constructors TocViewModel() Declaration public TocViewModel() TocViewModel(IEnumerable<TocItemViewModel>) Declaration public TocViewModel(IEnumerable<TocItemViewModel> items) Parameters Type Name Description IEnumerable < TocItemViewModel > items Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) TaskHelper.ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>) DocumentExceptionExtensions.RunAll<TElement, TResult>(IReadOnlyList<TElement>, Func<TElement, TResult>) DocumentExceptionExtensions.RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>) DocumentExceptionExtensions.RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>, Int32)"
  },
  "api/Microsoft.DocAsCode.Dfm.CustomizedRendererCreator.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CustomizedRendererCreator.html",
    "title": "Class CustomizedRendererCreator | DocFX website",
    "keywords": "Class CustomizedRendererCreator Inheritance Object CustomizedRendererCreator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public static class CustomizedRendererCreator Methods CreateRenderer(Object, IEnumerable<IDfmCustomizedRendererPartProvider>, IReadOnlyDictionary<String, Object>) Declaration public static object CreateRenderer(object innerRenderer, IEnumerable<IDfmCustomizedRendererPartProvider> partProviders, IReadOnlyDictionary<string, object> parameters) Parameters Type Name Description Object innerRenderer IEnumerable < IDfmCustomizedRendererPartProvider > partProviders IReadOnlyDictionary < String , Object > parameters Returns Type Description Object"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteBlockRule.html",
    "title": "Class DfmBlockquoteBlockRule | DocFX website",
    "keywords": "Class DfmBlockquoteBlockRule Inheritance Object MarkdownBlockquoteBlockRule DfmBlockquoteBlockRule Inherited Members MarkdownBlockquoteBlockRule.Blockquote MarkdownBlockquoteBlockRule.BlockquoteMatcher MarkdownBlockquoteBlockRule.LeadingBlockquote Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmBlockquoteBlockRule : MarkdownBlockquoteBlockRule, IMarkdownRule Properties Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownBlockquoteBlockRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides MarkdownBlockquoteBlockRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteHelper.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteHelper.html",
    "title": "Class DfmBlockquoteHelper | DocFX website",
    "keywords": "Class DfmBlockquoteHelper Inheritance Object DfmBlockquoteHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmBlockquoteHelper Methods SplitBlockquoteTokens(ImmutableArray<IMarkdownToken>) Declaration public static List<SplitToken> SplitBlockquoteTokens(ImmutableArray<IMarkdownToken> tokens) Parameters Type Name Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Returns Type Description List < SplitToken > Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmCodeExtractorHelper.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmCodeExtractorHelper.html",
    "title": "Class DfmCodeExtractorHelper | DocFX website",
    "keywords": "Class DfmCodeExtractorHelper Inheritance Object DfmCodeExtractorHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public static class DfmCodeExtractorHelper Fields AllowedIndentCharacters Declaration public static readonly List<char> AllowedIndentCharacters Field Value Type Description List < Char > Methods GetIndentLength(String) Declaration public static int GetIndentLength(string s) Parameters Type Name Description String s Returns Type Description Int32"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockToken.html",
    "title": "Class DfmVideoBlockToken | DocFX website",
    "keywords": "Class DfmVideoBlockToken Inheritance Object DfmVideoBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmVideoBlockToken : IMarkdownToken, IDfmBlockSpecialSplitToken Constructors DfmVideoBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public DfmVideoBlockToken(IMarkdownRule rule, IMarkdownContext context, string link, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String link SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Link Declaration public string Link { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmXrefAutoLinkInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmXrefAutoLinkInlineRule.html",
    "title": "Class DfmXrefAutoLinkInlineRule | DocFX website",
    "keywords": "Class DfmXrefAutoLinkInlineRule Xref auto link syntax: &lt;xref:uid&gt; &lt;xref:\"uid with space\"&gt; Inheritance Object DfmXrefAutoLinkInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmXrefAutoLinkInlineRule : IMarkdownRule Fields XrefAutoLinkRegexString Declaration public static readonly string XrefAutoLinkRegexString Field Value Type Description String XrefAutoLinkRegexWithQuoteString Declaration public static readonly string XrefAutoLinkRegexWithQuoteString Field Value Type Description String Properties Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmXrefInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmXrefInlineToken.html",
    "title": "Class DfmXrefInlineToken | DocFX website",
    "keywords": "Class DfmXrefInlineToken Inheritance Object DfmXrefInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmXrefInlineToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<DfmXrefInlineToken> Constructors DfmXrefInlineToken(IMarkdownRule, IMarkdownContext, String, ImmutableArray<IMarkdownToken>, String, Boolean, SourceInfo) Declaration public DfmXrefInlineToken(IMarkdownRule rule, IMarkdownContext context, string href, ImmutableArray<IMarkdownToken> content, string title, bool throwIfNotResolved, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String href System.Collections.Immutable.ImmutableArray < IMarkdownToken > content String title Boolean throwIfNotResolved SourceInfo sourceInfo Properties Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Href Declaration public string Href { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo ThrowIfNotResolved Declaration public bool ThrowIfNotResolved { get; } Property Value Type Description Boolean Title Declaration public string Title { get; } Property Value Type Description String Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public DfmXrefInlineToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description DfmXrefInlineToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmXrefShortcutInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmXrefShortcutInlineRule.html",
    "title": "Class DfmXrefShortcutInlineRule | DocFX website",
    "keywords": "Class DfmXrefShortcutInlineRule XREF regex: If content after @ is wrapped by ' or \" , it contains any character including white space If content after @ is not wrapped by ' or \" , It must start with word character a-z or A-Z It ends when a. line ends b. meets whitespaces c. line ends with . , , , ; , : , ! , ? and ~ d. meets 2 times or more . , , , ; , : , ! , ? and ~ Inheritance Object DfmXrefShortcutInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmXrefShortcutInlineRule : IMarkdownRule Fields XrefShortcutRegexString Declaration public static readonly string XrefShortcutRegexString Field Value Type Description String XrefShortcutRegexWithQuoteString Declaration public static readonly string XrefShortcutRegexWithQuoteString Field Value Type Description String Properties Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.html",
    "title": "Namespace Microsoft.DocAsCode.Dfm | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Dfm Classes CodeSnippetRegexExtractor CodeSnippetTag CustomizedRendererCreator DfmBlockquoteBlockRule DfmBlockquoteHelper DfmCodeExtractorHelper DfmContextExtensions DfmCustomizedRendererPartBase<TRenderer, TToken, TContext> DfmEmailInlineRule DfmEngine DfmEngineBuilder DfmFallbackHelper DfmFencesBlockHelper DfmFencesBlockPathQueryOption DfmFencesBlockRule DfmFencesBlockToken DfmFencesInlineRule DfmFencesInlineToken DfmFencesRule DfmFencesToken DfmIncludeBlockRule DfmIncludeBlockToken DfmIncludeInlineRule DfmIncludeInlineToken DfmJsonTokenTreeRender DfmMarkdownRenderer DfmNoteBlockRule DfmNoteBlockToken DfmRenderer DfmSectionBlockRule DfmSectionBlockToken DfmTagNameResolveResult DfmTextInlineRule DfmVideoBlockRule DfmVideoBlockToken DfmXrefAutoLinkInlineRule Xref auto link syntax: &lt;xref:uid&gt; &lt;xref:\"uid with space\"&gt; DfmXrefInlineToken DfmXrefShortcutInlineRule XREF regex: If content after @ is wrapped by ' or \" , it contains any character including white space If content after @ is not wrapped by ' or \" , It must start with word character a-z or A-Z It ends when a. line ends b. meets whitespaces c. line ends with . , , , ; , : , ! , ? and ~ d. meets 2 times or more . , , , ; , : , ! , ? and ~ DfmYamlHeaderBlockRule DfmYamlHeaderBlockToken DocfxFlavoredMarked FileCacheLite FlatNameCodeSnippetExtractor Flat name extrator works for snippet name exists in both start and end line representations E.g., comment representation needs snippet name exists in both start and end line comment FullFileBlockPathQueryOption LineRangeBlockPathQueryOption MultipleLineRangeBlockPathQueryOption PlugableRendererBase RecursiveNameCodeSnippetExtractor Recursive name extrator works for snippet name only exists in start line representation E.g., C# region representation only has snippet name in start line representation SplitToken TagNameBlockPathQueryOption Interfaces ICodeSnippetExtractor IDfmBlockSpecialSplitToken IDfmCustomizedRendererPart IDfmCustomizedRendererPartProvider IDfmEngineCustomizer IDfmFencesBlockPathQueryOption Enums CodeSnippetTagType"
  },
  "api/Microsoft.DocAsCode.Exceptions.DocfxException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.DocfxException.html",
    "title": "Class DocfxException | DocFX website",
    "keywords": "Class DocfxException Inheritance Object Exception DocfxException InvalidPreprocessorException ResourceFileExceedsMaxDepthException ExtractMetadataException PluginException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :Microsoft.DocAsCode.Common.dll Syntax [Serializable] public class DocfxException : Exception, ISerializable, _Exception Constructors DocfxException() Declaration public DocfxException() DocfxException(SerializationInfo, StreamingContext) Declaration protected DocfxException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context DocfxException(String) Declaration public DocfxException(string message) Parameters Type Name Description String message DocfxException(String, Exception) Declaration public DocfxException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.DocfxInitException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.DocfxInitException.html",
    "title": "Class DocfxInitException | DocFX website",
    "keywords": "Class DocfxInitException Inheritance Object Exception DocfxInitException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :docfx.dll Syntax public class DocfxInitException : Exception, ISerializable, _Exception Constructors DocfxInitException() Declaration public DocfxInitException() DocfxInitException(SerializationInfo, StreamingContext) Declaration protected DocfxInitException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context DocfxInitException(String) Declaration public DocfxInitException(string message) Parameters Type Name Description String message DocfxInitException(String, Exception) Declaration public DocfxInitException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.DocfxMetadataException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.DocfxMetadataException.html",
    "title": "Class DocfxMetadataException | DocFX website",
    "keywords": "Class DocfxMetadataException Inheritance Object Exception DocfxMetadataException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :docfx.dll Syntax public class DocfxMetadataException : Exception, ISerializable, _Exception Constructors DocfxMetadataException() Declaration public DocfxMetadataException() DocfxMetadataException(SerializationInfo, StreamingContext) Declaration protected DocfxMetadataException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context DocfxMetadataException(String) Declaration public DocfxMetadataException(string message) Parameters Type Name Description String message DocfxMetadataException(String, Exception) Declaration public DocfxMetadataException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmHtmlCommentBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmHtmlCommentBlockRule.html",
    "title": "Class GfmHtmlCommentBlockRule | DocFX website",
    "keywords": "Class GfmHtmlCommentBlockRule Inheritance Object GfmHtmlCommentBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmHtmlCommentBlockRule : IMarkdownRule Properties HtmlComment Declaration [Obsolete(\"Please use HtmlCommentMatcher.\")] public virtual Regex HtmlComment { get; } Property Value Type Description Regex HtmlCommentMatcher Declaration public virtual Matcher HtmlCommentMatcher { get; } Property Value Type Description Matcher Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmStrongEmInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmStrongEmInlineRule.html",
    "title": "Class GfmStrongEmInlineRule | DocFX website",
    "keywords": "Class GfmStrongEmInlineRule Inheritance Object GfmStrongEmInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmStrongEmInlineRule : IMarkdownRule Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name StrongEm Declaration public virtual Regex StrongEm { get; } Property Value Type Description Regex Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmStrongInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmStrongInlineRule.html",
    "title": "Class GfmStrongInlineRule | DocFX website",
    "keywords": "Class GfmStrongInlineRule Inheritance Object MarkdownStrongInlineRule GfmStrongInlineRule Inherited Members MarkdownStrongInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmStrongInlineRule : MarkdownStrongInlineRule, IMarkdownRule Properties Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownStrongInlineRule.Name Strong Declaration public override Regex Strong { get; } Property Value Type Description Regex Overrides MarkdownStrongInlineRule.Strong Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmTextInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmTextInlineRule.html",
    "title": "Class GfmTextInlineRule | DocFX website",
    "keywords": "Class GfmTextInlineRule Inheritance Object MarkdownTextInlineRule GfmTextInlineRule Inherited Members MarkdownTextInlineRule.Name MarkdownTextInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) MarkdownTextInlineRule.Smartypants(Options, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmTextInlineRule : MarkdownTextInlineRule, IMarkdownRule Properties Text Declaration public override Regex Text { get; } Property Value Type Description Regex Overrides MarkdownTextInlineRule.Text Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHrBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHrBlockToken.html",
    "title": "Class MarkdownHrBlockToken | DocFX website",
    "keywords": "Class MarkdownHrBlockToken Inheritance Object MarkdownHrBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHrBlockToken : IMarkdownToken Constructors MarkdownHrBlockToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownHrBlockToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHtmlBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHtmlBlockRule.html",
    "title": "Class MarkdownHtmlBlockRule | DocFX website",
    "keywords": "Class MarkdownHtmlBlockRule Inheritance Object MarkdownHtmlBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHtmlBlockRule : IMarkdownRule Properties Html Declaration [Obsolete(\"Please use HtmlMatcher.\")] public virtual Regex Html { get; } Property Value Type Description Regex HtmlMatcher Declaration public virtual Matcher HtmlMatcher { get; } Property Value Type Description Matcher Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHtmlBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHtmlBlockToken.html",
    "title": "Class MarkdownHtmlBlockToken | DocFX website",
    "keywords": "Class MarkdownHtmlBlockToken Inheritance Object MarkdownHtmlBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHtmlBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownHtmlBlockToken> Constructors MarkdownHtmlBlockToken(IMarkdownRule, IMarkdownContext, InlineContent, SourceInfo) Declaration public MarkdownHtmlBlockToken(IMarkdownRule rule, IMarkdownContext context, InlineContent content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context InlineContent content SourceInfo sourceInfo Properties Content Declaration public InlineContent Content { get; } Property Value Type Description InlineContent Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownHtmlBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownHtmlBlockToken Implements IMarkdownRewritable<T>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownIgnoreToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownIgnoreToken.html",
    "title": "Class MarkdownIgnoreToken | DocFX website",
    "keywords": "Class MarkdownIgnoreToken Inheritance Object MarkdownIgnoreToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public sealed class MarkdownIgnoreToken : IMarkdownToken Constructors MarkdownIgnoreToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownIgnoreToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownImageInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownImageInlineToken.html",
    "title": "Class MarkdownImageInlineToken | DocFX website",
    "keywords": "Class MarkdownImageInlineToken Inheritance Object MarkdownImageInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownImageInlineToken : IMarkdownToken Constructors MarkdownImageInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo, MarkdownLinkType, String) Declaration public MarkdownImageInlineToken(IMarkdownRule rule, IMarkdownContext context, string href, string title, string text, SourceInfo sourceInfo, MarkdownLinkType linkType, string refId) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String href String title String text SourceInfo sourceInfo MarkdownLinkType linkType String refId Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Href Declaration public string Href { get; } Property Value Type Description String LinkType Declaration public MarkdownLinkType LinkType { get; } Property Value Type Description MarkdownLinkType RefId Declaration public string RefId { get; } Property Value Type Description String Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Text Declaration public string Text { get; } Property Value Type Description String Title Declaration public string Title { get; } Property Value Type Description String Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownInlineContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownInlineContext.html",
    "title": "Class MarkdownInlineContext | DocFX website",
    "keywords": "Class MarkdownInlineContext Inheritance Object MarkdownInlineContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownInlineContext : IMarkdownContext Constructors MarkdownInlineContext(ImmutableList<IMarkdownRule>) Declaration public MarkdownInlineContext(ImmutableList<IMarkdownRule> rules) Parameters Type Name Description System.Collections.Immutable.ImmutableList < IMarkdownRule > rules MarkdownInlineContext(ImmutableList<IMarkdownRule>, ImmutableDictionary<String, Object>) Declaration protected MarkdownInlineContext(ImmutableList<IMarkdownRule> rules, ImmutableDictionary<string, object> variables) Parameters Type Name Description System.Collections.Immutable.ImmutableList < IMarkdownRule > rules System.Collections.Immutable.ImmutableDictionary < String , Object > variables Fields IsInLink Declaration public const string IsInLink = \"IsInLink\" Field Value Type Description String Properties Rules Declaration public ImmutableList<IMarkdownRule> Rules { get; } Property Value Type Description System.Collections.Immutable.ImmutableList < IMarkdownRule > Implements IMarkdownContext.Rules Variables Declaration public ImmutableDictionary<string, object> Variables { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Implements IMarkdownContext.Variables Methods CreateContext(ImmutableDictionary<String, Object>) Declaration public virtual IMarkdownContext CreateContext(ImmutableDictionary<string, object> variables) Parameters Type Name Description System.Collections.Immutable.ImmutableDictionary < String , Object > variables Returns Type Description IMarkdownContext Implements IMarkdownContext.CreateContext(ImmutableDictionary<String, Object>) GetIsInLink(IMarkdownContext) Declaration public static bool GetIsInLink(IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description Boolean Extension Methods DfmContextExtensions.GetFilePathStack(IMarkdownContext) DfmContextExtensions.SetFilePathStack(IMarkdownContext, ImmutableStack<String>) DfmContextExtensions.GetBaseFolder(IMarkdownContext) DfmContextExtensions.SetBaseFolder(IMarkdownContext, String) DfmContextExtensions.GetFallbackFolders(IMarkdownContext) DfmContextExtensions.SetFallbackFolders(IMarkdownContext, IReadOnlyList<String>) DfmContextExtensions.SetDependency(IMarkdownContext, HashSet<String>) DfmContextExtensions.ReportDependency(IMarkdownContext, String) DfmContextExtensions.ReportDependency(IMarkdownContext, IEnumerable<String>) DfmContextExtensions.GetIsInclude(IMarkdownContext) DfmContextExtensions.SetIsInclude(IMarkdownContext) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLHeadingBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLHeadingBlockRule.html",
    "title": "Class MarkdownLHeadingBlockRule | DocFX website",
    "keywords": "Class MarkdownLHeadingBlockRule Inheritance Object MarkdownLHeadingBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownLHeadingBlockRule : IMarkdownRule Properties LHeading Declaration [Obsolete(\"Please use LHeadingMatcher.\")] public virtual Regex LHeading { get; } Property Value Type Description Regex LHeadingMatcher Declaration public virtual Matcher LHeadingMatcher { get; } Property Value Type Description Matcher Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkBaseInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkBaseInlineRule.html",
    "title": "Class MarkdownLinkBaseInlineRule | DocFX website",
    "keywords": "Class MarkdownLinkBaseInlineRule Inheritance Object MarkdownLinkBaseInlineRule MarkdownLinkInlineRule MarkdownNoLinkInlineRule MarkdownRefLinkInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public abstract class MarkdownLinkBaseInlineRule : IMarkdownRule Properties Name Declaration public abstract string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods GenerateToken(IMarkdownParser, String, String, String, Boolean, SourceInfo, MarkdownLinkType, String) Declaration protected virtual IMarkdownToken GenerateToken(IMarkdownParser parser, string href, string title, string text, bool isImage, SourceInfo sourceInfo, MarkdownLinkType linkType, string refId) Parameters Type Name Description IMarkdownParser parser String href String title String text Boolean isImage SourceInfo sourceInfo MarkdownLinkType linkType String refId Returns Type Description IMarkdownToken TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public abstract IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.html",
    "title": "Namespace Microsoft.DocAsCode.MarkdownLite | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.MarkdownLite Classes GfmDelInlineRule GfmDelInlineToken GfmEmInlineRule GfmEmojiInlineRule GfmEmojiInlineToken GfmEngineBuilder GfmEscapeInlineRule GfmFencesBlockRule GfmHeadingBlockRule GfmHtmlCommentBlockRule GfmStrongEmInlineRule GfmStrongInlineRule GfmTextInlineRule GfmUrlInlineRule HtmlRenderer The html renderer for gfm. InlineContent JsonTokenTreeRenderer LinkObj MarkdownAutoLinkInlineRule MarkdownBlockContext MarkdownBlockquoteBlockRule MarkdownBlockquoteBlockToken MarkdownBrInlineRule MarkdownBrInlineToken MarkdownCodeBlockRule MarkdownCodeBlockToken MarkdownCodeInlineRule MarkdownCodeInlineToken MarkdownCommentInlineRule MarkdownDefBlockRule MarkdownEmInlineRule MarkdownEmInlineToken MarkdownEngine MarkdownEngineBuilder A builder for create an instance of IMarkdownEngine MarkdownEngineByOptionsBuilder MarkdownEscapedTextInlineRule MarkdownEscapeInlineRule MarkdownEscapeInlineToken MarkdownException MarkdownHeadingBlockRule MarkdownHeadingBlockToken MarkdownHrBlockRule MarkdownHrBlockToken MarkdownHtmlBlockRule MarkdownHtmlBlockToken MarkdownIgnoreToken MarkdownImageInlineToken MarkdownInlineContext MarkdownLHeadingBlockRule MarkdownLinkBaseInlineRule MarkdownLinkInlineRule MarkdownLinkInlineToken MarkdownListBlockRule MarkdownListBlockToken MarkdownListItemBlockToken MarkdownNewLineBlockRule MarkdownNewLineBlockToken MarkdownNoLinkInlineRule MarkdownNonParagraphBlockToken MarkdownNpTableBlockRule MarkdownParagraphBlockRule MarkdownParagraphBlockToken MarkdownParser MarkdownParserExtensions MarkdownParsingContext MarkdownParsingException MarkdownPreElementInlineRule MarkdownRawToken MarkdownRefLinkInlineRule MarkdownRenderer MarkdownRendererAdapter The adapter for markdown renderer, use dynamic dispatch. MarkdownRewriteEngine MarkdownStrongInlineRule MarkdownStrongInlineToken MarkdownTableBlockRule MarkdownTableBlockToken MarkdownTableItemBlockToken MarkdownTagInlineRule MarkdownTagInlineToken MarkdownTextBlockRule MarkdownTextInlineRule MarkdownTextToken MarkdownTokenExtensions MarkdownTokenRewriterFactory MarkdownTokenTreeValidatorFactory MarkdownTokenValidatorContext MarkdownTokenValidatorFactory Options StringBuffer A type like StringBuilder but only do concat. StringHelper TokenHelper TwoPhaseBlockToken Structs SourceInfo Interfaces IInitializable IMarkdownContext The context for markdown parser. It should be immutable. IMarkdownEngine Markdown engine IMarkdownExpression IMarkdownParser Markdown parser. IMarkdownParsingContext IMarkdownRenderer Markdown renderer. IMarkdownRewritable<T> Markdown rewritable (for object contains IMarkdownToken ). IMarkdownRewriteEngine Markdown rewrite engine. IMarkdownRule Markdown rule. IMarkdownToken The token for markdown. It should be immutable. IMarkdownTokenRewriter rewrite the markdown when rendering IMarkdownTokenTreeValidator IMarkdownTokenValidator IMarkdownTokenValidatorProvider Enums Align MarkdownLinkType"
  },
  "api/Microsoft.DocAsCode.MergeJsonConfig.html": {
    "href": "api/Microsoft.DocAsCode.MergeJsonConfig.html",
    "title": "Class MergeJsonConfig | DocFX website",
    "keywords": "Class MergeJsonConfig Inheritance Object MergeJsonConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] public class MergeJsonConfig Properties BaseDirectory Declaration [JsonIgnore] public string BaseDirectory { get; set; } Property Value Type Description String Content Declaration [JsonProperty(\"content\")] public FileMapping Content { get; set; } Property Value Type Description FileMapping Destination Declaration [JsonProperty(\"dest\")] public string Destination { get; set; } Property Value Type Description String FileMetadata Metadata that applies to some specific files. The key is the metadata name. For each item of the value: The key is the glob pattern to match the files. The value is the value of the metadata. Declaration [JsonProperty(\"fileMetadata\")] public Dictionary<string, FileMetadataPairs> FileMetadata { get; set; } Property Value Type Description Dictionary < String , FileMetadataPairs > GlobalMetadata Declaration [JsonProperty(\"globalMetadata\")] [JsonConverter(typeof (JObjectDictionaryToObjectDictionaryConverter))] public Dictionary<string, object> GlobalMetadata { get; set; } Property Value Type Description Dictionary < String , Object > OutputFolder Declaration [JsonIgnore] public string OutputFolder { get; set; } Property Value Type Description String TocMetadata Declaration [JsonProperty(\"tocMetadata\")] public ListWithStringFallback TocMetadata { get; set; } Property Value Type Description ListWithStringFallback Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParser.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParser.html",
    "title": "Class MarkdownParser | DocFX website",
    "keywords": "Class MarkdownParser Inheritance Object MarkdownParser Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownParser : IMarkdownParser Constructors MarkdownParser(IMarkdownContext, Options, Dictionary<String, LinkObj>) Declaration public MarkdownParser(IMarkdownContext context, Options options, Dictionary<string, LinkObj> links) Parameters Type Name Description IMarkdownContext context Options options Dictionary < String , LinkObj > links Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownParser.Context Links Declaration public Dictionary<string, LinkObj> Links { get; } Property Value Type Description Dictionary < String , LinkObj > Implements IMarkdownParser.Links Options Declaration public Options Options { get; } Property Value Type Description Options Implements IMarkdownParser.Options Methods Preprocess(String) Declaration protected virtual string Preprocess(string src) Parameters Type Name Description String src Returns Type Description String SwitchContext(IMarkdownContext) Declaration public IMarkdownContext SwitchContext(IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description IMarkdownContext Implements IMarkdownParser.SwitchContext(IMarkdownContext) Tokenize(SourceInfo) Declaration public ImmutableArray<IMarkdownToken> Tokenize(SourceInfo sourceInfo) Parameters Type Name Description SourceInfo sourceInfo Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Implements IMarkdownParser.Tokenize(SourceInfo) Extension Methods MarkdownParserExtensions.SwitchContext(IMarkdownParser, String, Object) MarkdownParserExtensions.SwitchContext(IMarkdownParser, IReadOnlyDictionary<String, Object>) MarkdownParserExtensions.TokenizeInline(IMarkdownParser, SourceInfo) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParserExtensions.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParserExtensions.html",
    "title": "Class MarkdownParserExtensions | DocFX website",
    "keywords": "Class MarkdownParserExtensions Inheritance Object MarkdownParserExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class MarkdownParserExtensions Methods SwitchContext(IMarkdownParser, IReadOnlyDictionary<String, Object>) Declaration public static IMarkdownContext SwitchContext(this IMarkdownParser parser, IReadOnlyDictionary<string, object> variables) Parameters Type Name Description IMarkdownParser parser IReadOnlyDictionary < String , Object > variables Returns Type Description IMarkdownContext SwitchContext(IMarkdownParser, String, Object) Declaration public static IMarkdownContext SwitchContext(this IMarkdownParser parser, string variableKey, object value) Parameters Type Name Description IMarkdownParser parser String variableKey Object value Returns Type Description IMarkdownContext TokenizeInline(IMarkdownParser, SourceInfo) Declaration public static InlineContent TokenizeInline(this IMarkdownParser parser, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownParser parser SourceInfo sourceInfo Returns Type Description InlineContent"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParsingContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParsingContext.html",
    "title": "Class MarkdownParsingContext | DocFX website",
    "keywords": "Class MarkdownParsingContext Inheritance Object MarkdownParsingContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownParsingContext : IMarkdownParsingContext Constructors MarkdownParsingContext(SourceInfo) Declaration public MarkdownParsingContext(SourceInfo sourceInfo) Parameters Type Name Description SourceInfo sourceInfo Properties CurrentMarkdown Declaration public string CurrentMarkdown { get; } Property Value Type Description String Implements IMarkdownParsingContext.CurrentMarkdown File Declaration public string File { get; } Property Value Type Description String Implements IMarkdownParsingContext.File IsInParagraph Declaration public bool IsInParagraph { get; set; } Property Value Type Description Boolean Implements IMarkdownParsingContext.IsInParagraph LineNumber Declaration public int LineNumber { get; } Property Value Type Description Int32 Implements IMarkdownParsingContext.LineNumber Markdown Declaration public string Markdown { get; } Property Value Type Description String Implements IMarkdownParsingContext.Markdown Methods Consume(Int32) Declaration public SourceInfo Consume(int charCount) Parameters Type Name Description Int32 charCount Returns Type Description SourceInfo Implements IMarkdownParsingContext.Consume(Int32) Match(Matcher) Declaration public MatchResult Match(Matcher matcher) Parameters Type Name Description Matcher matcher Returns Type Description MatchResult Implements IMarkdownParsingContext.Match(Matcher) ToSourceInfo() Declaration public SourceInfo ToSourceInfo() Returns Type Description SourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParsingException.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParsingException.html",
    "title": "Class MarkdownParsingException | DocFX website",
    "keywords": "Class MarkdownParsingException Inheritance Object Exception MarkdownException MarkdownParsingException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownParsingException : MarkdownException, ISerializable, _Exception Constructors MarkdownParsingException(SourceInfo) Declaration public MarkdownParsingException(SourceInfo sourceInfo) Parameters Type Name Description SourceInfo sourceInfo MarkdownParsingException(String, SourceInfo) Declaration public MarkdownParsingException(string message, SourceInfo sourceInfo) Parameters Type Name Description String message SourceInfo sourceInfo MarkdownParsingException(String, SourceInfo, Exception) Declaration public MarkdownParsingException(string message, SourceInfo sourceInfo, Exception innerException) Parameters Type Name Description String message SourceInfo sourceInfo Exception innerException Properties SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownPreElementInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownPreElementInlineRule.html",
    "title": "Class MarkdownPreElementInlineRule | DocFX website",
    "keywords": "Class MarkdownPreElementInlineRule Inheritance Object MarkdownPreElementInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownPreElementInlineRule : IMarkdownRule Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name PreElement Declaration public virtual Regex PreElement { get; } Property Value Type Description Regex Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRawToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRawToken.html",
    "title": "Class MarkdownRawToken | DocFX website",
    "keywords": "Class MarkdownRawToken Inheritance Object MarkdownRawToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownRawToken : IMarkdownToken Constructors MarkdownRawToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownRawToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children(IMarkdownToken) MarkdownTokenExtensions.Children<T>(IMarkdownToken) MarkdownTokenExtensions.Descendants(IMarkdownToken) MarkdownTokenExtensions.Descendants<T>(IMarkdownToken) JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRefLinkInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRefLinkInlineRule.html",
    "title": "Class MarkdownRefLinkInlineRule | DocFX website",
    "keywords": "Class MarkdownRefLinkInlineRule Inheritance Object MarkdownLinkBaseInlineRule MarkdownRefLinkInlineRule Inherited Members MarkdownLinkBaseInlineRule.GenerateToken(IMarkdownParser, String, String, String, Boolean, SourceInfo, MarkdownLinkType, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownRefLinkInlineRule : MarkdownLinkBaseInlineRule, IMarkdownRule Properties Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownLinkBaseInlineRule.Name RefLink Declaration public virtual Regex RefLink { get; } Property Value Type Description Regex Methods TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides MarkdownLinkBaseInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSYamlModelGenerator.html",
    "title": "Class CSYamlModelGenerator | DocFX website",
    "keywords": "Class CSYamlModelGenerator Inheritance Object YamlModelGenerator SimpleYamlModelGenerator CSYamlModelGenerator Inherited Members SimpleYamlModelGenerator.ShortFormat SimpleYamlModelGenerator.QualifiedFormat SimpleYamlModelGenerator.Language Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class CSYamlModelGenerator : SimpleYamlModelGenerator Constructors CSYamlModelGenerator() Declaration public CSYamlModelGenerator() Methods DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter, Boolean) Declaration protected override void GenerateReference(ISymbol symbol, ReferenceItem reference, SymbolVisitorAdapter adapter, bool asOverload) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol ReferenceItem reference SymbolVisitorAdapter adapter Boolean asOverload Overrides SimpleYamlModelGenerator.GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter, Boolean) GetLiteralExpressionCore(Object, ITypeSymbol) Declaration public static ExpressionSyntax GetLiteralExpressionCore(object value, ITypeSymbol type) Parameters Type Name Description Object value Microsoft.CodeAnalysis.ITypeSymbol type Returns Type Description Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Declaration protected override string GetSyntaxContent(MemberType typeKind, ISymbol symbol, SymbolVisitorAdapter adapter) Parameters Type Name Description MemberType typeKind Microsoft.CodeAnalysis.ISymbol symbol SymbolVisitorAdapter adapter Returns Type Description String Overrides SimpleYamlModelGenerator.GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.DefaultFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.DefaultFilterVisitor.html",
    "title": "Class DefaultFilterVisitor | DocFX website",
    "keywords": "Class DefaultFilterVisitor Inheritance Object DefaultFilterVisitor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class DefaultFilterVisitor : IFilterVisitor Methods CanVisitApi(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitApi(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Implements IFilterVisitor.CanVisitApi(ISymbol, Boolean, IFilterVisitor) CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitAttribute(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Implements IFilterVisitor.CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) FilterVisitorExtensions.WithConfig(IFilterVisitor, String) FilterVisitorExtensions.WithConfig(IFilterVisitor, ConfigFilterRule) FilterVisitorExtensions.WithCache(IFilterVisitor)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.DelegatingFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.DelegatingFilterVisitor.html",
    "title": "Class DelegatingFilterVisitor | DocFX website",
    "keywords": "Class DelegatingFilterVisitor Inheritance Object DelegatingFilterVisitor CachedFilterVisitor ConfigFilterVisitor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class DelegatingFilterVisitor : IFilterVisitor Constructors DelegatingFilterVisitor(IFilterVisitor) Declaration public DelegatingFilterVisitor(IFilterVisitor inner) Parameters Type Name Description IFilterVisitor inner Properties Inner Declaration protected IFilterVisitor Inner { get; } Property Value Type Description IFilterVisitor Methods CanVisitApi(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitApi(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Implements IFilterVisitor.CanVisitApi(ISymbol, Boolean, IFilterVisitor) CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) Declaration protected virtual bool CanVisitApiCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitAttribute(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Implements IFilterVisitor.CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Declaration protected virtual bool CanVisitAttributeCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer) FilterVisitorExtensions.WithConfig(IFilterVisitor, String) FilterVisitorExtensions.WithConfig(IFilterVisitor, ConfigFilterRule) FilterVisitorExtensions.WithCache(IFilterVisitor)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKind.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKind.html",
    "title": "Enum ExtendedSymbolKind | DocFX website",
    "keywords": "Enum ExtendedSymbolKind Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public enum ExtendedSymbolKind Fields Name Description Assembly Class Delegate Enum Event Field Interface Member Method Namespace Property Struct Type Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer) ExtendedSymbolKindHelper.Contains(ISymbol)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKindHelper.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKindHelper.html",
    "title": "Class ExtendedSymbolKindHelper | DocFX website",
    "keywords": "Class ExtendedSymbolKindHelper Inheritance Object ExtendedSymbolKindHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class ExtendedSymbolKindHelper Methods Contains(ExtendedSymbolKind, ISymbol) Declaration public static bool Contains(this ExtendedSymbolKind kind, ISymbol symbol) Parameters Type Name Description ExtendedSymbolKind kind Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description Boolean"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataInputModel.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataInputModel.html",
    "title": "Class ExtractMetadataInputModel | DocFX website",
    "keywords": "Class ExtractMetadataInputModel Inheritance Object ExtractMetadataInputModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ExtractMetadataInputModel Properties ApiFolderName Declaration public string ApiFolderName { get; set; } Property Value Type Description String ExternalReferences Declaration public List<string> ExternalReferences { get; set; } Property Value Type Description List < String > FilterConfigFile Declaration public string FilterConfigFile { get; set; } Property Value Type Description String ForceRebuild Declaration public bool ForceRebuild { get; set; } Property Value Type Description Boolean GlobalNamespaceId Declaration public string GlobalNamespaceId { get; set; } Property Value Type Description String IndexFileName Declaration public string IndexFileName { get; set; } Property Value Type Description String Items Declaration public Dictionary<string, List<string>> Items { get; set; } Property Value Type Description Dictionary < String , List < String >> MSBuildProperties Declaration public Dictionary<string, string> MSBuildProperties { get; set; } Property Value Type Description Dictionary < String , String > PreserveRawInlineComments Declaration public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean ShouldSkipMarkup Declaration public bool ShouldSkipMarkup { get; set; } Property Value Type Description Boolean TocFileName Declaration public string TocFileName { get; set; } Property Value Type Description String UseCompatibilityFileName Declaration public bool UseCompatibilityFileName { get; set; } Property Value Type Description Boolean Methods Clone() Declaration public ExtractMetadataInputModel Clone() Returns Type Description ExtractMetadataInputModel ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataWorker.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataWorker.html",
    "title": "Class ExtractMetadataWorker | DocFX website",
    "keywords": "Class ExtractMetadataWorker Inheritance Object ExtractMetadataWorker Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public sealed class ExtractMetadataWorker : IDisposable Constructors ExtractMetadataWorker(ExtractMetadataInputModel, Boolean, Boolean) Declaration public ExtractMetadataWorker(ExtractMetadataInputModel input, bool rebuild, bool useCompatibilityFileName) Parameters Type Name Description ExtractMetadataInputModel input Boolean rebuild Boolean useCompatibilityFileName Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() ExtractMetadataAsync() Declaration public Task ExtractMetadataAsync() Returns Type Description Task Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.FilterVisitorExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.FilterVisitorExtensions.html",
    "title": "Class FilterVisitorExtensions | DocFX website",
    "keywords": "Class FilterVisitorExtensions Inheritance Object FilterVisitorExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class FilterVisitorExtensions Methods WithCache(IFilterVisitor) Declaration public static IFilterVisitor WithCache(this IFilterVisitor fv) Parameters Type Name Description IFilterVisitor fv Returns Type Description IFilterVisitor WithConfig(IFilterVisitor, ConfigFilterRule) Declaration public static IFilterVisitor WithConfig(this IFilterVisitor fv, ConfigFilterRule rule) Parameters Type Name Description IFilterVisitor fv ConfigFilterRule rule Returns Type Description IFilterVisitor WithConfig(IFilterVisitor, String) Declaration public static IFilterVisitor WithConfig(this IFilterVisitor fv, string configFile) Parameters Type Name Description IFilterVisitor fv String configFile Returns Type Description IFilterVisitor"
  },
  "api/Microsoft.DocAsCode.Plugins.IncrementalInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IncrementalInfo.html",
    "title": "Class IncrementalInfo | DocFX website",
    "keywords": "Class IncrementalInfo Inheritance Object IncrementalInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class IncrementalInfo Properties Processors Declaration [JsonProperty(\"processors\")] public IReadOnlyDictionary<string, IncrementalStatus> Processors { get; } Property Value Type Description IReadOnlyDictionary < String , IncrementalStatus > Status Declaration [JsonProperty(\"status\")] public IncrementalStatus Status { get; } Property Value Type Description IncrementalStatus Methods ReportProcessorStatus(String, Boolean, String) Declaration public void ReportProcessorStatus(string processor, bool canIncremental, string details = null) Parameters Type Name Description String processor Boolean canIncremental String details ReportStatus(Boolean, IncrementalPhase, String) Declaration public void ReportStatus(bool canIncremental, IncrementalPhase incrementalPhase, string details = null) Parameters Type Name Description Boolean canIncremental IncrementalPhase incrementalPhase String details Extension Methods JsonUtility.ToJsonString(Object, Formatting, JsonSerializer)"
  }
}